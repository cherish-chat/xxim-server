// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: msg.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 推送事件
type MsgMQBody_Event int32

const (
	// 插入消息并推送消息
	MsgMQBody_SendMsgListSync MsgMQBody_Event = 0
)

// Enum value maps for MsgMQBody_Event.
var (
	MsgMQBody_Event_name = map[int32]string{
		0: "SendMsgListSync",
	}
	MsgMQBody_Event_value = map[string]int32{
		"SendMsgListSync": 0,
	}
)

func (x MsgMQBody_Event) Enum() *MsgMQBody_Event {
	p := new(MsgMQBody_Event)
	*p = x
	return p
}

func (x MsgMQBody_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgMQBody_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[0].Descriptor()
}

func (MsgMQBody_Event) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[0]
}

func (x MsgMQBody_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgMQBody_Event.Descriptor instead.
func (MsgMQBody_Event) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0, 0}
}

// 服务器通过websocket发送给客户端的消息体
type MsgMQBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event MsgMQBody_Event `protobuf:"varint,1,opt,name=event,proto3,enum=pb.MsgMQBody_Event" json:"event"`
	Data  []byte          `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *MsgMQBody) Reset() {
	*x = MsgMQBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMQBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMQBody) ProtoMessage() {}

func (x *MsgMQBody) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMQBody.ProtoReflect.Descriptor instead.
func (*MsgMQBody) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0}
}

func (x *MsgMQBody) GetEvent() MsgMQBody_Event {
	if x != nil {
		return x.Event
	}
	return MsgMQBody_SendMsgListSync
}

func (x *MsgMQBody) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MsgData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientMsgId    string               `protobuf:"bytes,1,opt,name=clientMsgId,proto3" json:"clientMsgId"`
	ServerMsgId    string               `protobuf:"bytes,2,opt,name=serverMsgId,proto3" json:"serverMsgId"`
	ClientTime     int64                `protobuf:"varint,3,opt,name=clientTime,proto3" json:"clientTime"`
	ServerTime     int64                `protobuf:"varint,4,opt,name=serverTime,proto3" json:"serverTime"`
	Sender         string               `protobuf:"bytes,11,opt,name=sender,proto3" json:"sender"`                                // 发送者id
	SenderInfo     string               `protobuf:"bytes,12,opt,name=senderInfo,proto3" json:"senderInfo"`                        // 发送者信息
	SenderConvInfo string               `protobuf:"bytes,13,opt,name=senderConvInfo,proto3" json:"senderConvInfo"`                // 发送者在会话中的信息
	ConvType       ConvType             `protobuf:"varint,21,opt,name=convType,proto3,enum=pb.ConvType" json:"convType"`          // 会话类型
	Receiver       *MsgData_Receiver    `protobuf:"bytes,22,opt,name=receiver,proto3" json:"receiver"`                            // 接收者id (单聊时为对方id, 群聊时为群id)
	ContentType    ContentType          `protobuf:"varint,31,opt,name=contentType,proto3,enum=pb.ContentType" json:"contentType"` // 消息内容类型
	Content        []byte               `protobuf:"bytes,32,opt,name=content,proto3" json:"content"`                              // 消息内容
	Seq            int64                `protobuf:"varint,33,opt,name=seq,proto3" json:"seq"`                                     // 消息序号 会话内唯一且递增
	Options        *MsgData_Options     `protobuf:"bytes,41,opt,name=options,proto3" json:"options"`                              // 消息选项
	OfflinePush    *MsgData_OfflinePush `protobuf:"bytes,42,opt,name=offlinePush,proto3" json:"offlinePush"`                      // 离线推送
	Ext            *MsgData_Ext         `protobuf:"bytes,100,opt,name=ext,proto3" json:"ext"`
}

func (x *MsgData) Reset() {
	*x = MsgData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData) ProtoMessage() {}

func (x *MsgData) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData.ProtoReflect.Descriptor instead.
func (*MsgData) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1}
}

func (x *MsgData) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *MsgData) GetServerMsgId() string {
	if x != nil {
		return x.ServerMsgId
	}
	return ""
}

func (x *MsgData) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

func (x *MsgData) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *MsgData) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgData) GetSenderInfo() string {
	if x != nil {
		return x.SenderInfo
	}
	return ""
}

func (x *MsgData) GetSenderConvInfo() string {
	if x != nil {
		return x.SenderConvInfo
	}
	return ""
}

func (x *MsgData) GetConvType() ConvType {
	if x != nil {
		return x.ConvType
	}
	return ConvType_SINGLE
}

func (x *MsgData) GetReceiver() *MsgData_Receiver {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *MsgData) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_UNKNOWN
}

func (x *MsgData) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MsgData) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MsgData) GetOptions() *MsgData_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *MsgData) GetOfflinePush() *MsgData_OfflinePush {
	if x != nil {
		return x.OfflinePush
	}
	return nil
}

func (x *MsgData) GetExt() *MsgData_Ext {
	if x != nil {
		return x.Ext
	}
	return nil
}

type MsgDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgDataList []*MsgData `protobuf:"bytes,1,rep,name=msgDataList,proto3" json:"msgDataList"`
}

func (x *MsgDataList) Reset() {
	*x = MsgDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDataList) ProtoMessage() {}

func (x *MsgDataList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDataList.ProtoReflect.Descriptor instead.
func (*MsgDataList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{2}
}

func (x *MsgDataList) GetMsgDataList() []*MsgData {
	if x != nil {
		return x.MsgDataList
	}
	return nil
}

type SendMsgListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requester   *Requester `protobuf:"bytes,1,opt,name=requester,proto3" json:"requester"`
	MsgDataList []*MsgData `protobuf:"bytes,2,rep,name=msgDataList,proto3" json:"msgDataList"`
	// options
	// 1. 延迟时间（秒） 不得大于 864000秒 也就是10天
	DeliverAfter *int64 `protobuf:"varint,3,opt,name=deliverAfter,proto3,oneof" json:"deliverAfter"`
}

func (x *SendMsgListReq) Reset() {
	*x = SendMsgListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgListReq) ProtoMessage() {}

func (x *SendMsgListReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgListReq.ProtoReflect.Descriptor instead.
func (*SendMsgListReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{3}
}

func (x *SendMsgListReq) GetRequester() *Requester {
	if x != nil {
		return x.Requester
	}
	return nil
}

func (x *SendMsgListReq) GetMsgDataList() []*MsgData {
	if x != nil {
		return x.MsgDataList
	}
	return nil
}

func (x *SendMsgListReq) GetDeliverAfter() int64 {
	if x != nil && x.DeliverAfter != nil {
		return *x.DeliverAfter
	}
	return 0
}

type MsgData_OfflinePush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content"`
	Sound   string `protobuf:"bytes,3,opt,name=sound,proto3" json:"sound"`
	Badge   string `protobuf:"bytes,4,opt,name=badge,proto3" json:"badge"`
	Payload string `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload"`
}

func (x *MsgData_OfflinePush) Reset() {
	*x = MsgData_OfflinePush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData_OfflinePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData_OfflinePush) ProtoMessage() {}

func (x *MsgData_OfflinePush) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData_OfflinePush.ProtoReflect.Descriptor instead.
func (*MsgData_OfflinePush) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1, 0}
}

func (x *MsgData_OfflinePush) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgData_OfflinePush) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MsgData_OfflinePush) GetSound() string {
	if x != nil {
		return x.Sound
	}
	return ""
}

func (x *MsgData_OfflinePush) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *MsgData_OfflinePush) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type MsgData_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否需要离线推送
	OfflinePush bool `protobuf:"varint,1,opt,name=offlinePush,proto3" json:"offlinePush"`
	// 服务端是否需要保存消息
	StorageForServer bool `protobuf:"varint,2,opt,name=storageForServer,proto3" json:"storageForServer"`
	// 客户端是否需要保存消息
	StorageForClient bool `protobuf:"varint,3,opt,name=storageForClient,proto3" json:"storageForClient"`
	// 消息是否需要计入未读数
	UnreadCount bool `protobuf:"varint,4,opt,name=unreadCount,proto3" json:"unreadCount"`
	// 是否需要解密 （端对端加密技术，服务端无法解密）
	NeedDecrypt bool `protobuf:"varint,5,opt,name=needDecrypt,proto3" json:"needDecrypt"`
}

func (x *MsgData_Options) Reset() {
	*x = MsgData_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData_Options) ProtoMessage() {}

func (x *MsgData_Options) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData_Options.ProtoReflect.Descriptor instead.
func (*MsgData_Options) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1, 1}
}

func (x *MsgData_Options) GetOfflinePush() bool {
	if x != nil {
		return x.OfflinePush
	}
	return false
}

func (x *MsgData_Options) GetStorageForServer() bool {
	if x != nil {
		return x.StorageForServer
	}
	return false
}

func (x *MsgData_Options) GetStorageForClient() bool {
	if x != nil {
		return x.StorageForClient
	}
	return false
}

func (x *MsgData_Options) GetUnreadCount() bool {
	if x != nil {
		return x.UnreadCount
	}
	return false
}

func (x *MsgData_Options) GetNeedDecrypt() bool {
	if x != nil {
		return x.NeedDecrypt
	}
	return false
}

type MsgData_Ext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// at
	At      []string `protobuf:"bytes,1,rep,name=at,proto3" json:"at"`           // at全体为["...", "all", ...]
	Source  string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source"`   // 消息来源
	Version string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version"` // 消息版本
	// 发送者使用的平台
	Platform string `protobuf:"bytes,4,opt,name=platform,proto3" json:"platform"`
	// 发送者的设备id
	DeviceId string `protobuf:"bytes,5,opt,name=deviceId,proto3" json:"deviceId"`
	// 发送者使用的客户端版本
	ClientVersion string `protobuf:"bytes,6,opt,name=clientVersion,proto3" json:"clientVersion"`
}

func (x *MsgData_Ext) Reset() {
	*x = MsgData_Ext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData_Ext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData_Ext) ProtoMessage() {}

func (x *MsgData_Ext) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData_Ext.ProtoReflect.Descriptor instead.
func (*MsgData_Ext) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1, 2}
}

func (x *MsgData_Ext) GetAt() []string {
	if x != nil {
		return x.At
	}
	return nil
}

func (x *MsgData_Ext) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *MsgData_Ext) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MsgData_Ext) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *MsgData_Ext) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *MsgData_Ext) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

type MsgData_Receiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        *string `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId"`               // 单聊时为对方的userId
	GroupId       *string `protobuf:"bytes,2,opt,name=groupId,proto3,oneof" json:"groupId"`             // 群聊时为群组id
	GroupToUserId *string `protobuf:"bytes,3,opt,name=groupToUserId,proto3,oneof" json:"groupToUserId"` // 群转单聊id
}

func (x *MsgData_Receiver) Reset() {
	*x = MsgData_Receiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData_Receiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData_Receiver) ProtoMessage() {}

func (x *MsgData_Receiver) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData_Receiver.ProtoReflect.Descriptor instead.
func (*MsgData_Receiver) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1, 3}
}

func (x *MsgData_Receiver) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *MsgData_Receiver) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *MsgData_Receiver) GetGroupToUserId() string {
	if x != nil && x.GroupToUserId != nil {
		return *x.GroupToUserId
	}
	return ""
}

var File_msg_proto protoreflect.FileDescriptor

var file_msg_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a,
	0x09, 0x4d, 0x73, 0x67, 0x4d, 0x51, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x73, 0x67, 0x4d, 0x51, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1c, 0x0a, 0x05, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x00, 0x22, 0xca, 0x09, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d,
	0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x76, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x76, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73,
	0x65, 0x71, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x39, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x52,
	0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x74, 0x52, 0x03, 0x65, 0x78, 0x74, 0x1a,
	0x83, 0x01, 0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xc7, 0x01, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x65, 0x65, 0x64, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x1a,
	0xa5, 0x01, 0x0a, 0x03, 0x45, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x02, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x9a, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x29, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x2d, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x32, 0xb7, 0x01, 0x0a, 0x0a,
	0x6d, 0x73, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x11, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x10, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msg_proto_rawDescOnce sync.Once
	file_msg_proto_rawDescData = file_msg_proto_rawDesc
)

func file_msg_proto_rawDescGZIP() []byte {
	file_msg_proto_rawDescOnce.Do(func() {
		file_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_proto_rawDescData)
	})
	return file_msg_proto_rawDescData
}

var file_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_msg_proto_goTypes = []interface{}{
	(MsgMQBody_Event)(0),        // 0: pb.MsgMQBody.Event
	(*MsgMQBody)(nil),           // 1: pb.MsgMQBody
	(*MsgData)(nil),             // 2: pb.MsgData
	(*MsgDataList)(nil),         // 3: pb.MsgDataList
	(*SendMsgListReq)(nil),      // 4: pb.SendMsgListReq
	(*MsgData_OfflinePush)(nil), // 5: pb.MsgData.OfflinePush
	(*MsgData_Options)(nil),     // 6: pb.MsgData.Options
	(*MsgData_Ext)(nil),         // 7: pb.MsgData.Ext
	(*MsgData_Receiver)(nil),    // 8: pb.MsgData.Receiver
	(ConvType)(0),               // 9: pb.ConvType
	(ContentType)(0),            // 10: pb.ContentType
	(*Requester)(nil),           // 11: pb.Requester
	(*CommonResp)(nil),          // 12: pb.CommonResp
}
var file_msg_proto_depIdxs = []int32{
	0,  // 0: pb.MsgMQBody.event:type_name -> pb.MsgMQBody.Event
	9,  // 1: pb.MsgData.convType:type_name -> pb.ConvType
	8,  // 2: pb.MsgData.receiver:type_name -> pb.MsgData.Receiver
	10, // 3: pb.MsgData.contentType:type_name -> pb.ContentType
	6,  // 4: pb.MsgData.options:type_name -> pb.MsgData.Options
	5,  // 5: pb.MsgData.offlinePush:type_name -> pb.MsgData.OfflinePush
	7,  // 6: pb.MsgData.ext:type_name -> pb.MsgData.Ext
	2,  // 7: pb.MsgDataList.msgDataList:type_name -> pb.MsgData
	11, // 8: pb.SendMsgListReq.requester:type_name -> pb.Requester
	2,  // 9: pb.SendMsgListReq.msgDataList:type_name -> pb.MsgData
	3,  // 10: pb.msgService.InsertMsgDataList:input_type -> pb.MsgDataList
	4,  // 11: pb.msgService.SendMsgListSync:input_type -> pb.SendMsgListReq
	4,  // 12: pb.msgService.SendMsgListAsync:input_type -> pb.SendMsgListReq
	12, // 13: pb.msgService.InsertMsgDataList:output_type -> pb.CommonResp
	12, // 14: pb.msgService.SendMsgListSync:output_type -> pb.CommonResp
	12, // 15: pb.msgService.SendMsgListAsync:output_type -> pb.CommonResp
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_msg_proto_init() }
func file_msg_proto_init() {
	if File_msg_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMQBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgData_OfflinePush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgData_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgData_Ext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgData_Receiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_msg_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_msg_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_msg_proto_goTypes,
		DependencyIndexes: file_msg_proto_depIdxs,
		EnumInfos:         file_msg_proto_enumTypes,
		MessageInfos:      file_msg_proto_msgTypes,
	}.Build()
	File_msg_proto = out.File
	file_msg_proto_rawDesc = nil
	file_msg_proto_goTypes = nil
	file_msg_proto_depIdxs = nil
}
