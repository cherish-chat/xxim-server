// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: msg.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 推送事件
type MsgMQBody_Event int32

const (
	// 插入消息并推送消息
	MsgMQBody_SendMsgListSync MsgMQBody_Event = 0
)

// Enum value maps for MsgMQBody_Event.
var (
	MsgMQBody_Event_name = map[int32]string{
		0: "SendMsgListSync",
	}
	MsgMQBody_Event_value = map[string]int32{
		"SendMsgListSync": 0,
	}
)

func (x MsgMQBody_Event) Enum() *MsgMQBody_Event {
	p := new(MsgMQBody_Event)
	*p = x
	return p
}

func (x MsgMQBody_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgMQBody_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[0].Descriptor()
}

func (MsgMQBody_Event) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[0]
}

func (x MsgMQBody_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgMQBody_Event.Descriptor instead.
func (MsgMQBody_Event) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0, 0}
}

// 服务器通过websocket发送给客户端的消息体
type MsgMQBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event MsgMQBody_Event `protobuf:"varint,1,opt,name=event,proto3,enum=pb.MsgMQBody_Event" json:"event"`
	Data  []byte          `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *MsgMQBody) Reset() {
	*x = MsgMQBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMQBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMQBody) ProtoMessage() {}

func (x *MsgMQBody) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMQBody.ProtoReflect.Descriptor instead.
func (*MsgMQBody) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0}
}

func (x *MsgMQBody) GetEvent() MsgMQBody_Event {
	if x != nil {
		return x.Event
	}
	return MsgMQBody_SendMsgListSync
}

func (x *MsgMQBody) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MsgData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientMsgId    string               `protobuf:"bytes,1,opt,name=clientMsgId,proto3" json:"clientMsgId"`
	ServerMsgId    string               `protobuf:"bytes,2,opt,name=serverMsgId,proto3" json:"serverMsgId"`
	ClientTime     string               `protobuf:"bytes,3,opt,name=clientTime,proto3" json:"clientTime"`
	ServerTime     string               `protobuf:"bytes,4,opt,name=serverTime,proto3" json:"serverTime"`
	Sender         string               `protobuf:"bytes,11,opt,name=sender,proto3" json:"sender"`                                // 发送者id
	SenderInfo     string               `protobuf:"bytes,12,opt,name=senderInfo,proto3" json:"senderInfo"`                        // 发送者信息
	SenderConvInfo string               `protobuf:"bytes,13,opt,name=senderConvInfo,proto3" json:"senderConvInfo"`                // 发送者在会话中的信息
	Receiver       *MsgData_Receiver    `protobuf:"bytes,21,opt,name=receiver,proto3" json:"receiver"`                            // 接收者id (单聊时为对方id, 群聊时为群id)
	ConvId         string               `protobuf:"bytes,22,opt,name=convId,proto3" json:"convId"`                                // 会话id
	AtUsers        []string             `protobuf:"bytes,23,rep,name=atUsers,proto3" json:"atUsers"`                              // 强提醒用户id列表 用户不在线时，会收到离线推送，除非用户屏蔽了该会话 如果需要提醒所有人，可以传入"all"
	ContentType    ContentType          `protobuf:"varint,31,opt,name=contentType,proto3,enum=pb.ContentType" json:"contentType"` // 消息内容类型
	Content        []byte               `protobuf:"bytes,32,opt,name=content,proto3" json:"content"`                              // 消息内容
	Seq            string               `protobuf:"bytes,33,opt,name=seq,proto3" json:"seq"`                                      // 消息序号 会话内唯一且递增
	Options        *MsgData_Options     `protobuf:"bytes,41,opt,name=options,proto3" json:"options"`                              // 消息选项
	OfflinePush    *MsgData_OfflinePush `protobuf:"bytes,42,opt,name=offlinePush,proto3" json:"offlinePush"`                      // 离线推送
	Ext            []byte               `protobuf:"bytes,100,opt,name=ext,proto3" json:"ext"`
}

func (x *MsgData) Reset() {
	*x = MsgData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData) ProtoMessage() {}

func (x *MsgData) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData.ProtoReflect.Descriptor instead.
func (*MsgData) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1}
}

func (x *MsgData) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *MsgData) GetServerMsgId() string {
	if x != nil {
		return x.ServerMsgId
	}
	return ""
}

func (x *MsgData) GetClientTime() string {
	if x != nil {
		return x.ClientTime
	}
	return ""
}

func (x *MsgData) GetServerTime() string {
	if x != nil {
		return x.ServerTime
	}
	return ""
}

func (x *MsgData) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgData) GetSenderInfo() string {
	if x != nil {
		return x.SenderInfo
	}
	return ""
}

func (x *MsgData) GetSenderConvInfo() string {
	if x != nil {
		return x.SenderConvInfo
	}
	return ""
}

func (x *MsgData) GetReceiver() *MsgData_Receiver {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *MsgData) GetConvId() string {
	if x != nil {
		return x.ConvId
	}
	return ""
}

func (x *MsgData) GetAtUsers() []string {
	if x != nil {
		return x.AtUsers
	}
	return nil
}

func (x *MsgData) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_UNKNOWN
}

func (x *MsgData) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MsgData) GetSeq() string {
	if x != nil {
		return x.Seq
	}
	return ""
}

func (x *MsgData) GetOptions() *MsgData_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *MsgData) GetOfflinePush() *MsgData_OfflinePush {
	if x != nil {
		return x.OfflinePush
	}
	return nil
}

func (x *MsgData) GetExt() []byte {
	if x != nil {
		return x.Ext
	}
	return nil
}

type MsgDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgDataList []*MsgData `protobuf:"bytes,1,rep,name=msgDataList,proto3" json:"msgDataList"`
}

func (x *MsgDataList) Reset() {
	*x = MsgDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDataList) ProtoMessage() {}

func (x *MsgDataList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDataList.ProtoReflect.Descriptor instead.
func (*MsgDataList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{2}
}

func (x *MsgDataList) GetMsgDataList() []*MsgData {
	if x != nil {
		return x.MsgDataList
	}
	return nil
}

type SendMsgListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq   *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	MsgDataList []*MsgData `protobuf:"bytes,2,rep,name=msgDataList,proto3" json:"msgDataList"`
	// options
	// 1. 延迟时间（秒） 不得大于 864000秒 也就是10天
	DeliverAfter *int32 `protobuf:"varint,11,opt,name=deliverAfter,proto3,oneof" json:"deliverAfter"`
}

func (x *SendMsgListReq) Reset() {
	*x = SendMsgListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgListReq) ProtoMessage() {}

func (x *SendMsgListReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgListReq.ProtoReflect.Descriptor instead.
func (*SendMsgListReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{3}
}

func (x *SendMsgListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *SendMsgListReq) GetMsgDataList() []*MsgData {
	if x != nil {
		return x.MsgDataList
	}
	return nil
}

func (x *SendMsgListReq) GetDeliverAfter() int32 {
	if x != nil && x.DeliverAfter != nil {
		return *x.DeliverAfter
	}
	return 0
}

type SendMsgListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *SendMsgListResp) Reset() {
	*x = SendMsgListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgListResp) ProtoMessage() {}

func (x *SendMsgListResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgListResp.ProtoReflect.Descriptor instead.
func (*SendMsgListResp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{4}
}

func (x *SendMsgListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type PushMsgListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgDataList []*MsgData `protobuf:"bytes,1,rep,name=msgDataList,proto3" json:"msgDataList"`
}

func (x *PushMsgListReq) Reset() {
	*x = PushMsgListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMsgListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMsgListReq) ProtoMessage() {}

func (x *PushMsgListReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMsgListReq.ProtoReflect.Descriptor instead.
func (*PushMsgListReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{5}
}

func (x *PushMsgListReq) GetMsgDataList() []*MsgData {
	if x != nil {
		return x.MsgDataList
	}
	return nil
}

type GetMsgListByConvIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	ConvId    string     `protobuf:"bytes,2,opt,name=convId,proto3" json:"convId"`
	SeqList   []string   `protobuf:"bytes,3,rep,name=seqList,proto3" json:"seqList"`
	Push      bool       `protobuf:"varint,4,opt,name=push,proto3" json:"push"`
}

func (x *GetMsgListByConvIdReq) Reset() {
	*x = GetMsgListByConvIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMsgListByConvIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgListByConvIdReq) ProtoMessage() {}

func (x *GetMsgListByConvIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgListByConvIdReq.ProtoReflect.Descriptor instead.
func (*GetMsgListByConvIdReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{6}
}

func (x *GetMsgListByConvIdReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetMsgListByConvIdReq) GetConvId() string {
	if x != nil {
		return x.ConvId
	}
	return ""
}

func (x *GetMsgListByConvIdReq) GetSeqList() []string {
	if x != nil {
		return x.SeqList
	}
	return nil
}

func (x *GetMsgListByConvIdReq) GetPush() bool {
	if x != nil {
		return x.Push
	}
	return false
}

type GetMsgListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	MsgDataList []*MsgData  `protobuf:"bytes,2,rep,name=msgDataList,proto3" json:"msgDataList"`
}

func (x *GetMsgListResp) Reset() {
	*x = GetMsgListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMsgListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgListResp) ProtoMessage() {}

func (x *GetMsgListResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgListResp.ProtoReflect.Descriptor instead.
func (*GetMsgListResp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{7}
}

func (x *GetMsgListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMsgListResp) GetMsgDataList() []*MsgData {
	if x != nil {
		return x.MsgDataList
	}
	return nil
}

type GetMsgByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq   *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	ServerMsgId *string    `protobuf:"bytes,2,opt,name=serverMsgId,proto3,oneof" json:"serverMsgId"`
	ClientMsgId *string    `protobuf:"bytes,3,opt,name=clientMsgId,proto3,oneof" json:"clientMsgId"`
	Push        bool       `protobuf:"varint,4,opt,name=push,proto3" json:"push"`
}

func (x *GetMsgByIdReq) Reset() {
	*x = GetMsgByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMsgByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgByIdReq) ProtoMessage() {}

func (x *GetMsgByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgByIdReq.ProtoReflect.Descriptor instead.
func (*GetMsgByIdReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{8}
}

func (x *GetMsgByIdReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetMsgByIdReq) GetServerMsgId() string {
	if x != nil && x.ServerMsgId != nil {
		return *x.ServerMsgId
	}
	return ""
}

func (x *GetMsgByIdReq) GetClientMsgId() string {
	if x != nil && x.ClientMsgId != nil {
		return *x.ClientMsgId
	}
	return ""
}

func (x *GetMsgByIdReq) GetPush() bool {
	if x != nil {
		return x.Push
	}
	return false
}

type GetMsgByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	MsgData    *MsgData    `protobuf:"bytes,2,opt,name=msgData,proto3" json:"msgData"`
}

func (x *GetMsgByIdResp) Reset() {
	*x = GetMsgByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMsgByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgByIdResp) ProtoMessage() {}

func (x *GetMsgByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgByIdResp.ProtoReflect.Descriptor instead.
func (*GetMsgByIdResp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{9}
}

func (x *GetMsgByIdResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMsgByIdResp) GetMsgData() *MsgData {
	if x != nil {
		return x.MsgData
	}
	return nil
}

//批量设置用户某会话的minseq
type BatchSetMinSeqReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq  *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	ConvId     string     `protobuf:"bytes,2,opt,name=convId,proto3" json:"convId"`
	UserIdList []string   `protobuf:"bytes,3,rep,name=userIdList,proto3" json:"userIdList"`
	MinSeq     string     `protobuf:"bytes,4,opt,name=minSeq,proto3" json:"minSeq"`
}

func (x *BatchSetMinSeqReq) Reset() {
	*x = BatchSetMinSeqReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSetMinSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSetMinSeqReq) ProtoMessage() {}

func (x *BatchSetMinSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSetMinSeqReq.ProtoReflect.Descriptor instead.
func (*BatchSetMinSeqReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{10}
}

func (x *BatchSetMinSeqReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *BatchSetMinSeqReq) GetConvId() string {
	if x != nil {
		return x.ConvId
	}
	return ""
}

func (x *BatchSetMinSeqReq) GetUserIdList() []string {
	if x != nil {
		return x.UserIdList
	}
	return nil
}

func (x *BatchSetMinSeqReq) GetMinSeq() string {
	if x != nil {
		return x.MinSeq
	}
	return ""
}

type BatchSetMinSeqResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *BatchSetMinSeqResp) Reset() {
	*x = BatchSetMinSeqResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSetMinSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSetMinSeqResp) ProtoMessage() {}

func (x *BatchSetMinSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSetMinSeqResp.ProtoReflect.Descriptor instead.
func (*BatchSetMinSeqResp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{11}
}

func (x *BatchSetMinSeqResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//批量获取会话的seq
type BatchGetConvSeqReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq  *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	ConvIdList []string   `protobuf:"bytes,2,rep,name=convIdList,proto3" json:"convIdList"`
}

func (x *BatchGetConvSeqReq) Reset() {
	*x = BatchGetConvSeqReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetConvSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetConvSeqReq) ProtoMessage() {}

func (x *BatchGetConvSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetConvSeqReq.ProtoReflect.Descriptor instead.
func (*BatchGetConvSeqReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{12}
}

func (x *BatchGetConvSeqReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *BatchGetConvSeqReq) GetConvIdList() []string {
	if x != nil {
		return x.ConvIdList
	}
	return nil
}

type BatchGetConvSeqResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp                             `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	ConvSeqMap map[string]*BatchGetConvSeqResp_ConvSeq `protobuf:"bytes,2,rep,name=convSeqMap,proto3" json:"convSeqMap" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BatchGetConvSeqResp) Reset() {
	*x = BatchGetConvSeqResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetConvSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetConvSeqResp) ProtoMessage() {}

func (x *BatchGetConvSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetConvSeqResp.ProtoReflect.Descriptor instead.
func (*BatchGetConvSeqResp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{13}
}

func (x *BatchGetConvSeqResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *BatchGetConvSeqResp) GetConvSeqMap() map[string]*BatchGetConvSeqResp_ConvSeq {
	if x != nil {
		return x.ConvSeqMap
	}
	return nil
}

//GetConvSubscribersReq 获取一个会话里所有的消息订阅者
type GetConvSubscribersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	ConvId    string     `protobuf:"bytes,2,opt,name=convId,proto3" json:"convId"`
	// 最后的活跃时间 会查询 >= lastActiveTime 的订阅者
	LastActiveTime *int64 `protobuf:"varint,3,opt,name=lastActiveTime,proto3,oneof" json:"lastActiveTime"`
}

func (x *GetConvSubscribersReq) Reset() {
	*x = GetConvSubscribersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConvSubscribersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvSubscribersReq) ProtoMessage() {}

func (x *GetConvSubscribersReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvSubscribersReq.ProtoReflect.Descriptor instead.
func (*GetConvSubscribersReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{14}
}

func (x *GetConvSubscribersReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetConvSubscribersReq) GetConvId() string {
	if x != nil {
		return x.ConvId
	}
	return ""
}

func (x *GetConvSubscribersReq) GetLastActiveTime() int64 {
	if x != nil && x.LastActiveTime != nil {
		return *x.LastActiveTime
	}
	return 0
}

type GetConvSubscribersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp                               `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	UserIdList []string                                  `protobuf:"bytes,2,rep,name=userIdList,proto3" json:"userIdList"`
	PodIpMap   map[string]*GetConvSubscribersRespUidList `protobuf:"bytes,3,rep,name=podIpMap,proto3" json:"podIpMap" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetConvSubscribersResp) Reset() {
	*x = GetConvSubscribersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConvSubscribersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvSubscribersResp) ProtoMessage() {}

func (x *GetConvSubscribersResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvSubscribersResp.ProtoReflect.Descriptor instead.
func (*GetConvSubscribersResp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{15}
}

func (x *GetConvSubscribersResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetConvSubscribersResp) GetUserIdList() []string {
	if x != nil {
		return x.UserIdList
	}
	return nil
}

func (x *GetConvSubscribersResp) GetPodIpMap() map[string]*GetConvSubscribersRespUidList {
	if x != nil {
		return x.PodIpMap
	}
	return nil
}

type MsgData_OfflinePush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content"`
	Payload string `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload"`
}

func (x *MsgData_OfflinePush) Reset() {
	*x = MsgData_OfflinePush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData_OfflinePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData_OfflinePush) ProtoMessage() {}

func (x *MsgData_OfflinePush) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData_OfflinePush.ProtoReflect.Descriptor instead.
func (*MsgData_OfflinePush) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1, 0}
}

func (x *MsgData_OfflinePush) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgData_OfflinePush) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MsgData_OfflinePush) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type MsgData_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 服务端是否需要保存消息
	StorageForServer bool `protobuf:"varint,1,opt,name=storageForServer,proto3" json:"storageForServer"`
	// 客户端是否需要保存消息
	StorageForClient bool `protobuf:"varint,2,opt,name=storageForClient,proto3" json:"storageForClient"`
	// 是否需要解密 （端对端加密技术，服务端无法解密）
	NeedDecrypt bool `protobuf:"varint,3,opt,name=needDecrypt,proto3" json:"needDecrypt"`
	// 是否需要离线推送
	OfflinePush bool `protobuf:"varint,4,opt,name=offlinePush,proto3" json:"offlinePush"`
	// 是否需要重新渲染会话
	UpdateConvMsg bool `protobuf:"varint,5,opt,name=updateConvMsg,proto3" json:"updateConvMsg"`
	// 消息是否需要计入未读数
	UpdateUnreadCount bool `protobuf:"varint,6,opt,name=updateUnreadCount,proto3" json:"updateUnreadCount"`
}

func (x *MsgData_Options) Reset() {
	*x = MsgData_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData_Options) ProtoMessage() {}

func (x *MsgData_Options) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData_Options.ProtoReflect.Descriptor instead.
func (*MsgData_Options) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1, 1}
}

func (x *MsgData_Options) GetStorageForServer() bool {
	if x != nil {
		return x.StorageForServer
	}
	return false
}

func (x *MsgData_Options) GetStorageForClient() bool {
	if x != nil {
		return x.StorageForClient
	}
	return false
}

func (x *MsgData_Options) GetNeedDecrypt() bool {
	if x != nil {
		return x.NeedDecrypt
	}
	return false
}

func (x *MsgData_Options) GetOfflinePush() bool {
	if x != nil {
		return x.OfflinePush
	}
	return false
}

func (x *MsgData_Options) GetUpdateConvMsg() bool {
	if x != nil {
		return x.UpdateConvMsg
	}
	return false
}

func (x *MsgData_Options) GetUpdateUnreadCount() bool {
	if x != nil {
		return x.UpdateUnreadCount
	}
	return false
}

type MsgData_Receiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  *string `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId"`   // 单聊时为对方的userId
	GroupId *string `protobuf:"bytes,2,opt,name=groupId,proto3,oneof" json:"groupId"` // 群聊时为群组id
}

func (x *MsgData_Receiver) Reset() {
	*x = MsgData_Receiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData_Receiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData_Receiver) ProtoMessage() {}

func (x *MsgData_Receiver) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData_Receiver.ProtoReflect.Descriptor instead.
func (*MsgData_Receiver) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1, 2}
}

func (x *MsgData_Receiver) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *MsgData_Receiver) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

type BatchGetConvSeqResp_ConvSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvId     string `protobuf:"bytes,1,opt,name=convId,proto3" json:"convId"`
	MinSeq     string `protobuf:"bytes,2,opt,name=minSeq,proto3" json:"minSeq"`
	MaxSeq     string `protobuf:"bytes,3,opt,name=maxSeq,proto3" json:"maxSeq"`
	UpdateTime string `protobuf:"bytes,4,opt,name=updateTime,proto3" json:"updateTime"`
}

func (x *BatchGetConvSeqResp_ConvSeq) Reset() {
	*x = BatchGetConvSeqResp_ConvSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetConvSeqResp_ConvSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetConvSeqResp_ConvSeq) ProtoMessage() {}

func (x *BatchGetConvSeqResp_ConvSeq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetConvSeqResp_ConvSeq.ProtoReflect.Descriptor instead.
func (*BatchGetConvSeqResp_ConvSeq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{13, 0}
}

func (x *BatchGetConvSeqResp_ConvSeq) GetConvId() string {
	if x != nil {
		return x.ConvId
	}
	return ""
}

func (x *BatchGetConvSeqResp_ConvSeq) GetMinSeq() string {
	if x != nil {
		return x.MinSeq
	}
	return ""
}

func (x *BatchGetConvSeqResp_ConvSeq) GetMaxSeq() string {
	if x != nil {
		return x.MaxSeq
	}
	return ""
}

func (x *BatchGetConvSeqResp_ConvSeq) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type GetConvSubscribersRespUidList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=userIds,proto3" json:"userIds"`
	PodIp   string   `protobuf:"bytes,2,opt,name=podIp,proto3" json:"podIp"`
}

func (x *GetConvSubscribersRespUidList) Reset() {
	*x = GetConvSubscribersRespUidList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConvSubscribersRespUidList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvSubscribersRespUidList) ProtoMessage() {}

func (x *GetConvSubscribersRespUidList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvSubscribersRespUidList.ProtoReflect.Descriptor instead.
func (*GetConvSubscribersRespUidList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetConvSubscribersRespUidList) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *GetConvSubscribersRespUidList) GetPodIp() string {
	if x != nil {
		return x.PodIp
	}
	return ""
}

var File_msg_proto protoreflect.FileDescriptor

var file_msg_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x09, 0x4d, 0x73, 0x67,
	0x4d, 0x51, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x51,
	0x42, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1c, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x10, 0x00, 0x22, 0xe0, 0x07, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x65,
	0x78, 0x74, 0x1a, 0x57, 0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xf9, 0x01, 0x0a, 0x07,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x5d, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x41, 0x0a,
	0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x3f, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x2d, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x8a, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x75,
	0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x75, 0x73, 0x68, 0x22, 0x6f,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2d, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xbe, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x25,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x73, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x75, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x75, 0x73, 0x68,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x64,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64,
	0x22, 0x67, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x22, 0x90, 0x01, 0x0a, 0x11, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x71, 0x12,
	0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x76, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x22, 0x44, 0x0a, 0x12,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x61, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x53, 0x65, 0x71, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x76, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe1, 0x02, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x76, 0x53, 0x65, 0x71, 0x4d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x53,
	0x65, 0x71, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x76,
	0x53, 0x65, 0x71, 0x4d, 0x61, 0x70, 0x1a, 0x71, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e,
	0x53, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x5e, 0x0a, 0x0f, 0x43, 0x6f, 0x6e,
	0x76, 0x53, 0x65, 0x71, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x53,
	0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x65, 0x71, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9c, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xca, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x49, 0x70, 0x4d, 0x61, 0x70, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x50, 0x6f, 0x64, 0x49, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x70, 0x6f, 0x64, 0x49, 0x70, 0x4d, 0x61, 0x70, 0x1a, 0x39, 0x0a, 0x07, 0x75, 0x69, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x6f, 0x64, 0x49, 0x70, 0x1a, 0x5f, 0x0a, 0x0d, 0x50, 0x6f, 0x64, 0x49, 0x70, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xbd, 0x05, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x73,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a,
	0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x10, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0b, 0x50, 0x75,
	0x73, 0x68, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43,
	0x6f, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x0e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x12,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e,
	0x53, 0x65, 0x71, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x53, 0x65, 0x71, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x65, 0x71, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x65, 0x71,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0f, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x16,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msg_proto_rawDescOnce sync.Once
	file_msg_proto_rawDescData = file_msg_proto_rawDesc
)

func file_msg_proto_rawDescGZIP() []byte {
	file_msg_proto_rawDescOnce.Do(func() {
		file_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_proto_rawDescData)
	})
	return file_msg_proto_rawDescData
}

var file_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_msg_proto_goTypes = []interface{}{
	(MsgMQBody_Event)(0),                  // 0: pb.MsgMQBody.Event
	(*MsgMQBody)(nil),                     // 1: pb.MsgMQBody
	(*MsgData)(nil),                       // 2: pb.MsgData
	(*MsgDataList)(nil),                   // 3: pb.MsgDataList
	(*SendMsgListReq)(nil),                // 4: pb.SendMsgListReq
	(*SendMsgListResp)(nil),               // 5: pb.SendMsgListResp
	(*PushMsgListReq)(nil),                // 6: pb.PushMsgListReq
	(*GetMsgListByConvIdReq)(nil),         // 7: pb.GetMsgListByConvIdReq
	(*GetMsgListResp)(nil),                // 8: pb.GetMsgListResp
	(*GetMsgByIdReq)(nil),                 // 9: pb.GetMsgByIdReq
	(*GetMsgByIdResp)(nil),                // 10: pb.GetMsgByIdResp
	(*BatchSetMinSeqReq)(nil),             // 11: pb.BatchSetMinSeqReq
	(*BatchSetMinSeqResp)(nil),            // 12: pb.BatchSetMinSeqResp
	(*BatchGetConvSeqReq)(nil),            // 13: pb.BatchGetConvSeqReq
	(*BatchGetConvSeqResp)(nil),           // 14: pb.BatchGetConvSeqResp
	(*GetConvSubscribersReq)(nil),         // 15: pb.GetConvSubscribersReq
	(*GetConvSubscribersResp)(nil),        // 16: pb.GetConvSubscribersResp
	(*MsgData_OfflinePush)(nil),           // 17: pb.MsgData.OfflinePush
	(*MsgData_Options)(nil),               // 18: pb.MsgData.Options
	(*MsgData_Receiver)(nil),              // 19: pb.MsgData.Receiver
	(*BatchGetConvSeqResp_ConvSeq)(nil),   // 20: pb.BatchGetConvSeqResp.ConvSeq
	nil,                                   // 21: pb.BatchGetConvSeqResp.ConvSeqMapEntry
	(*GetConvSubscribersRespUidList)(nil), // 22: pb.GetConvSubscribersResp.uidList
	nil,                                   // 23: pb.GetConvSubscribersResp.PodIpMapEntry
	(ContentType)(0),                      // 24: pb.ContentType
	(*CommonReq)(nil),                     // 25: pb.CommonReq
	(*CommonResp)(nil),                    // 26: pb.CommonResp
	(*AfterConnectReq)(nil),               // 27: pb.AfterConnectReq
	(*AfterDisconnectReq)(nil),            // 28: pb.AfterDisconnectReq
}
var file_msg_proto_depIdxs = []int32{
	0,  // 0: pb.MsgMQBody.event:type_name -> pb.MsgMQBody.Event
	19, // 1: pb.MsgData.receiver:type_name -> pb.MsgData.Receiver
	24, // 2: pb.MsgData.contentType:type_name -> pb.ContentType
	18, // 3: pb.MsgData.options:type_name -> pb.MsgData.Options
	17, // 4: pb.MsgData.offlinePush:type_name -> pb.MsgData.OfflinePush
	2,  // 5: pb.MsgDataList.msgDataList:type_name -> pb.MsgData
	25, // 6: pb.SendMsgListReq.commonReq:type_name -> pb.CommonReq
	2,  // 7: pb.SendMsgListReq.msgDataList:type_name -> pb.MsgData
	26, // 8: pb.SendMsgListResp.commonResp:type_name -> pb.CommonResp
	2,  // 9: pb.PushMsgListReq.msgDataList:type_name -> pb.MsgData
	25, // 10: pb.GetMsgListByConvIdReq.commonReq:type_name -> pb.CommonReq
	26, // 11: pb.GetMsgListResp.commonResp:type_name -> pb.CommonResp
	2,  // 12: pb.GetMsgListResp.msgDataList:type_name -> pb.MsgData
	25, // 13: pb.GetMsgByIdReq.commonReq:type_name -> pb.CommonReq
	26, // 14: pb.GetMsgByIdResp.commonResp:type_name -> pb.CommonResp
	2,  // 15: pb.GetMsgByIdResp.msgData:type_name -> pb.MsgData
	25, // 16: pb.BatchSetMinSeqReq.commonReq:type_name -> pb.CommonReq
	26, // 17: pb.BatchSetMinSeqResp.commonResp:type_name -> pb.CommonResp
	25, // 18: pb.BatchGetConvSeqReq.commonReq:type_name -> pb.CommonReq
	26, // 19: pb.BatchGetConvSeqResp.commonResp:type_name -> pb.CommonResp
	21, // 20: pb.BatchGetConvSeqResp.convSeqMap:type_name -> pb.BatchGetConvSeqResp.ConvSeqMapEntry
	25, // 21: pb.GetConvSubscribersReq.commonReq:type_name -> pb.CommonReq
	26, // 22: pb.GetConvSubscribersResp.commonResp:type_name -> pb.CommonResp
	23, // 23: pb.GetConvSubscribersResp.podIpMap:type_name -> pb.GetConvSubscribersResp.PodIpMapEntry
	20, // 24: pb.BatchGetConvSeqResp.ConvSeqMapEntry.value:type_name -> pb.BatchGetConvSeqResp.ConvSeq
	22, // 25: pb.GetConvSubscribersResp.PodIpMapEntry.value:type_name -> pb.GetConvSubscribersResp.uidList
	3,  // 26: pb.msgService.InsertMsgDataList:input_type -> pb.MsgDataList
	4,  // 27: pb.msgService.SendMsgListSync:input_type -> pb.SendMsgListReq
	4,  // 28: pb.msgService.SendMsgListAsync:input_type -> pb.SendMsgListReq
	6,  // 29: pb.msgService.PushMsgList:input_type -> pb.PushMsgListReq
	7,  // 30: pb.msgService.GetMsgListByConvId:input_type -> pb.GetMsgListByConvIdReq
	9,  // 31: pb.msgService.GetMsgById:input_type -> pb.GetMsgByIdReq
	11, // 32: pb.msgService.BatchSetMinSeq:input_type -> pb.BatchSetMinSeqReq
	13, // 33: pb.msgService.BatchGetConvSeq:input_type -> pb.BatchGetConvSeqReq
	27, // 34: pb.msgService.AfterConnect:input_type -> pb.AfterConnectReq
	28, // 35: pb.msgService.AfterDisconnect:input_type -> pb.AfterDisconnectReq
	15, // 36: pb.msgService.GetConvSubscribers:input_type -> pb.GetConvSubscribersReq
	3,  // 37: pb.msgService.InsertMsgDataList:output_type -> pb.MsgDataList
	5,  // 38: pb.msgService.SendMsgListSync:output_type -> pb.SendMsgListResp
	5,  // 39: pb.msgService.SendMsgListAsync:output_type -> pb.SendMsgListResp
	26, // 40: pb.msgService.PushMsgList:output_type -> pb.CommonResp
	8,  // 41: pb.msgService.GetMsgListByConvId:output_type -> pb.GetMsgListResp
	10, // 42: pb.msgService.GetMsgById:output_type -> pb.GetMsgByIdResp
	12, // 43: pb.msgService.BatchSetMinSeq:output_type -> pb.BatchSetMinSeqResp
	14, // 44: pb.msgService.BatchGetConvSeq:output_type -> pb.BatchGetConvSeqResp
	26, // 45: pb.msgService.AfterConnect:output_type -> pb.CommonResp
	26, // 46: pb.msgService.AfterDisconnect:output_type -> pb.CommonResp
	16, // 47: pb.msgService.GetConvSubscribers:output_type -> pb.GetConvSubscribersResp
	37, // [37:48] is the sub-list for method output_type
	26, // [26:37] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_msg_proto_init() }
func file_msg_proto_init() {
	if File_msg_proto != nil {
		return
	}
	file_conn_proto_init()
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMQBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMsgListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMsgListByConvIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMsgListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMsgByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMsgByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSetMinSeqReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSetMinSeqResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetConvSeqReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetConvSeqResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConvSubscribersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConvSubscribersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgData_OfflinePush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgData_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgData_Receiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetConvSeqResp_ConvSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConvSubscribersRespUidList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_msg_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_msg_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_msg_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_msg_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_msg_proto_goTypes,
		DependencyIndexes: file_msg_proto_depIdxs,
		EnumInfos:         file_msg_proto_enumTypes,
		MessageInfos:      file_msg_proto_msgTypes,
	}.Build()
	File_msg_proto = out.File
	file_msg_proto_rawDesc = nil
	file_msg_proto_goTypes = nil
	file_msg_proto_depIdxs = nil
}
