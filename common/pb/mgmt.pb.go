// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: mgmt.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//GetServerConfigReq 获取服务器配置请求
type GetServerConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq  *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	ServerName string     `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName"`
}

func (x *GetServerConfigReq) Reset() {
	*x = GetServerConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerConfigReq) ProtoMessage() {}

func (x *GetServerConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerConfigReq.ProtoReflect.Descriptor instead.
func (*GetServerConfigReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{0}
}

func (x *GetServerConfigReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetServerConfigReq) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

//GetServerConfigResp 获取服务器配置响应
type GetServerConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Config     []byte      `protobuf:"bytes,2,opt,name=config,proto3" json:"config"`
}

func (x *GetServerConfigResp) Reset() {
	*x = GetServerConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerConfigResp) ProtoMessage() {}

func (x *GetServerConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerConfigResp.ProtoReflect.Descriptor instead.
func (*GetServerConfigResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{1}
}

func (x *GetServerConfigResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetServerConfigResp) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

//GetServerAllConfigReq 获取所有服务器配置请求
type GetServerAllConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
}

func (x *GetServerAllConfigReq) Reset() {
	*x = GetServerAllConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigReq) ProtoMessage() {}

func (x *GetServerAllConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigReq.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{2}
}

func (x *GetServerAllConfigReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

//GetServerAllConfigResp 获取所有服务器配置响应
type GetServerAllConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp                               `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Common      *GetServerAllConfigResp_CommonConfig      `protobuf:"bytes,2,opt,name=common,proto3" json:"common"`
	ConnRpc     *GetServerAllConfigResp_ConnRpcConfig     `protobuf:"bytes,3,opt,name=connRpc,proto3" json:"connRpc"`
	ImRpc       *GetServerAllConfigResp_ImRpcConfig       `protobuf:"bytes,4,opt,name=imRpc,proto3" json:"imRpc"`
	MsgRpc      *GetServerAllConfigResp_MsgRpcConfig      `protobuf:"bytes,5,opt,name=msgRpc,proto3" json:"msgRpc"`
	UserRpc     *GetServerAllConfigResp_UserRpcConfig     `protobuf:"bytes,6,opt,name=userRpc,proto3" json:"userRpc"`
	RelationRpc *GetServerAllConfigResp_RelationRpcConfig `protobuf:"bytes,7,opt,name=relationRpc,proto3" json:"relationRpc"`
	GroupRpc    *GetServerAllConfigResp_GroupRpcConfig    `protobuf:"bytes,8,opt,name=groupRpc,proto3" json:"groupRpc"`
	NoticeRpc   *GetServerAllConfigResp_NoticeRpcConfig   `protobuf:"bytes,9,opt,name=noticeRpc,proto3" json:"noticeRpc"`
	Mgmt        *GetServerAllConfigResp_MgmtConfig        `protobuf:"bytes,10,opt,name=mgmt,proto3" json:"mgmt"`
}

func (x *GetServerAllConfigResp) Reset() {
	*x = GetServerAllConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp) ProtoMessage() {}

func (x *GetServerAllConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3}
}

func (x *GetServerAllConfigResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetServerAllConfigResp) GetCommon() *GetServerAllConfigResp_CommonConfig {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetServerAllConfigResp) GetConnRpc() *GetServerAllConfigResp_ConnRpcConfig {
	if x != nil {
		return x.ConnRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetImRpc() *GetServerAllConfigResp_ImRpcConfig {
	if x != nil {
		return x.ImRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetMsgRpc() *GetServerAllConfigResp_MsgRpcConfig {
	if x != nil {
		return x.MsgRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetUserRpc() *GetServerAllConfigResp_UserRpcConfig {
	if x != nil {
		return x.UserRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetRelationRpc() *GetServerAllConfigResp_RelationRpcConfig {
	if x != nil {
		return x.RelationRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetGroupRpc() *GetServerAllConfigResp_GroupRpcConfig {
	if x != nil {
		return x.GroupRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetNoticeRpc() *GetServerAllConfigResp_NoticeRpcConfig {
	if x != nil {
		return x.NoticeRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetMgmt() *GetServerAllConfigResp_MgmtConfig {
	if x != nil {
		return x.Mgmt
	}
	return nil
}

type GetServerAllConfigResp_TelemetryConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndPoint string  `protobuf:"bytes,1,opt,name=endPoint,proto3" json:"endPoint"`
	Sampler  float32 `protobuf:"fixed32,2,opt,name=sampler,proto3" json:"sampler"`
	Batcher  string  `protobuf:"bytes,3,opt,name=batcher,proto3" json:"batcher"`
}

func (x *GetServerAllConfigResp_TelemetryConfig) Reset() {
	*x = GetServerAllConfigResp_TelemetryConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_TelemetryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_TelemetryConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_TelemetryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_TelemetryConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_TelemetryConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetServerAllConfigResp_TelemetryConfig) GetEndPoint() string {
	if x != nil {
		return x.EndPoint
	}
	return ""
}

func (x *GetServerAllConfigResp_TelemetryConfig) GetSampler() float32 {
	if x != nil {
		return x.Sampler
	}
	return 0
}

func (x *GetServerAllConfigResp_TelemetryConfig) GetBatcher() string {
	if x != nil {
		return x.Batcher
	}
	return ""
}

type GetServerAllConfigResp_RedisConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	Pass string `protobuf:"bytes,3,opt,name=pass,proto3" json:"pass"`
	Tls  bool   `protobuf:"varint,4,opt,name=tls,proto3" json:"tls"`
}

func (x *GetServerAllConfigResp_RedisConfig) Reset() {
	*x = GetServerAllConfigResp_RedisConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_RedisConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_RedisConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_RedisConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_RedisConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_RedisConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GetServerAllConfigResp_RedisConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetServerAllConfigResp_RedisConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetServerAllConfigResp_RedisConfig) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *GetServerAllConfigResp_RedisConfig) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

type GetServerAllConfigResp_MysqlConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr         string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr"`
	MaxIdleConns int32  `protobuf:"varint,2,opt,name=maxIdleConns,proto3" json:"maxIdleConns"`
	MaxOpenConns int32  `protobuf:"varint,3,opt,name=maxOpenConns,proto3" json:"maxOpenConns"`
	LogLevel     string `protobuf:"bytes,4,opt,name=logLevel,proto3" json:"logLevel"`
}

func (x *GetServerAllConfigResp_MysqlConfig) Reset() {
	*x = GetServerAllConfigResp_MysqlConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_MysqlConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_MysqlConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_MysqlConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_MysqlConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_MysqlConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 2}
}

func (x *GetServerAllConfigResp_MysqlConfig) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *GetServerAllConfigResp_MysqlConfig) GetMaxIdleConns() int32 {
	if x != nil {
		return x.MaxIdleConns
	}
	return 0
}

func (x *GetServerAllConfigResp_MysqlConfig) GetMaxOpenConns() int32 {
	if x != nil {
		return x.MaxOpenConns
	}
	return 0
}

func (x *GetServerAllConfigResp_MysqlConfig) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

type GetServerAllConfigResp_CommonConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host         string                                  `protobuf:"bytes,1,opt,name=host,proto3" json:"host"`
	RpcTimeOut   int64                                   `protobuf:"varint,2,opt,name=rpcTimeOut,proto3" json:"rpcTimeOut"`
	LogLevel     string                                  `protobuf:"bytes,3,opt,name=logLevel,proto3" json:"logLevel"`
	Telemetry    *GetServerAllConfigResp_TelemetryConfig `protobuf:"bytes,4,opt,name=telemetry,proto3" json:"telemetry"`
	Redis        *GetServerAllConfigResp_RedisConfig     `protobuf:"bytes,5,opt,name=redis,proto3" json:"redis"`
	Mysql        *GetServerAllConfigResp_MysqlConfig     `protobuf:"bytes,6,opt,name=mysql,proto3" json:"mysql"`
	Ip2RegionUrl string                                  `protobuf:"bytes,7,opt,name=ip2RegionUrl,proto3" json:"ip2RegionUrl"`
	Mode         string                                  `protobuf:"bytes,8,opt,name=mode,proto3" json:"mode"`
}

func (x *GetServerAllConfigResp_CommonConfig) Reset() {
	*x = GetServerAllConfigResp_CommonConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_CommonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_CommonConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_CommonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_CommonConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_CommonConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 3}
}

func (x *GetServerAllConfigResp_CommonConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetServerAllConfigResp_CommonConfig) GetRpcTimeOut() int64 {
	if x != nil {
		return x.RpcTimeOut
	}
	return 0
}

func (x *GetServerAllConfigResp_CommonConfig) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *GetServerAllConfigResp_CommonConfig) GetTelemetry() *GetServerAllConfigResp_TelemetryConfig {
	if x != nil {
		return x.Telemetry
	}
	return nil
}

func (x *GetServerAllConfigResp_CommonConfig) GetRedis() *GetServerAllConfigResp_RedisConfig {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *GetServerAllConfigResp_CommonConfig) GetMysql() *GetServerAllConfigResp_MysqlConfig {
	if x != nil {
		return x.Mysql
	}
	return nil
}

func (x *GetServerAllConfigResp_CommonConfig) GetIp2RegionUrl() string {
	if x != nil {
		return x.Ip2RegionUrl
	}
	return ""
}

func (x *GetServerAllConfigResp_CommonConfig) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type GetServerAllConfigResp_ConnRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscovType    string   `protobuf:"bytes,1,opt,name=discovType,proto3" json:"discovType"`
	K8SNamespace  string   `protobuf:"bytes,2,opt,name=k8sNamespace,proto3" json:"k8sNamespace"`
	Endpoints     []string `protobuf:"bytes,3,rep,name=endpoints,proto3" json:"endpoints"`
	Port          int64    `protobuf:"varint,4,opt,name=port,proto3" json:"port"`
	WebsocketPort int64    `protobuf:"varint,5,opt,name=websocketPort,proto3" json:"websocketPort"`
}

func (x *GetServerAllConfigResp_ConnRpcConfig) Reset() {
	*x = GetServerAllConfigResp_ConnRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_ConnRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_ConnRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_ConnRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_ConnRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_ConnRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 4}
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetDiscovType() string {
	if x != nil {
		return x.DiscovType
	}
	return ""
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetK8SNamespace() string {
	if x != nil {
		return x.K8SNamespace
	}
	return ""
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetWebsocketPort() int64 {
	if x != nil {
		return x.WebsocketPort
	}
	return 0
}

type GetServerAllConfigResp_ImRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
}

func (x *GetServerAllConfigResp_ImRpcConfig) Reset() {
	*x = GetServerAllConfigResp_ImRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_ImRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_ImRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_ImRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_ImRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_ImRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 5}
}

func (x *GetServerAllConfigResp_ImRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetServerAllConfigResp_MobPushConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled        bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled"`
	AppKey         string `protobuf:"bytes,2,opt,name=appKey,proto3" json:"appKey"`
	AppSecret      string `protobuf:"bytes,3,opt,name=appSecret,proto3" json:"appSecret"`
	ApnsProduction bool   `protobuf:"varint,4,opt,name=apnsProduction,proto3" json:"apnsProduction"`
	ApnsCateGory   string `protobuf:"bytes,5,opt,name=apnsCateGory,proto3" json:"apnsCateGory"`
	ApnsSound      string `protobuf:"bytes,6,opt,name=apnsSound,proto3" json:"apnsSound"`
	AndroidSound   string `protobuf:"bytes,7,opt,name=androidSound,proto3" json:"androidSound"`
}

func (x *GetServerAllConfigResp_MobPushConfig) Reset() {
	*x = GetServerAllConfigResp_MobPushConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_MobPushConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_MobPushConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_MobPushConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_MobPushConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_MobPushConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 6}
}

func (x *GetServerAllConfigResp_MobPushConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GetServerAllConfigResp_MobPushConfig) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *GetServerAllConfigResp_MobPushConfig) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *GetServerAllConfigResp_MobPushConfig) GetApnsProduction() bool {
	if x != nil {
		return x.ApnsProduction
	}
	return false
}

func (x *GetServerAllConfigResp_MobPushConfig) GetApnsCateGory() string {
	if x != nil {
		return x.ApnsCateGory
	}
	return ""
}

func (x *GetServerAllConfigResp_MobPushConfig) GetApnsSound() string {
	if x != nil {
		return x.ApnsSound
	}
	return ""
}

func (x *GetServerAllConfigResp_MobPushConfig) GetAndroidSound() string {
	if x != nil {
		return x.AndroidSound
	}
	return ""
}

type GetServerAllConfigResp_MsgPulsarConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled           bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled"`
	Token             string `protobuf:"bytes,2,opt,name=token,proto3" json:"token"`
	VpcUrl            string `protobuf:"bytes,3,opt,name=vpcUrl,proto3" json:"vpcUrl"`
	TopicName         string `protobuf:"bytes,4,opt,name=topicName,proto3" json:"topicName"`
	ReceiverQueueSize int64  `protobuf:"varint,5,opt,name=receiverQueueSize,proto3" json:"receiverQueueSize"`
	ProducerTimeout   int64  `protobuf:"varint,6,opt,name=producerTimeout,proto3" json:"producerTimeout"`
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) Reset() {
	*x = GetServerAllConfigResp_MsgPulsarConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_MsgPulsarConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_MsgPulsarConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_MsgPulsarConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_MsgPulsarConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 7}
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetVpcUrl() string {
	if x != nil {
		return x.VpcUrl
	}
	return ""
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetReceiverQueueSize() int64 {
	if x != nil {
		return x.ReceiverQueueSize
	}
	return 0
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetProducerTimeout() int64 {
	if x != nil {
		return x.ProducerTimeout
	}
	return 0
}

type GetServerAllConfigResp_MsgRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port    int64                                   `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
	MobPush *GetServerAllConfigResp_MobPushConfig   `protobuf:"bytes,2,opt,name=mobPush,proto3" json:"mobPush"`
	Pulsar  *GetServerAllConfigResp_MsgPulsarConfig `protobuf:"bytes,3,opt,name=pulsar,proto3" json:"pulsar"`
}

func (x *GetServerAllConfigResp_MsgRpcConfig) Reset() {
	*x = GetServerAllConfigResp_MsgRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_MsgRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_MsgRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_MsgRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_MsgRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_MsgRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 8}
}

func (x *GetServerAllConfigResp_MsgRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetServerAllConfigResp_MsgRpcConfig) GetMobPush() *GetServerAllConfigResp_MobPushConfig {
	if x != nil {
		return x.MobPush
	}
	return nil
}

func (x *GetServerAllConfigResp_MsgRpcConfig) GetPulsar() *GetServerAllConfigResp_MsgPulsarConfig {
	if x != nil {
		return x.Pulsar
	}
	return nil
}

type GetServerAllConfigResp_UserRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
}

func (x *GetServerAllConfigResp_UserRpcConfig) Reset() {
	*x = GetServerAllConfigResp_UserRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_UserRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_UserRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_UserRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_UserRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_UserRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 9}
}

func (x *GetServerAllConfigResp_UserRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetServerAllConfigResp_RelationRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
}

func (x *GetServerAllConfigResp_RelationRpcConfig) Reset() {
	*x = GetServerAllConfigResp_RelationRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_RelationRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_RelationRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_RelationRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_RelationRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_RelationRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 10}
}

func (x *GetServerAllConfigResp_RelationRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetServerAllConfigResp_GroupRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
}

func (x *GetServerAllConfigResp_GroupRpcConfig) Reset() {
	*x = GetServerAllConfigResp_GroupRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_GroupRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_GroupRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_GroupRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_GroupRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_GroupRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 11}
}

func (x *GetServerAllConfigResp_GroupRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetServerAllConfigResp_NoticeRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
}

func (x *GetServerAllConfigResp_NoticeRpcConfig) Reset() {
	*x = GetServerAllConfigResp_NoticeRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_NoticeRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_NoticeRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_NoticeRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_NoticeRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_NoticeRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 12}
}

func (x *GetServerAllConfigResp_NoticeRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetServerAllConfigResp_MgmtConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcPort  int64 `protobuf:"varint,1,opt,name=rpcPort,proto3" json:"rpcPort"`
	HttpPort int64 `protobuf:"varint,2,opt,name=httpPort,proto3" json:"httpPort"`
}

func (x *GetServerAllConfigResp_MgmtConfig) Reset() {
	*x = GetServerAllConfigResp_MgmtConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_MgmtConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_MgmtConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_MgmtConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_MgmtConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_MgmtConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 13}
}

func (x *GetServerAllConfigResp_MgmtConfig) GetRpcPort() int64 {
	if x != nil {
		return x.RpcPort
	}
	return 0
}

func (x *GetServerAllConfigResp_MgmtConfig) GetHttpPort() int64 {
	if x != nil {
		return x.HttpPort
	}
	return 0
}

var File_mgmt_proto protoreflect.FileDescriptor

var file_mgmt_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a,
	0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x44, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x22, 0xf2, 0x12, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x42,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x52, 0x70, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x52,
	0x70, 0x63, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x6d, 0x52, 0x70, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x49, 0x6d,
	0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x69, 0x6d, 0x52, 0x70, 0x63,
	0x12, 0x3f, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x52, 0x70, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x52, 0x70,
	0x63, 0x12, 0x42, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x52, 0x70, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x52, 0x70, 0x63, 0x12, 0x4e, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x70, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x70, 0x63, 0x12, 0x45, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x70,
	0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x70, 0x63, 0x12, 0x48, 0x0a, 0x09,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x70, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x70, 0x63, 0x12, 0x39, 0x0a, 0x04, 0x6d, 0x67, 0x6d, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x4d, 0x67, 0x6d, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x6d, 0x67, 0x6d,
	0x74, 0x1a, 0x61, 0x0a, 0x0f, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x1a, 0x5b, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x6c,
	0x73, 0x1a, 0x85, 0x01, 0x0a, 0x0b, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78,
	0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78,
	0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0xdc, 0x02, 0x0a, 0x0c, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x70, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x70, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x48, 0x0a, 0x09, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x72, 0x65, 0x64,
	0x69, 0x73, 0x12, 0x3c, 0x0a, 0x05, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x79,
	0x73, 0x71, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x6d, 0x79, 0x73, 0x71, 0x6c,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x70, 0x32, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x70, 0x32, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x1a, 0xab, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x6e, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6b, 0x38,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6b, 0x38, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x1a, 0x21, 0x0a, 0x0b, 0x49, 0x6d, 0x52, 0x70, 0x63, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0xed, 0x01, 0x0a, 0x0d, 0x4d, 0x6f,
	0x62, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61,
	0x70, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x70, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x6e, 0x73, 0x43, 0x61, 0x74, 0x65, 0x47,
	0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x6e, 0x73, 0x43,
	0x61, 0x74, 0x65, 0x47, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x6e, 0x73, 0x53,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x6e, 0x73,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x1a, 0xcf, 0x01, 0x0a, 0x0f, 0x4d, 0x73,
	0x67, 0x50, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x70, 0x63, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76,
	0x70, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0xaa, 0x01, 0x0a, 0x0c,
	0x4d, 0x73, 0x67, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x42, 0x0a, 0x07, 0x6d, 0x6f, 0x62, 0x50, 0x75, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x6f,
	0x62, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x6d, 0x6f, 0x62,
	0x50, 0x75, 0x73, 0x68, 0x12, 0x42, 0x0a, 0x06, 0x70, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x4d, 0x73, 0x67, 0x50, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x70, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x1a, 0x23, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x27, 0x0a,
	0x11, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x24, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x25, 0x0a, 0x0f,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x1a, 0x42, 0x0a, 0x0a, 0x4d, 0x67, 0x6d, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x74, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x68,
	0x74, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x32, 0x8e, 0x02, 0x0a, 0x0b, 0x6d, 0x67, 0x6d, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0f,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mgmt_proto_rawDescOnce sync.Once
	file_mgmt_proto_rawDescData = file_mgmt_proto_rawDesc
)

func file_mgmt_proto_rawDescGZIP() []byte {
	file_mgmt_proto_rawDescOnce.Do(func() {
		file_mgmt_proto_rawDescData = protoimpl.X.CompressGZIP(file_mgmt_proto_rawDescData)
	})
	return file_mgmt_proto_rawDescData
}

var file_mgmt_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_mgmt_proto_goTypes = []interface{}{
	(*GetServerConfigReq)(nil),                       // 0: pb.GetServerConfigReq
	(*GetServerConfigResp)(nil),                      // 1: pb.GetServerConfigResp
	(*GetServerAllConfigReq)(nil),                    // 2: pb.GetServerAllConfigReq
	(*GetServerAllConfigResp)(nil),                   // 3: pb.GetServerAllConfigResp
	(*GetServerAllConfigResp_TelemetryConfig)(nil),   // 4: pb.GetServerAllConfigResp.TelemetryConfig
	(*GetServerAllConfigResp_RedisConfig)(nil),       // 5: pb.GetServerAllConfigResp.RedisConfig
	(*GetServerAllConfigResp_MysqlConfig)(nil),       // 6: pb.GetServerAllConfigResp.MysqlConfig
	(*GetServerAllConfigResp_CommonConfig)(nil),      // 7: pb.GetServerAllConfigResp.CommonConfig
	(*GetServerAllConfigResp_ConnRpcConfig)(nil),     // 8: pb.GetServerAllConfigResp.ConnRpcConfig
	(*GetServerAllConfigResp_ImRpcConfig)(nil),       // 9: pb.GetServerAllConfigResp.ImRpcConfig
	(*GetServerAllConfigResp_MobPushConfig)(nil),     // 10: pb.GetServerAllConfigResp.MobPushConfig
	(*GetServerAllConfigResp_MsgPulsarConfig)(nil),   // 11: pb.GetServerAllConfigResp.MsgPulsarConfig
	(*GetServerAllConfigResp_MsgRpcConfig)(nil),      // 12: pb.GetServerAllConfigResp.MsgRpcConfig
	(*GetServerAllConfigResp_UserRpcConfig)(nil),     // 13: pb.GetServerAllConfigResp.UserRpcConfig
	(*GetServerAllConfigResp_RelationRpcConfig)(nil), // 14: pb.GetServerAllConfigResp.RelationRpcConfig
	(*GetServerAllConfigResp_GroupRpcConfig)(nil),    // 15: pb.GetServerAllConfigResp.GroupRpcConfig
	(*GetServerAllConfigResp_NoticeRpcConfig)(nil),   // 16: pb.GetServerAllConfigResp.NoticeRpcConfig
	(*GetServerAllConfigResp_MgmtConfig)(nil),        // 17: pb.GetServerAllConfigResp.MgmtConfig
	(*CommonReq)(nil),                                // 18: pb.CommonReq
	(*CommonResp)(nil),                               // 19: pb.CommonResp
	(*AfterConnectReq)(nil),                          // 20: pb.AfterConnectReq
	(*AfterDisconnectReq)(nil),                       // 21: pb.AfterDisconnectReq
}
var file_mgmt_proto_depIdxs = []int32{
	18, // 0: pb.GetServerConfigReq.commonReq:type_name -> pb.CommonReq
	19, // 1: pb.GetServerConfigResp.commonResp:type_name -> pb.CommonResp
	18, // 2: pb.GetServerAllConfigReq.commonReq:type_name -> pb.CommonReq
	19, // 3: pb.GetServerAllConfigResp.commonResp:type_name -> pb.CommonResp
	7,  // 4: pb.GetServerAllConfigResp.common:type_name -> pb.GetServerAllConfigResp.CommonConfig
	8,  // 5: pb.GetServerAllConfigResp.connRpc:type_name -> pb.GetServerAllConfigResp.ConnRpcConfig
	9,  // 6: pb.GetServerAllConfigResp.imRpc:type_name -> pb.GetServerAllConfigResp.ImRpcConfig
	12, // 7: pb.GetServerAllConfigResp.msgRpc:type_name -> pb.GetServerAllConfigResp.MsgRpcConfig
	13, // 8: pb.GetServerAllConfigResp.userRpc:type_name -> pb.GetServerAllConfigResp.UserRpcConfig
	14, // 9: pb.GetServerAllConfigResp.relationRpc:type_name -> pb.GetServerAllConfigResp.RelationRpcConfig
	15, // 10: pb.GetServerAllConfigResp.groupRpc:type_name -> pb.GetServerAllConfigResp.GroupRpcConfig
	16, // 11: pb.GetServerAllConfigResp.noticeRpc:type_name -> pb.GetServerAllConfigResp.NoticeRpcConfig
	17, // 12: pb.GetServerAllConfigResp.mgmt:type_name -> pb.GetServerAllConfigResp.MgmtConfig
	4,  // 13: pb.GetServerAllConfigResp.CommonConfig.telemetry:type_name -> pb.GetServerAllConfigResp.TelemetryConfig
	5,  // 14: pb.GetServerAllConfigResp.CommonConfig.redis:type_name -> pb.GetServerAllConfigResp.RedisConfig
	6,  // 15: pb.GetServerAllConfigResp.CommonConfig.mysql:type_name -> pb.GetServerAllConfigResp.MysqlConfig
	10, // 16: pb.GetServerAllConfigResp.MsgRpcConfig.mobPush:type_name -> pb.GetServerAllConfigResp.MobPushConfig
	11, // 17: pb.GetServerAllConfigResp.MsgRpcConfig.pulsar:type_name -> pb.GetServerAllConfigResp.MsgPulsarConfig
	20, // 18: pb.mgmtService.AfterConnect:input_type -> pb.AfterConnectReq
	21, // 19: pb.mgmtService.AfterDisconnect:input_type -> pb.AfterDisconnectReq
	0,  // 20: pb.mgmtService.GetServerConfig:input_type -> pb.GetServerConfigReq
	2,  // 21: pb.mgmtService.GetServerAllConfig:input_type -> pb.GetServerAllConfigReq
	19, // 22: pb.mgmtService.AfterConnect:output_type -> pb.CommonResp
	19, // 23: pb.mgmtService.AfterDisconnect:output_type -> pb.CommonResp
	1,  // 24: pb.mgmtService.GetServerConfig:output_type -> pb.GetServerConfigResp
	3,  // 25: pb.mgmtService.GetServerAllConfig:output_type -> pb.GetServerAllConfigResp
	22, // [22:26] is the sub-list for method output_type
	18, // [18:22] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_mgmt_proto_init() }
func file_mgmt_proto_init() {
	if File_mgmt_proto != nil {
		return
	}
	file_common_proto_init()
	file_conn_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mgmt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_TelemetryConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_RedisConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_MysqlConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_CommonConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_ConnRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_ImRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_MobPushConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_MsgPulsarConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_MsgRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_UserRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_RelationRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_GroupRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_NoticeRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_MgmtConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mgmt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mgmt_proto_goTypes,
		DependencyIndexes: file_mgmt_proto_depIdxs,
		MessageInfos:      file_mgmt_proto_msgTypes,
	}.Build()
	File_mgmt_proto = out.File
	file_mgmt_proto_rawDesc = nil
	file_mgmt_proto_goTypes = nil
	file_mgmt_proto_depIdxs = nil
}
