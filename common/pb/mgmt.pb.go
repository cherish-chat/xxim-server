// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: mgmt.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//GetServerConfigReq 获取服务器配置请求
type GetServerConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq  *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	ServerName string     `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName"`
}

func (x *GetServerConfigReq) Reset() {
	*x = GetServerConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerConfigReq) ProtoMessage() {}

func (x *GetServerConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerConfigReq.ProtoReflect.Descriptor instead.
func (*GetServerConfigReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{0}
}

func (x *GetServerConfigReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetServerConfigReq) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

//GetServerConfigResp 获取服务器配置响应
type GetServerConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Config     []byte      `protobuf:"bytes,2,opt,name=config,proto3" json:"config"`
}

func (x *GetServerConfigResp) Reset() {
	*x = GetServerConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerConfigResp) ProtoMessage() {}

func (x *GetServerConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerConfigResp.ProtoReflect.Descriptor instead.
func (*GetServerConfigResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{1}
}

func (x *GetServerConfigResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetServerConfigResp) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

//GetServerAllConfigReq 获取所有服务器配置请求
type GetServerAllConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
}

func (x *GetServerAllConfigReq) Reset() {
	*x = GetServerAllConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigReq) ProtoMessage() {}

func (x *GetServerAllConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigReq.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{2}
}

func (x *GetServerAllConfigReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

//GetServerAllConfigResp 获取所有服务器配置响应
type GetServerAllConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp                               `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Common      *GetServerAllConfigResp_CommonConfig      `protobuf:"bytes,2,opt,name=common,proto3" json:"common"`
	ConnRpc     *GetServerAllConfigResp_ConnRpcConfig     `protobuf:"bytes,3,opt,name=connRpc,proto3" json:"connRpc"`
	ImRpc       *GetServerAllConfigResp_ImRpcConfig       `protobuf:"bytes,4,opt,name=imRpc,proto3" json:"imRpc"`
	MsgRpc      *GetServerAllConfigResp_MsgRpcConfig      `protobuf:"bytes,5,opt,name=msgRpc,proto3" json:"msgRpc"`
	UserRpc     *GetServerAllConfigResp_UserRpcConfig     `protobuf:"bytes,6,opt,name=userRpc,proto3" json:"userRpc"`
	RelationRpc *GetServerAllConfigResp_RelationRpcConfig `protobuf:"bytes,7,opt,name=relationRpc,proto3" json:"relationRpc"`
	GroupRpc    *GetServerAllConfigResp_GroupRpcConfig    `protobuf:"bytes,8,opt,name=groupRpc,proto3" json:"groupRpc"`
	NoticeRpc   *GetServerAllConfigResp_NoticeRpcConfig   `protobuf:"bytes,9,opt,name=noticeRpc,proto3" json:"noticeRpc"`
	AppMgmtRpc  *GetServerAllConfigResp_AppMgmtRpcConfig  `protobuf:"bytes,10,opt,name=appMgmtRpc,proto3" json:"appMgmtRpc"`
	Mgmt        *GetServerAllConfigResp_MgmtConfig        `protobuf:"bytes,11,opt,name=mgmt,proto3" json:"mgmt"`
}

func (x *GetServerAllConfigResp) Reset() {
	*x = GetServerAllConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp) ProtoMessage() {}

func (x *GetServerAllConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3}
}

func (x *GetServerAllConfigResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetServerAllConfigResp) GetCommon() *GetServerAllConfigResp_CommonConfig {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetServerAllConfigResp) GetConnRpc() *GetServerAllConfigResp_ConnRpcConfig {
	if x != nil {
		return x.ConnRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetImRpc() *GetServerAllConfigResp_ImRpcConfig {
	if x != nil {
		return x.ImRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetMsgRpc() *GetServerAllConfigResp_MsgRpcConfig {
	if x != nil {
		return x.MsgRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetUserRpc() *GetServerAllConfigResp_UserRpcConfig {
	if x != nil {
		return x.UserRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetRelationRpc() *GetServerAllConfigResp_RelationRpcConfig {
	if x != nil {
		return x.RelationRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetGroupRpc() *GetServerAllConfigResp_GroupRpcConfig {
	if x != nil {
		return x.GroupRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetNoticeRpc() *GetServerAllConfigResp_NoticeRpcConfig {
	if x != nil {
		return x.NoticeRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetAppMgmtRpc() *GetServerAllConfigResp_AppMgmtRpcConfig {
	if x != nil {
		return x.AppMgmtRpc
	}
	return nil
}

func (x *GetServerAllConfigResp) GetMgmt() *GetServerAllConfigResp_MgmtConfig {
	if x != nil {
		return x.Mgmt
	}
	return nil
}

//UpdateServerConfigReq 更新服务器配置请求
type UpdateServerConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq              `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Config    *GetServerAllConfigResp `protobuf:"bytes,2,opt,name=config,proto3" json:"config"`
}

func (x *UpdateServerConfigReq) Reset() {
	*x = UpdateServerConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerConfigReq) ProtoMessage() {}

func (x *UpdateServerConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerConfigReq.ProtoReflect.Descriptor instead.
func (*UpdateServerConfigReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateServerConfigReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UpdateServerConfigReq) GetConfig() *GetServerAllConfigResp {
	if x != nil {
		return x.Config
	}
	return nil
}

//UpdateServerConfigResp 更新服务器配置响应
type UpdateServerConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateServerConfigResp) Reset() {
	*x = UpdateServerConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerConfigResp) ProtoMessage() {}

func (x *UpdateServerConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerConfigResp.ProtoReflect.Descriptor instead.
func (*UpdateServerConfigResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateServerConfigResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//AppLineConfig
type AppLineConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config  string                 `protobuf:"bytes,1,opt,name=config,proto3" json:"config"`
	AesIv   string                 `protobuf:"bytes,2,opt,name=aesIv,proto3" json:"aesIv"`
	AesKey  string                 `protobuf:"bytes,3,opt,name=aesKey,proto3" json:"aesKey"`
	Storage *AppLineConfig_Storage `protobuf:"bytes,4,opt,name=storage,proto3" json:"storage"`
}

func (x *AppLineConfig) Reset() {
	*x = AppLineConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLineConfig) ProtoMessage() {}

func (x *AppLineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLineConfig.ProtoReflect.Descriptor instead.
func (*AppLineConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{6}
}

func (x *AppLineConfig) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *AppLineConfig) GetAesIv() string {
	if x != nil {
		return x.AesIv
	}
	return ""
}

func (x *AppLineConfig) GetAesKey() string {
	if x != nil {
		return x.AesKey
	}
	return ""
}

func (x *AppLineConfig) GetStorage() *AppLineConfig_Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

//GetAppLineConfigReq 获取应用线路配置请求
type GetAppLineConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
}

func (x *GetAppLineConfigReq) Reset() {
	*x = GetAppLineConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppLineConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppLineConfigReq) ProtoMessage() {}

func (x *GetAppLineConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppLineConfigReq.ProtoReflect.Descriptor instead.
func (*GetAppLineConfigReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{7}
}

func (x *GetAppLineConfigReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

//GetAppLineConfigResp 获取应用线路配置响应
type GetAppLineConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp    *CommonResp    `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	AppLineConfig *AppLineConfig `protobuf:"bytes,2,opt,name=appLineConfig,proto3" json:"appLineConfig"`
}

func (x *GetAppLineConfigResp) Reset() {
	*x = GetAppLineConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppLineConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppLineConfigResp) ProtoMessage() {}

func (x *GetAppLineConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppLineConfigResp.ProtoReflect.Descriptor instead.
func (*GetAppLineConfigResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{8}
}

func (x *GetAppLineConfigResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAppLineConfigResp) GetAppLineConfig() *AppLineConfig {
	if x != nil {
		return x.AppLineConfig
	}
	return nil
}

//UpdateAppLineConfigReq 更新应用线路配置请求
type UpdateAppLineConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq     *CommonReq     `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	AppLineConfig *AppLineConfig `protobuf:"bytes,2,opt,name=appLineConfig,proto3" json:"appLineConfig"`
}

func (x *UpdateAppLineConfigReq) Reset() {
	*x = UpdateAppLineConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppLineConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppLineConfigReq) ProtoMessage() {}

func (x *UpdateAppLineConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppLineConfigReq.ProtoReflect.Descriptor instead.
func (*UpdateAppLineConfigReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateAppLineConfigReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UpdateAppLineConfigReq) GetAppLineConfig() *AppLineConfig {
	if x != nil {
		return x.AppLineConfig
	}
	return nil
}

//UpdateAppLineConfigResp 更新应用线路配置响应
type UpdateAppLineConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateAppLineConfigResp) Reset() {
	*x = UpdateAppLineConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppLineConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppLineConfigResp) ProtoMessage() {}

func (x *UpdateAppLineConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppLineConfigResp.ProtoReflect.Descriptor instead.
func (*UpdateAppLineConfigResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAppLineConfigResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//LoginMSReq 登录管理系统请求
type LoginMSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Id        string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	Password  string     `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
}

func (x *LoginMSReq) Reset() {
	*x = LoginMSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMSReq) ProtoMessage() {}

func (x *LoginMSReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMSReq.ProtoReflect.Descriptor instead.
func (*LoginMSReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{11}
}

func (x *LoginMSReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *LoginMSReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LoginMSReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

//LoginMSResp 登录管理系统响应
type LoginMSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Id         string      `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	Token      string      `protobuf:"bytes,3,opt,name=token,proto3" json:"token"`
}

func (x *LoginMSResp) Reset() {
	*x = LoginMSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMSResp) ProtoMessage() {}

func (x *LoginMSResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMSResp.ProtoReflect.Descriptor instead.
func (*LoginMSResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{12}
}

func (x *LoginMSResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *LoginMSResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LoginMSResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

//HealthMSResp 健康检查响应
type HealthMSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Success    bool        `protobuf:"varint,2,opt,name=success,proto3" json:"success"`
	Msg        string      `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg"`
}

func (x *HealthMSResp) Reset() {
	*x = HealthMSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthMSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthMSResp) ProtoMessage() {}

func (x *HealthMSResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthMSResp.ProtoReflect.Descriptor instead.
func (*HealthMSResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{13}
}

func (x *HealthMSResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *HealthMSResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HealthMSResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

//ConfigMSResp 管理系统配置响应
type ConfigMSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	WebName     string      `protobuf:"bytes,2,opt,name=webName,proto3" json:"webName"`         // 网站名称
	WebLogo     string      `protobuf:"bytes,3,opt,name=webLogo,proto3" json:"webLogo"`         // 网站logo
	WebFavicon  string      `protobuf:"bytes,4,opt,name=webFavicon,proto3" json:"webFavicon"`   // 网站favicon
	WebBackdrop string      `protobuf:"bytes,5,opt,name=webBackdrop,proto3" json:"webBackdrop"` // 网站背景
	PubDomain   string      `protobuf:"bytes,6,opt,name=pubDomain,proto3" json:"pubDomain"`     // 公网域名
	Copyright   []*MStr     `protobuf:"bytes,7,rep,name=copyright,proto3" json:"copyright"`     // 版权信息
}

func (x *ConfigMSResp) Reset() {
	*x = ConfigMSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigMSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMSResp) ProtoMessage() {}

func (x *ConfigMSResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMSResp.ProtoReflect.Descriptor instead.
func (*ConfigMSResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{14}
}

func (x *ConfigMSResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *ConfigMSResp) GetWebName() string {
	if x != nil {
		return x.WebName
	}
	return ""
}

func (x *ConfigMSResp) GetWebLogo() string {
	if x != nil {
		return x.WebLogo
	}
	return ""
}

func (x *ConfigMSResp) GetWebFavicon() string {
	if x != nil {
		return x.WebFavicon
	}
	return ""
}

func (x *ConfigMSResp) GetWebBackdrop() string {
	if x != nil {
		return x.WebBackdrop
	}
	return ""
}

func (x *ConfigMSResp) GetPubDomain() string {
	if x != nil {
		return x.PubDomain
	}
	return ""
}

func (x *ConfigMSResp) GetCopyright() []*MStr {
	if x != nil {
		return x.Copyright
	}
	return nil
}

//MSMenu 菜单
type MSMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	CreatedAt        int64     `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt"`
	CreatedAtStr     string    `protobuf:"bytes,3,opt,name=createdAtStr,proto3" json:"createdAtStr"`
	CreatedBy        string    `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy"`
	UpdatedAt        int64     `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt"`
	UpdatedAtStr     string    `protobuf:"bytes,6,opt,name=updatedAtStr,proto3" json:"updatedAtStr"`
	UpdatedBy        string    `protobuf:"bytes,7,opt,name=updatedBy,proto3" json:"updatedBy"`
	Pid              string    `protobuf:"bytes,11,opt,name=pid,proto3" json:"pid"`
	MenuType         string    `protobuf:"bytes,12,opt,name=menuType,proto3" json:"menuType"`                 // 菜单类型 M=目录 C=菜单 A=按钮
	MenuName         string    `protobuf:"bytes,13,opt,name=menuName,proto3" json:"menuName"`                 // 菜单名称
	MenuIcon         string    `protobuf:"bytes,14,opt,name=menuIcon,proto3" json:"menuIcon"`                 // 菜单图标
	MenuSort         int32     `protobuf:"varint,15,opt,name=menuSort,proto3" json:"menuSort"`                // 菜单排序
	Perms            string    `protobuf:"bytes,16,opt,name=perms,proto3" json:"perms"`                       // 权限标识
	Paths            string    `protobuf:"bytes,17,opt,name=paths,proto3" json:"paths"`                       // 路径
	Component        string    `protobuf:"bytes,18,opt,name=component,proto3" json:"component"`               // 组件
	Selected         string    `protobuf:"bytes,19,opt,name=selected,proto3" json:"selected"`                 // 选中路径
	Params           string    `protobuf:"bytes,20,opt,name=params,proto3" json:"params"`                     // 路径参数
	IsCache          bool      `protobuf:"varint,21,opt,name=isCache,proto3" json:"isCache"`                  // 是否缓存
	IsShow           bool      `protobuf:"varint,22,opt,name=isShow,proto3" json:"isShow"`                    // 是否显示
	IsDisable        bool      `protobuf:"varint,23,opt,name=isDisable,proto3" json:"isDisable"`              // 是否禁用
	MenuIconElement2 string    `protobuf:"bytes,24,opt,name=menuIconElement2,proto3" json:"menuIconElement2"` // 菜单图标Element v2
	Children         []*MSMenu `protobuf:"bytes,30,rep,name=children,proto3" json:"children"`                 // 子菜单
}

func (x *MSMenu) Reset() {
	*x = MSMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSMenu) ProtoMessage() {}

func (x *MSMenu) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSMenu.ProtoReflect.Descriptor instead.
func (*MSMenu) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{15}
}

func (x *MSMenu) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MSMenu) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MSMenu) GetCreatedAtStr() string {
	if x != nil {
		return x.CreatedAtStr
	}
	return ""
}

func (x *MSMenu) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MSMenu) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *MSMenu) GetUpdatedAtStr() string {
	if x != nil {
		return x.UpdatedAtStr
	}
	return ""
}

func (x *MSMenu) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *MSMenu) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *MSMenu) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *MSMenu) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *MSMenu) GetMenuIcon() string {
	if x != nil {
		return x.MenuIcon
	}
	return ""
}

func (x *MSMenu) GetMenuSort() int32 {
	if x != nil {
		return x.MenuSort
	}
	return 0
}

func (x *MSMenu) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *MSMenu) GetPaths() string {
	if x != nil {
		return x.Paths
	}
	return ""
}

func (x *MSMenu) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MSMenu) GetSelected() string {
	if x != nil {
		return x.Selected
	}
	return ""
}

func (x *MSMenu) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *MSMenu) GetIsCache() bool {
	if x != nil {
		return x.IsCache
	}
	return false
}

func (x *MSMenu) GetIsShow() bool {
	if x != nil {
		return x.IsShow
	}
	return false
}

func (x *MSMenu) GetIsDisable() bool {
	if x != nil {
		return x.IsDisable
	}
	return false
}

func (x *MSMenu) GetMenuIconElement2() string {
	if x != nil {
		return x.MenuIconElement2
	}
	return ""
}

func (x *MSMenu) GetChildren() []*MSMenu {
	if x != nil {
		return x.Children
	}
	return nil
}

//GetAllMSMenuListReq 获取所有菜单列表请求
type GetAllMSMenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq        `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Page      *Page             `protobuf:"bytes,2,opt,name=page,proto3" json:"page"`
	Filter    map[string]string `protobuf:"bytes,3,rep,name=filter,proto3" json:"filter" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAllMSMenuListReq) Reset() {
	*x = GetAllMSMenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSMenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSMenuListReq) ProtoMessage() {}

func (x *GetAllMSMenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSMenuListReq.ProtoReflect.Descriptor instead.
func (*GetAllMSMenuListReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{16}
}

func (x *GetAllMSMenuListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetAllMSMenuListReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetAllMSMenuListReq) GetFilter() map[string]string {
	if x != nil {
		return x.Filter
	}
	return nil
}

//GetAllMSMenuListResp 获取所有菜单列表响应
type GetAllMSMenuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Menus      []*MSMenu   `protobuf:"bytes,2,rep,name=menus,proto3" json:"menus"`
	Total      int64       `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *GetAllMSMenuListResp) Reset() {
	*x = GetAllMSMenuListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSMenuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSMenuListResp) ProtoMessage() {}

func (x *GetAllMSMenuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSMenuListResp.ProtoReflect.Descriptor instead.
func (*GetAllMSMenuListResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{17}
}

func (x *GetAllMSMenuListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllMSMenuListResp) GetMenus() []*MSMenu {
	if x != nil {
		return x.Menus
	}
	return nil
}

func (x *GetAllMSMenuListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

//GetMyMSMenuListReq 获取我的菜单列表请求
type GetMyMSMenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
}

func (x *GetMyMSMenuListReq) Reset() {
	*x = GetMyMSMenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyMSMenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyMSMenuListReq) ProtoMessage() {}

func (x *GetMyMSMenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyMSMenuListReq.ProtoReflect.Descriptor instead.
func (*GetMyMSMenuListReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{18}
}

func (x *GetMyMSMenuListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

//GetMyMSMenuListResp 获取我的菜单列表响应
type GetMyMSMenuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Menus      []*MSMenu   `protobuf:"bytes,2,rep,name=menus,proto3" json:"menus"`
}

func (x *GetMyMSMenuListResp) Reset() {
	*x = GetMyMSMenuListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyMSMenuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyMSMenuListResp) ProtoMessage() {}

func (x *GetMyMSMenuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyMSMenuListResp.ProtoReflect.Descriptor instead.
func (*GetMyMSMenuListResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{19}
}

func (x *GetMyMSMenuListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMyMSMenuListResp) GetMenus() []*MSMenu {
	if x != nil {
		return x.Menus
	}
	return nil
}

//GetMSMenuDetailReq 获取菜单详情请求
type GetMSMenuDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Id        string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *GetMSMenuDetailReq) Reset() {
	*x = GetMSMenuDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSMenuDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSMenuDetailReq) ProtoMessage() {}

func (x *GetMSMenuDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSMenuDetailReq.ProtoReflect.Descriptor instead.
func (*GetMSMenuDetailReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{20}
}

func (x *GetMSMenuDetailReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetMSMenuDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//GetMSMenuDetailResp 获取菜单详情响应
type GetMSMenuDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Menu       *MSMenu     `protobuf:"bytes,2,opt,name=menu,proto3" json:"menu"`
}

func (x *GetMSMenuDetailResp) Reset() {
	*x = GetMSMenuDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSMenuDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSMenuDetailResp) ProtoMessage() {}

func (x *GetMSMenuDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSMenuDetailResp.ProtoReflect.Descriptor instead.
func (*GetMSMenuDetailResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{21}
}

func (x *GetMSMenuDetailResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMSMenuDetailResp) GetMenu() *MSMenu {
	if x != nil {
		return x.Menu
	}
	return nil
}

//AddMSMenuReq 添加菜单请求
type AddMSMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Menu      *MSMenu    `protobuf:"bytes,2,opt,name=menu,proto3" json:"menu"`
}

func (x *AddMSMenuReq) Reset() {
	*x = AddMSMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSMenuReq) ProtoMessage() {}

func (x *AddMSMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSMenuReq.ProtoReflect.Descriptor instead.
func (*AddMSMenuReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{22}
}

func (x *AddMSMenuReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *AddMSMenuReq) GetMenu() *MSMenu {
	if x != nil {
		return x.Menu
	}
	return nil
}

//AddMSMenuResp 添加菜单响应
type AddMSMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *AddMSMenuResp) Reset() {
	*x = AddMSMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSMenuResp) ProtoMessage() {}

func (x *AddMSMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSMenuResp.ProtoReflect.Descriptor instead.
func (*AddMSMenuResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{23}
}

func (x *AddMSMenuResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//UpdateMSMenuReq 更新菜单请求
type UpdateMSMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Menu      *MSMenu    `protobuf:"bytes,2,opt,name=menu,proto3" json:"menu"`
}

func (x *UpdateMSMenuReq) Reset() {
	*x = UpdateMSMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSMenuReq) ProtoMessage() {}

func (x *UpdateMSMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSMenuReq.ProtoReflect.Descriptor instead.
func (*UpdateMSMenuReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateMSMenuReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UpdateMSMenuReq) GetMenu() *MSMenu {
	if x != nil {
		return x.Menu
	}
	return nil
}

//UpdateMSMenuResp 更新菜单响应
type UpdateMSMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateMSMenuResp) Reset() {
	*x = UpdateMSMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSMenuResp) ProtoMessage() {}

func (x *UpdateMSMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSMenuResp.ProtoReflect.Descriptor instead.
func (*UpdateMSMenuResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateMSMenuResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//DeleteMSMenuReq 删除菜单请求
type DeleteMSMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Ids       []string   `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids"`
}

func (x *DeleteMSMenuReq) Reset() {
	*x = DeleteMSMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSMenuReq) ProtoMessage() {}

func (x *DeleteMSMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSMenuReq.ProtoReflect.Descriptor instead.
func (*DeleteMSMenuReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteMSMenuReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *DeleteMSMenuReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

//DeleteMSMenuResp 删除菜单响应
type DeleteMSMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteMSMenuResp) Reset() {
	*x = DeleteMSMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSMenuResp) ProtoMessage() {}

func (x *DeleteMSMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSMenuResp.ProtoReflect.Descriptor instead.
func (*DeleteMSMenuResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteMSMenuResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//MSApiPath 接口路径
type MSApiPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	CreatedAt    int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt"`
	CreatedAtStr string `protobuf:"bytes,3,opt,name=createdAtStr,proto3" json:"createdAtStr"`
	CreatedBy    string `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy"`
	UpdatedAt    int64  `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt"`
	UpdatedAtStr string `protobuf:"bytes,6,opt,name=updatedAtStr,proto3" json:"updatedAtStr"`
	UpdatedBy    string `protobuf:"bytes,7,opt,name=updatedBy,proto3" json:"updatedBy"`
	Title        string `protobuf:"bytes,11,opt,name=title,proto3" json:"title"`
	Path         string `protobuf:"bytes,12,opt,name=path,proto3" json:"path"`
	LogEnable    bool   `protobuf:"varint,13,opt,name=logEnable,proto3" json:"logEnable"`
}

func (x *MSApiPath) Reset() {
	*x = MSApiPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSApiPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSApiPath) ProtoMessage() {}

func (x *MSApiPath) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSApiPath.ProtoReflect.Descriptor instead.
func (*MSApiPath) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{28}
}

func (x *MSApiPath) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MSApiPath) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MSApiPath) GetCreatedAtStr() string {
	if x != nil {
		return x.CreatedAtStr
	}
	return ""
}

func (x *MSApiPath) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MSApiPath) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *MSApiPath) GetUpdatedAtStr() string {
	if x != nil {
		return x.UpdatedAtStr
	}
	return ""
}

func (x *MSApiPath) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *MSApiPath) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MSApiPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MSApiPath) GetLogEnable() bool {
	if x != nil {
		return x.LogEnable
	}
	return false
}

//GetAllMSApiPathListReq 获取所有接口路径列表请求
type GetAllMSApiPathListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq        `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Page      *Page             `protobuf:"bytes,2,opt,name=page,proto3" json:"page"`
	Filter    map[string]string `protobuf:"bytes,3,rep,name=filter,proto3" json:"filter" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAllMSApiPathListReq) Reset() {
	*x = GetAllMSApiPathListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSApiPathListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSApiPathListReq) ProtoMessage() {}

func (x *GetAllMSApiPathListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSApiPathListReq.ProtoReflect.Descriptor instead.
func (*GetAllMSApiPathListReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{29}
}

func (x *GetAllMSApiPathListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetAllMSApiPathListReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetAllMSApiPathListReq) GetFilter() map[string]string {
	if x != nil {
		return x.Filter
	}
	return nil
}

//GetAllMSApiPathListResp 获取所有接口路径列表响应
type GetAllMSApiPathListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp  `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	ApiPaths   []*MSApiPath `protobuf:"bytes,2,rep,name=apiPaths,proto3" json:"apiPaths"`
	Total      int64        `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *GetAllMSApiPathListResp) Reset() {
	*x = GetAllMSApiPathListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSApiPathListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSApiPathListResp) ProtoMessage() {}

func (x *GetAllMSApiPathListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSApiPathListResp.ProtoReflect.Descriptor instead.
func (*GetAllMSApiPathListResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{30}
}

func (x *GetAllMSApiPathListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllMSApiPathListResp) GetApiPaths() []*MSApiPath {
	if x != nil {
		return x.ApiPaths
	}
	return nil
}

func (x *GetAllMSApiPathListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

//GetMyMSApiPathListReq 获取我的接口路径列表请求
type GetMyMSApiPathListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
}

func (x *GetMyMSApiPathListReq) Reset() {
	*x = GetMyMSApiPathListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyMSApiPathListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyMSApiPathListReq) ProtoMessage() {}

func (x *GetMyMSApiPathListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyMSApiPathListReq.ProtoReflect.Descriptor instead.
func (*GetMyMSApiPathListReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{31}
}

func (x *GetMyMSApiPathListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

//GetMyMSApiPathListResp 获取我的接口路径列表响应
type GetMyMSApiPathListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp  `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	ApiPaths   []*MSApiPath `protobuf:"bytes,2,rep,name=apiPaths,proto3" json:"apiPaths"`
}

func (x *GetMyMSApiPathListResp) Reset() {
	*x = GetMyMSApiPathListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyMSApiPathListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyMSApiPathListResp) ProtoMessage() {}

func (x *GetMyMSApiPathListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyMSApiPathListResp.ProtoReflect.Descriptor instead.
func (*GetMyMSApiPathListResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{32}
}

func (x *GetMyMSApiPathListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMyMSApiPathListResp) GetApiPaths() []*MSApiPath {
	if x != nil {
		return x.ApiPaths
	}
	return nil
}

//GetMSApiPathDetailReq 获取接口路径详情请求
type GetMSApiPathDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Id        string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *GetMSApiPathDetailReq) Reset() {
	*x = GetMSApiPathDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSApiPathDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSApiPathDetailReq) ProtoMessage() {}

func (x *GetMSApiPathDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSApiPathDetailReq.ProtoReflect.Descriptor instead.
func (*GetMSApiPathDetailReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{33}
}

func (x *GetMSApiPathDetailReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetMSApiPathDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//GetMSApiPathDetailResp 获取接口路径详情响应
type GetMSApiPathDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	ApiPath    *MSApiPath  `protobuf:"bytes,2,opt,name=apiPath,proto3" json:"apiPath"`
}

func (x *GetMSApiPathDetailResp) Reset() {
	*x = GetMSApiPathDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSApiPathDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSApiPathDetailResp) ProtoMessage() {}

func (x *GetMSApiPathDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSApiPathDetailResp.ProtoReflect.Descriptor instead.
func (*GetMSApiPathDetailResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{34}
}

func (x *GetMSApiPathDetailResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMSApiPathDetailResp) GetApiPath() *MSApiPath {
	if x != nil {
		return x.ApiPath
	}
	return nil
}

//AddMSApiPathReq 添加接口路径请求
type AddMSApiPathReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	ApiPath   *MSApiPath `protobuf:"bytes,2,opt,name=apiPath,proto3" json:"apiPath"`
}

func (x *AddMSApiPathReq) Reset() {
	*x = AddMSApiPathReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSApiPathReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSApiPathReq) ProtoMessage() {}

func (x *AddMSApiPathReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSApiPathReq.ProtoReflect.Descriptor instead.
func (*AddMSApiPathReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{35}
}

func (x *AddMSApiPathReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *AddMSApiPathReq) GetApiPath() *MSApiPath {
	if x != nil {
		return x.ApiPath
	}
	return nil
}

//AddMSApiPathResp 添加接口路径响应
type AddMSApiPathResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *AddMSApiPathResp) Reset() {
	*x = AddMSApiPathResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSApiPathResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSApiPathResp) ProtoMessage() {}

func (x *AddMSApiPathResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSApiPathResp.ProtoReflect.Descriptor instead.
func (*AddMSApiPathResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{36}
}

func (x *AddMSApiPathResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//UpdateMSApiPathReq 更新接口路径请求
type UpdateMSApiPathReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	ApiPath   *MSApiPath `protobuf:"bytes,2,opt,name=apiPath,proto3" json:"apiPath"`
}

func (x *UpdateMSApiPathReq) Reset() {
	*x = UpdateMSApiPathReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSApiPathReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSApiPathReq) ProtoMessage() {}

func (x *UpdateMSApiPathReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSApiPathReq.ProtoReflect.Descriptor instead.
func (*UpdateMSApiPathReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateMSApiPathReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UpdateMSApiPathReq) GetApiPath() *MSApiPath {
	if x != nil {
		return x.ApiPath
	}
	return nil
}

//UpdateMSApiPathResp 更新接口路径响应
type UpdateMSApiPathResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateMSApiPathResp) Reset() {
	*x = UpdateMSApiPathResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSApiPathResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSApiPathResp) ProtoMessage() {}

func (x *UpdateMSApiPathResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSApiPathResp.ProtoReflect.Descriptor instead.
func (*UpdateMSApiPathResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateMSApiPathResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//DeleteMSApiPathReq 删除接口路径请求
type DeleteMSApiPathReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Ids       []string   `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids"`
}

func (x *DeleteMSApiPathReq) Reset() {
	*x = DeleteMSApiPathReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSApiPathReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSApiPathReq) ProtoMessage() {}

func (x *DeleteMSApiPathReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSApiPathReq.ProtoReflect.Descriptor instead.
func (*DeleteMSApiPathReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteMSApiPathReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *DeleteMSApiPathReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

//DeleteMSApiPathResp 删除接口路径响应
type DeleteMSApiPathResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteMSApiPathResp) Reset() {
	*x = DeleteMSApiPathResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSApiPathResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSApiPathResp) ProtoMessage() {}

func (x *DeleteMSApiPathResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSApiPathResp.ProtoReflect.Descriptor instead.
func (*DeleteMSApiPathResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteMSApiPathResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//MSRole 角色
type MSRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	CreatedAt    int64                 `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt"`
	CreatedAtStr string                `protobuf:"bytes,3,opt,name=createdAtStr,proto3" json:"createdAtStr"`
	CreatedBy    string                `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy"`
	UpdatedAt    int64                 `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt"`
	UpdatedAtStr string                `protobuf:"bytes,6,opt,name=updatedAtStr,proto3" json:"updatedAtStr"`
	UpdatedBy    string                `protobuf:"bytes,7,opt,name=updatedBy,proto3" json:"updatedBy"`
	Name         string                `protobuf:"bytes,11,opt,name=name,proto3" json:"name"`
	Remark       string                `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark"`
	IsDisable    bool                  `protobuf:"varint,13,opt,name=isDisable,proto3" json:"isDisable"`
	Sort         int32                 `protobuf:"varint,14,opt,name=sort,proto3" json:"sort"`
	ApiPathIds   []string              `protobuf:"bytes,15,rep,name=apiPathIds,proto3" json:"apiPathIds"`
	ApiPaths     map[string]*MSApiPath `protobuf:"bytes,16,rep,name=apiPaths,proto3" json:"apiPaths" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MenuIds      []string              `protobuf:"bytes,17,rep,name=menuIds,proto3" json:"menuIds"`
	Menus        map[string]*MSMenu    `protobuf:"bytes,18,rep,name=menus,proto3" json:"menus" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Member       int64                 `protobuf:"varint,19,opt,name=member,proto3" json:"member"`
}

func (x *MSRole) Reset() {
	*x = MSRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSRole) ProtoMessage() {}

func (x *MSRole) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSRole.ProtoReflect.Descriptor instead.
func (*MSRole) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{41}
}

func (x *MSRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MSRole) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MSRole) GetCreatedAtStr() string {
	if x != nil {
		return x.CreatedAtStr
	}
	return ""
}

func (x *MSRole) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MSRole) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *MSRole) GetUpdatedAtStr() string {
	if x != nil {
		return x.UpdatedAtStr
	}
	return ""
}

func (x *MSRole) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *MSRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MSRole) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MSRole) GetIsDisable() bool {
	if x != nil {
		return x.IsDisable
	}
	return false
}

func (x *MSRole) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MSRole) GetApiPathIds() []string {
	if x != nil {
		return x.ApiPathIds
	}
	return nil
}

func (x *MSRole) GetApiPaths() map[string]*MSApiPath {
	if x != nil {
		return x.ApiPaths
	}
	return nil
}

func (x *MSRole) GetMenuIds() []string {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

func (x *MSRole) GetMenus() map[string]*MSMenu {
	if x != nil {
		return x.Menus
	}
	return nil
}

func (x *MSRole) GetMember() int64 {
	if x != nil {
		return x.Member
	}
	return 0
}

//GetAllMSRoleListReq 获取所有角色列表请求
type GetAllMSRoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq        `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Page      *Page             `protobuf:"bytes,2,opt,name=page,proto3" json:"page"`
	Filter    map[string]string `protobuf:"bytes,3,rep,name=filter,proto3" json:"filter" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAllMSRoleListReq) Reset() {
	*x = GetAllMSRoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSRoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSRoleListReq) ProtoMessage() {}

func (x *GetAllMSRoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSRoleListReq.ProtoReflect.Descriptor instead.
func (*GetAllMSRoleListReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{42}
}

func (x *GetAllMSRoleListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetAllMSRoleListReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetAllMSRoleListReq) GetFilter() map[string]string {
	if x != nil {
		return x.Filter
	}
	return nil
}

//GetAllMSRoleListResp 获取所有角色列表响应
type GetAllMSRoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Roles      []*MSRole   `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles"`
	Total      int64       `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *GetAllMSRoleListResp) Reset() {
	*x = GetAllMSRoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSRoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSRoleListResp) ProtoMessage() {}

func (x *GetAllMSRoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSRoleListResp.ProtoReflect.Descriptor instead.
func (*GetAllMSRoleListResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{43}
}

func (x *GetAllMSRoleListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllMSRoleListResp) GetRoles() []*MSRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GetAllMSRoleListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

//GetMSRoleDetailReq 获取角色详情请求
type GetMSRoleDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Id        string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *GetMSRoleDetailReq) Reset() {
	*x = GetMSRoleDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSRoleDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSRoleDetailReq) ProtoMessage() {}

func (x *GetMSRoleDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSRoleDetailReq.ProtoReflect.Descriptor instead.
func (*GetMSRoleDetailReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{44}
}

func (x *GetMSRoleDetailReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetMSRoleDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//GetMSRoleDetailResp 获取角色详情响应
type GetMSRoleDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Role       *MSRole     `protobuf:"bytes,2,opt,name=role,proto3" json:"role"`
}

func (x *GetMSRoleDetailResp) Reset() {
	*x = GetMSRoleDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSRoleDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSRoleDetailResp) ProtoMessage() {}

func (x *GetMSRoleDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSRoleDetailResp.ProtoReflect.Descriptor instead.
func (*GetMSRoleDetailResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{45}
}

func (x *GetMSRoleDetailResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMSRoleDetailResp) GetRole() *MSRole {
	if x != nil {
		return x.Role
	}
	return nil
}

//AddMSRoleReq 添加角色请求
type AddMSRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Role      *MSRole    `protobuf:"bytes,2,opt,name=role,proto3" json:"role"`
}

func (x *AddMSRoleReq) Reset() {
	*x = AddMSRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSRoleReq) ProtoMessage() {}

func (x *AddMSRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSRoleReq.ProtoReflect.Descriptor instead.
func (*AddMSRoleReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{46}
}

func (x *AddMSRoleReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *AddMSRoleReq) GetRole() *MSRole {
	if x != nil {
		return x.Role
	}
	return nil
}

//AddMSRoleResp 添加角色响应
type AddMSRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *AddMSRoleResp) Reset() {
	*x = AddMSRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSRoleResp) ProtoMessage() {}

func (x *AddMSRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSRoleResp.ProtoReflect.Descriptor instead.
func (*AddMSRoleResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{47}
}

func (x *AddMSRoleResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//UpdateMSRoleReq 更新角色请求
type UpdateMSRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Role      *MSRole    `protobuf:"bytes,2,opt,name=role,proto3" json:"role"`
}

func (x *UpdateMSRoleReq) Reset() {
	*x = UpdateMSRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSRoleReq) ProtoMessage() {}

func (x *UpdateMSRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateMSRoleReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateMSRoleReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UpdateMSRoleReq) GetRole() *MSRole {
	if x != nil {
		return x.Role
	}
	return nil
}

//UpdateMSRoleResp 更新角色响应
type UpdateMSRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateMSRoleResp) Reset() {
	*x = UpdateMSRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSRoleResp) ProtoMessage() {}

func (x *UpdateMSRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSRoleResp.ProtoReflect.Descriptor instead.
func (*UpdateMSRoleResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateMSRoleResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//DeleteMSRoleReq 删除角色请求
type DeleteMSRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Ids       []string   `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids"`
}

func (x *DeleteMSRoleReq) Reset() {
	*x = DeleteMSRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSRoleReq) ProtoMessage() {}

func (x *DeleteMSRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSRoleReq.ProtoReflect.Descriptor instead.
func (*DeleteMSRoleReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{50}
}

func (x *DeleteMSRoleReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *DeleteMSRoleReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

//DeleteMSRoleResp 删除角色响应
type DeleteMSRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteMSRoleResp) Reset() {
	*x = DeleteMSRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSRoleResp) ProtoMessage() {}

func (x *DeleteMSRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSRoleResp.ProtoReflect.Descriptor instead.
func (*DeleteMSRoleResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{51}
}

func (x *DeleteMSRoleResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//MSUser 后台管理用户
type MSUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	CreatedAt     int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt"`
	CreatedAtStr  string `protobuf:"bytes,3,opt,name=createdAtStr,proto3" json:"createdAtStr"`
	CreatedBy     string `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy"`
	UpdatedAt     int64  `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt"`
	UpdatedAtStr  string `protobuf:"bytes,6,opt,name=updatedAtStr,proto3" json:"updatedAtStr"`
	UpdatedBy     string `protobuf:"bytes,7,opt,name=updatedBy,proto3" json:"updatedBy"`
	Username      string `protobuf:"bytes,11,opt,name=username,proto3" json:"username"`
	Password      string `protobuf:"bytes,12,opt,name=password,proto3" json:"password"`
	Nickname      string `protobuf:"bytes,13,opt,name=nickname,proto3" json:"nickname"`
	Avatar        string `protobuf:"bytes,14,opt,name=avatar,proto3" json:"avatar"`
	Role          string `protobuf:"bytes,15,opt,name=role,proto3" json:"role"`
	IsDisable     bool   `protobuf:"varint,16,opt,name=isDisable,proto3" json:"isDisable"`
	LastLoginIp   string `protobuf:"bytes,17,opt,name=lastLoginIp,proto3" json:"lastLoginIp"`
	LastLoginTime string `protobuf:"bytes,18,opt,name=lastLoginTime,proto3" json:"lastLoginTime"`
	RoleId        string `protobuf:"bytes,19,opt,name=roleId,proto3" json:"roleId"`
}

func (x *MSUser) Reset() {
	*x = MSUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSUser) ProtoMessage() {}

func (x *MSUser) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSUser.ProtoReflect.Descriptor instead.
func (*MSUser) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{52}
}

func (x *MSUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MSUser) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MSUser) GetCreatedAtStr() string {
	if x != nil {
		return x.CreatedAtStr
	}
	return ""
}

func (x *MSUser) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MSUser) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *MSUser) GetUpdatedAtStr() string {
	if x != nil {
		return x.UpdatedAtStr
	}
	return ""
}

func (x *MSUser) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *MSUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MSUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *MSUser) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MSUser) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *MSUser) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *MSUser) GetIsDisable() bool {
	if x != nil {
		return x.IsDisable
	}
	return false
}

func (x *MSUser) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *MSUser) GetLastLoginTime() string {
	if x != nil {
		return x.LastLoginTime
	}
	return ""
}

func (x *MSUser) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

//GetAllMSUserListReq 获取所有用户列表请求
type GetAllMSUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq        `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Page      *Page             `protobuf:"bytes,2,opt,name=page,proto3" json:"page"`
	Filter    map[string]string `protobuf:"bytes,3,rep,name=filter,proto3" json:"filter" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAllMSUserListReq) Reset() {
	*x = GetAllMSUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSUserListReq) ProtoMessage() {}

func (x *GetAllMSUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSUserListReq.ProtoReflect.Descriptor instead.
func (*GetAllMSUserListReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{53}
}

func (x *GetAllMSUserListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetAllMSUserListReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetAllMSUserListReq) GetFilter() map[string]string {
	if x != nil {
		return x.Filter
	}
	return nil
}

//GetAllMSUserListResp 获取所有用户列表响应
type GetAllMSUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Users      []*MSUser   `protobuf:"bytes,2,rep,name=users,proto3" json:"users"`
	Total      int64       `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *GetAllMSUserListResp) Reset() {
	*x = GetAllMSUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSUserListResp) ProtoMessage() {}

func (x *GetAllMSUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSUserListResp.ProtoReflect.Descriptor instead.
func (*GetAllMSUserListResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{54}
}

func (x *GetAllMSUserListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllMSUserListResp) GetUsers() []*MSUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetAllMSUserListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

//GetMSUserDetailReq 获取用户详情请求
type GetMSUserDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Id        string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *GetMSUserDetailReq) Reset() {
	*x = GetMSUserDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSUserDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSUserDetailReq) ProtoMessage() {}

func (x *GetMSUserDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSUserDetailReq.ProtoReflect.Descriptor instead.
func (*GetMSUserDetailReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{55}
}

func (x *GetMSUserDetailReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetMSUserDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//GetMSUserDetailResp 获取用户详情响应
type GetMSUserDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	User       *MSUser     `protobuf:"bytes,2,opt,name=user,proto3" json:"user"`
}

func (x *GetMSUserDetailResp) Reset() {
	*x = GetMSUserDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSUserDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSUserDetailResp) ProtoMessage() {}

func (x *GetMSUserDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSUserDetailResp.ProtoReflect.Descriptor instead.
func (*GetMSUserDetailResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{56}
}

func (x *GetMSUserDetailResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMSUserDetailResp) GetUser() *MSUser {
	if x != nil {
		return x.User
	}
	return nil
}

//GetSelfMSUserDetailReq 获取自己的用户详情请求
type GetSelfMSUserDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
}

func (x *GetSelfMSUserDetailReq) Reset() {
	*x = GetSelfMSUserDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSelfMSUserDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfMSUserDetailReq) ProtoMessage() {}

func (x *GetSelfMSUserDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfMSUserDetailReq.ProtoReflect.Descriptor instead.
func (*GetSelfMSUserDetailReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{57}
}

func (x *GetSelfMSUserDetailReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

//GetSelfMSUserDetailResp 获取自己的用户详情响应
type GetSelfMSUserDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	User        *MSUser     `protobuf:"bytes,2,opt,name=user,proto3" json:"user"`
	Permissions []string    `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions"` // 权限集合: [[*]=>所有权限, ['article:add']=>部分权限]
}

func (x *GetSelfMSUserDetailResp) Reset() {
	*x = GetSelfMSUserDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSelfMSUserDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfMSUserDetailResp) ProtoMessage() {}

func (x *GetSelfMSUserDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfMSUserDetailResp.ProtoReflect.Descriptor instead.
func (*GetSelfMSUserDetailResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{58}
}

func (x *GetSelfMSUserDetailResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetSelfMSUserDetailResp) GetUser() *MSUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetSelfMSUserDetailResp) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

//AddMSUserReq 添加用户请求
type AddMSUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	User      *MSUser    `protobuf:"bytes,2,opt,name=user,proto3" json:"user"`
}

func (x *AddMSUserReq) Reset() {
	*x = AddMSUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSUserReq) ProtoMessage() {}

func (x *AddMSUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSUserReq.ProtoReflect.Descriptor instead.
func (*AddMSUserReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{59}
}

func (x *AddMSUserReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *AddMSUserReq) GetUser() *MSUser {
	if x != nil {
		return x.User
	}
	return nil
}

//AddMSUserResp 添加用户响应
type AddMSUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *AddMSUserResp) Reset() {
	*x = AddMSUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSUserResp) ProtoMessage() {}

func (x *AddMSUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSUserResp.ProtoReflect.Descriptor instead.
func (*AddMSUserResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{60}
}

func (x *AddMSUserResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//UpdateMSUserReq 更新用户请求
type UpdateMSUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	User      *MSUser    `protobuf:"bytes,2,opt,name=user,proto3" json:"user"`
}

func (x *UpdateMSUserReq) Reset() {
	*x = UpdateMSUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSUserReq) ProtoMessage() {}

func (x *UpdateMSUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSUserReq.ProtoReflect.Descriptor instead.
func (*UpdateMSUserReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{61}
}

func (x *UpdateMSUserReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UpdateMSUserReq) GetUser() *MSUser {
	if x != nil {
		return x.User
	}
	return nil
}

//UpdateMSUserResp 更新用户响应
type UpdateMSUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateMSUserResp) Reset() {
	*x = UpdateMSUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSUserResp) ProtoMessage() {}

func (x *UpdateMSUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSUserResp.ProtoReflect.Descriptor instead.
func (*UpdateMSUserResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{62}
}

func (x *UpdateMSUserResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//DeleteMSUserReq 删除用户请求
type DeleteMSUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Ids       []string   `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids"`
}

func (x *DeleteMSUserReq) Reset() {
	*x = DeleteMSUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSUserReq) ProtoMessage() {}

func (x *DeleteMSUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSUserReq.ProtoReflect.Descriptor instead.
func (*DeleteMSUserReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{63}
}

func (x *DeleteMSUserReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *DeleteMSUserReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

//DeleteMSUserResp 删除用户响应
type DeleteMSUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteMSUserResp) Reset() {
	*x = DeleteMSUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSUserResp) ProtoMessage() {}

func (x *DeleteMSUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSUserResp.ProtoReflect.Descriptor instead.
func (*DeleteMSUserResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{64}
}

func (x *DeleteMSUserResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//SwitchMSUserStatusReq 切换用户状态请求
type SwitchMSUserStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Id        string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *SwitchMSUserStatusReq) Reset() {
	*x = SwitchMSUserStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchMSUserStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchMSUserStatusReq) ProtoMessage() {}

func (x *SwitchMSUserStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchMSUserStatusReq.ProtoReflect.Descriptor instead.
func (*SwitchMSUserStatusReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{65}
}

func (x *SwitchMSUserStatusReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *SwitchMSUserStatusReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//SwitchMSUserStatusResp 切换用户状态响应
type SwitchMSUserStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *SwitchMSUserStatusResp) Reset() {
	*x = SwitchMSUserStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchMSUserStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchMSUserStatusResp) ProtoMessage() {}

func (x *SwitchMSUserStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchMSUserStatusResp.ProtoReflect.Descriptor instead.
func (*SwitchMSUserStatusResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{66}
}

func (x *SwitchMSUserStatusResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//MSIpWhiteList 后台管理IP白名单
type MSIpWhiteList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	CreatedAt    int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt"`
	CreatedAtStr string `protobuf:"bytes,3,opt,name=createdAtStr,proto3" json:"createdAtStr"`
	CreatedBy    string `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy"`
	UpdatedAt    int64  `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt"`
	UpdatedAtStr string `protobuf:"bytes,6,opt,name=updatedAtStr,proto3" json:"updatedAtStr"`
	UpdatedBy    string `protobuf:"bytes,7,opt,name=updatedBy,proto3" json:"updatedBy"`
	StartIp      string `protobuf:"bytes,11,opt,name=startIp,proto3" json:"startIp"`
	EndIp        string `protobuf:"bytes,12,opt,name=endIp,proto3" json:"endIp"`
	IsEnable     bool   `protobuf:"varint,13,opt,name=isEnable,proto3" json:"isEnable"`
	Remark       string `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark"`
	UserId       string `protobuf:"bytes,15,opt,name=userId,proto3" json:"userId"`
}

func (x *MSIpWhiteList) Reset() {
	*x = MSIpWhiteList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSIpWhiteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSIpWhiteList) ProtoMessage() {}

func (x *MSIpWhiteList) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSIpWhiteList.ProtoReflect.Descriptor instead.
func (*MSIpWhiteList) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{67}
}

func (x *MSIpWhiteList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MSIpWhiteList) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MSIpWhiteList) GetCreatedAtStr() string {
	if x != nil {
		return x.CreatedAtStr
	}
	return ""
}

func (x *MSIpWhiteList) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MSIpWhiteList) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *MSIpWhiteList) GetUpdatedAtStr() string {
	if x != nil {
		return x.UpdatedAtStr
	}
	return ""
}

func (x *MSIpWhiteList) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *MSIpWhiteList) GetStartIp() string {
	if x != nil {
		return x.StartIp
	}
	return ""
}

func (x *MSIpWhiteList) GetEndIp() string {
	if x != nil {
		return x.EndIp
	}
	return ""
}

func (x *MSIpWhiteList) GetIsEnable() bool {
	if x != nil {
		return x.IsEnable
	}
	return false
}

func (x *MSIpWhiteList) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MSIpWhiteList) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//GetAllMSIpWhiteListReq 获取所有IP白名单列表请求
type GetAllMSIpWhiteListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq        `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Page      *Page             `protobuf:"bytes,2,opt,name=page,proto3" json:"page"`
	Filter    map[string]string `protobuf:"bytes,3,rep,name=filter,proto3" json:"filter" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAllMSIpWhiteListReq) Reset() {
	*x = GetAllMSIpWhiteListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSIpWhiteListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSIpWhiteListReq) ProtoMessage() {}

func (x *GetAllMSIpWhiteListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSIpWhiteListReq.ProtoReflect.Descriptor instead.
func (*GetAllMSIpWhiteListReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{68}
}

func (x *GetAllMSIpWhiteListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetAllMSIpWhiteListReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetAllMSIpWhiteListReq) GetFilter() map[string]string {
	if x != nil {
		return x.Filter
	}
	return nil
}

//GetAllMSIpWhiteListResp 获取所有IP白名单列表响应
type GetAllMSIpWhiteListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *CommonResp      `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	IpWhiteLists []*MSIpWhiteList `protobuf:"bytes,2,rep,name=ipWhiteLists,proto3" json:"ipWhiteLists"`
	Total        int64            `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *GetAllMSIpWhiteListResp) Reset() {
	*x = GetAllMSIpWhiteListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSIpWhiteListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSIpWhiteListResp) ProtoMessage() {}

func (x *GetAllMSIpWhiteListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSIpWhiteListResp.ProtoReflect.Descriptor instead.
func (*GetAllMSIpWhiteListResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{69}
}

func (x *GetAllMSIpWhiteListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllMSIpWhiteListResp) GetIpWhiteLists() []*MSIpWhiteList {
	if x != nil {
		return x.IpWhiteLists
	}
	return nil
}

func (x *GetAllMSIpWhiteListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

//GetMSIpWhiteListDetailReq 获取IP白名单详情请求
type GetMSIpWhiteListDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Id        string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *GetMSIpWhiteListDetailReq) Reset() {
	*x = GetMSIpWhiteListDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSIpWhiteListDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSIpWhiteListDetailReq) ProtoMessage() {}

func (x *GetMSIpWhiteListDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSIpWhiteListDetailReq.ProtoReflect.Descriptor instead.
func (*GetMSIpWhiteListDetailReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{70}
}

func (x *GetMSIpWhiteListDetailReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetMSIpWhiteListDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//GetMSIpWhiteListDetailResp 获取IP白名单详情响应
type GetMSIpWhiteListDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp    `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	IpWhiteList *MSIpWhiteList `protobuf:"bytes,2,opt,name=ipWhiteList,proto3" json:"ipWhiteList"`
}

func (x *GetMSIpWhiteListDetailResp) Reset() {
	*x = GetMSIpWhiteListDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSIpWhiteListDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSIpWhiteListDetailResp) ProtoMessage() {}

func (x *GetMSIpWhiteListDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSIpWhiteListDetailResp.ProtoReflect.Descriptor instead.
func (*GetMSIpWhiteListDetailResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{71}
}

func (x *GetMSIpWhiteListDetailResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMSIpWhiteListDetailResp) GetIpWhiteList() *MSIpWhiteList {
	if x != nil {
		return x.IpWhiteList
	}
	return nil
}

//AddMSIpWhiteListReq 添加IP白名单请求
type AddMSIpWhiteListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq   *CommonReq     `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	IpWhiteList *MSIpWhiteList `protobuf:"bytes,2,opt,name=ipWhiteList,proto3" json:"ipWhiteList"`
}

func (x *AddMSIpWhiteListReq) Reset() {
	*x = AddMSIpWhiteListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSIpWhiteListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSIpWhiteListReq) ProtoMessage() {}

func (x *AddMSIpWhiteListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSIpWhiteListReq.ProtoReflect.Descriptor instead.
func (*AddMSIpWhiteListReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{72}
}

func (x *AddMSIpWhiteListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *AddMSIpWhiteListReq) GetIpWhiteList() *MSIpWhiteList {
	if x != nil {
		return x.IpWhiteList
	}
	return nil
}

//AddMSIpWhiteListResp 添加IP白名单响应
type AddMSIpWhiteListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *AddMSIpWhiteListResp) Reset() {
	*x = AddMSIpWhiteListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSIpWhiteListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSIpWhiteListResp) ProtoMessage() {}

func (x *AddMSIpWhiteListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSIpWhiteListResp.ProtoReflect.Descriptor instead.
func (*AddMSIpWhiteListResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{73}
}

func (x *AddMSIpWhiteListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//UpdateMSIpWhiteListReq 更新IP白名单请求
type UpdateMSIpWhiteListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq   *CommonReq     `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	IpWhiteList *MSIpWhiteList `protobuf:"bytes,2,opt,name=ipWhiteList,proto3" json:"ipWhiteList"`
}

func (x *UpdateMSIpWhiteListReq) Reset() {
	*x = UpdateMSIpWhiteListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSIpWhiteListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSIpWhiteListReq) ProtoMessage() {}

func (x *UpdateMSIpWhiteListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSIpWhiteListReq.ProtoReflect.Descriptor instead.
func (*UpdateMSIpWhiteListReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{74}
}

func (x *UpdateMSIpWhiteListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UpdateMSIpWhiteListReq) GetIpWhiteList() *MSIpWhiteList {
	if x != nil {
		return x.IpWhiteList
	}
	return nil
}

//UpdateMSIpWhiteListResp 更新IP白名单响应
type UpdateMSIpWhiteListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateMSIpWhiteListResp) Reset() {
	*x = UpdateMSIpWhiteListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSIpWhiteListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSIpWhiteListResp) ProtoMessage() {}

func (x *UpdateMSIpWhiteListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSIpWhiteListResp.ProtoReflect.Descriptor instead.
func (*UpdateMSIpWhiteListResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{75}
}

func (x *UpdateMSIpWhiteListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//DeleteMSIpWhiteListReq 删除IP白名单请求
type DeleteMSIpWhiteListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Ids       []string   `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids"`
}

func (x *DeleteMSIpWhiteListReq) Reset() {
	*x = DeleteMSIpWhiteListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSIpWhiteListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSIpWhiteListReq) ProtoMessage() {}

func (x *DeleteMSIpWhiteListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSIpWhiteListReq.ProtoReflect.Descriptor instead.
func (*DeleteMSIpWhiteListReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{76}
}

func (x *DeleteMSIpWhiteListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *DeleteMSIpWhiteListReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

//DeleteMSIpWhiteListResp 删除IP白名单响应
type DeleteMSIpWhiteListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteMSIpWhiteListResp) Reset() {
	*x = DeleteMSIpWhiteListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSIpWhiteListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSIpWhiteListResp) ProtoMessage() {}

func (x *DeleteMSIpWhiteListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSIpWhiteListResp.ProtoReflect.Descriptor instead.
func (*DeleteMSIpWhiteListResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{77}
}

func (x *DeleteMSIpWhiteListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//MSOperationLog 后台管理操作日志
type MSOperationLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	ReqTime        int64  `protobuf:"varint,2,opt,name=reqTime,proto3" json:"reqTime"`
	ReqTimeStr     string `protobuf:"bytes,3,opt,name=reqTimeStr,proto3" json:"reqTimeStr"`
	RespTime       int64  `protobuf:"varint,4,opt,name=respTime,proto3" json:"respTime"`
	RespTimeStr    string `protobuf:"bytes,5,opt,name=respTimeStr,proto3" json:"respTimeStr"`
	OperationType  string `protobuf:"bytes,6,opt,name=operationType,proto3" json:"operationType"`
	OperationTitle string `protobuf:"bytes,7,opt,name=operationTitle,proto3" json:"operationTitle"`
	ReqPath        string `protobuf:"bytes,8,opt,name=reqPath,proto3" json:"reqPath"`
	ReqParams      string `protobuf:"bytes,9,opt,name=reqParams,proto3" json:"reqParams"`
	ResultSuccess  bool   `protobuf:"varint,10,opt,name=resultSuccess,proto3" json:"resultSuccess"`
	ReqResultMsg   string `protobuf:"bytes,11,opt,name=reqResultMsg,proto3" json:"reqResultMsg"`
	Resp           string `protobuf:"bytes,12,opt,name=resp,proto3" json:"resp"`
	ReqIp          string `protobuf:"bytes,13,opt,name=reqIp,proto3" json:"reqIp"`
	IpSource       string `protobuf:"bytes,14,opt,name=ipSource,proto3" json:"ipSource"`
	ReqCost        int64  `protobuf:"varint,15,opt,name=reqCost,proto3" json:"reqCost"`
	Operator       string `protobuf:"bytes,16,opt,name=operator,proto3" json:"operator"`
}

func (x *MSOperationLog) Reset() {
	*x = MSOperationLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSOperationLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSOperationLog) ProtoMessage() {}

func (x *MSOperationLog) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSOperationLog.ProtoReflect.Descriptor instead.
func (*MSOperationLog) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{78}
}

func (x *MSOperationLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MSOperationLog) GetReqTime() int64 {
	if x != nil {
		return x.ReqTime
	}
	return 0
}

func (x *MSOperationLog) GetReqTimeStr() string {
	if x != nil {
		return x.ReqTimeStr
	}
	return ""
}

func (x *MSOperationLog) GetRespTime() int64 {
	if x != nil {
		return x.RespTime
	}
	return 0
}

func (x *MSOperationLog) GetRespTimeStr() string {
	if x != nil {
		return x.RespTimeStr
	}
	return ""
}

func (x *MSOperationLog) GetOperationType() string {
	if x != nil {
		return x.OperationType
	}
	return ""
}

func (x *MSOperationLog) GetOperationTitle() string {
	if x != nil {
		return x.OperationTitle
	}
	return ""
}

func (x *MSOperationLog) GetReqPath() string {
	if x != nil {
		return x.ReqPath
	}
	return ""
}

func (x *MSOperationLog) GetReqParams() string {
	if x != nil {
		return x.ReqParams
	}
	return ""
}

func (x *MSOperationLog) GetResultSuccess() bool {
	if x != nil {
		return x.ResultSuccess
	}
	return false
}

func (x *MSOperationLog) GetReqResultMsg() string {
	if x != nil {
		return x.ReqResultMsg
	}
	return ""
}

func (x *MSOperationLog) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

func (x *MSOperationLog) GetReqIp() string {
	if x != nil {
		return x.ReqIp
	}
	return ""
}

func (x *MSOperationLog) GetIpSource() string {
	if x != nil {
		return x.IpSource
	}
	return ""
}

func (x *MSOperationLog) GetReqCost() int64 {
	if x != nil {
		return x.ReqCost
	}
	return 0
}

func (x *MSOperationLog) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

//GetAllMSOperationLogReq 获取所有操作日志列表请求
type GetAllMSOperationLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq        `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Page      *Page             `protobuf:"bytes,2,opt,name=page,proto3" json:"page"`
	Filter    map[string]string `protobuf:"bytes,3,rep,name=filter,proto3" json:"filter" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAllMSOperationLogReq) Reset() {
	*x = GetAllMSOperationLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSOperationLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSOperationLogReq) ProtoMessage() {}

func (x *GetAllMSOperationLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSOperationLogReq.ProtoReflect.Descriptor instead.
func (*GetAllMSOperationLogReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{79}
}

func (x *GetAllMSOperationLogReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetAllMSOperationLogReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetAllMSOperationLogReq) GetFilter() map[string]string {
	if x != nil {
		return x.Filter
	}
	return nil
}

//GetAllMSOperationLogResp 获取所有操作日志列表响应
type GetAllMSOperationLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp    *CommonResp       `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	OperationLogs []*MSOperationLog `protobuf:"bytes,2,rep,name=operationLogs,proto3" json:"operationLogs"`
	Total         int64             `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *GetAllMSOperationLogResp) Reset() {
	*x = GetAllMSOperationLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSOperationLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSOperationLogResp) ProtoMessage() {}

func (x *GetAllMSOperationLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSOperationLogResp.ProtoReflect.Descriptor instead.
func (*GetAllMSOperationLogResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{80}
}

func (x *GetAllMSOperationLogResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllMSOperationLogResp) GetOperationLogs() []*MSOperationLog {
	if x != nil {
		return x.OperationLogs
	}
	return nil
}

func (x *GetAllMSOperationLogResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

//GetMSOperationLogDetailReq 获取操作日志详情请求
type GetMSOperationLogDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Id        string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *GetMSOperationLogDetailReq) Reset() {
	*x = GetMSOperationLogDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSOperationLogDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSOperationLogDetailReq) ProtoMessage() {}

func (x *GetMSOperationLogDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSOperationLogDetailReq.ProtoReflect.Descriptor instead.
func (*GetMSOperationLogDetailReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{81}
}

func (x *GetMSOperationLogDetailReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetMSOperationLogDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//GetMSOperationLogDetailResp 获取操作日志详情响应
type GetMSOperationLogDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *CommonResp     `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	OperationLog *MSOperationLog `protobuf:"bytes,2,opt,name=operationLog,proto3" json:"operationLog"`
}

func (x *GetMSOperationLogDetailResp) Reset() {
	*x = GetMSOperationLogDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSOperationLogDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSOperationLogDetailResp) ProtoMessage() {}

func (x *GetMSOperationLogDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSOperationLogDetailResp.ProtoReflect.Descriptor instead.
func (*GetMSOperationLogDetailResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{82}
}

func (x *GetMSOperationLogDetailResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMSOperationLogDetailResp) GetOperationLog() *MSOperationLog {
	if x != nil {
		return x.OperationLog
	}
	return nil
}

//DeleteMSOperationLogReq 删除操作日志请求
type DeleteMSOperationLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Ids       []string   `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids"`
}

func (x *DeleteMSOperationLogReq) Reset() {
	*x = DeleteMSOperationLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSOperationLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSOperationLogReq) ProtoMessage() {}

func (x *DeleteMSOperationLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSOperationLogReq.ProtoReflect.Descriptor instead.
func (*DeleteMSOperationLogReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{83}
}

func (x *DeleteMSOperationLogReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *DeleteMSOperationLogReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

//DeleteMSOperationLogResp 删除操作日志响应
type DeleteMSOperationLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteMSOperationLogResp) Reset() {
	*x = DeleteMSOperationLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSOperationLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSOperationLogResp) ProtoMessage() {}

func (x *DeleteMSOperationLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSOperationLogResp.ProtoReflect.Descriptor instead.
func (*DeleteMSOperationLogResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{84}
}

func (x *DeleteMSOperationLogResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//MSLoginRecord 后台管理登录记录
type MSLoginRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	UserId     string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId"`
	Time       int64  `protobuf:"varint,3,opt,name=time,proto3" json:"time"`
	TimeStr    string `protobuf:"bytes,4,opt,name=timeStr,proto3" json:"timeStr"`
	Ip         string `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip"`
	IpCountry  string `protobuf:"bytes,6,opt,name=ipCountry,proto3" json:"ipCountry"`
	IpProvince string `protobuf:"bytes,7,opt,name=ipProvince,proto3" json:"ipProvince"`
	IpCity     string `protobuf:"bytes,8,opt,name=ipCity,proto3" json:"ipCity"`
	IpISP      string `protobuf:"bytes,9,opt,name=ipISP,proto3" json:"ipISP"`
	UserAgent  string `protobuf:"bytes,10,opt,name=userAgent,proto3" json:"userAgent"`
}

func (x *MSLoginRecord) Reset() {
	*x = MSLoginRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSLoginRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSLoginRecord) ProtoMessage() {}

func (x *MSLoginRecord) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSLoginRecord.ProtoReflect.Descriptor instead.
func (*MSLoginRecord) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{85}
}

func (x *MSLoginRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MSLoginRecord) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MSLoginRecord) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MSLoginRecord) GetTimeStr() string {
	if x != nil {
		return x.TimeStr
	}
	return ""
}

func (x *MSLoginRecord) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *MSLoginRecord) GetIpCountry() string {
	if x != nil {
		return x.IpCountry
	}
	return ""
}

func (x *MSLoginRecord) GetIpProvince() string {
	if x != nil {
		return x.IpProvince
	}
	return ""
}

func (x *MSLoginRecord) GetIpCity() string {
	if x != nil {
		return x.IpCity
	}
	return ""
}

func (x *MSLoginRecord) GetIpISP() string {
	if x != nil {
		return x.IpISP
	}
	return ""
}

func (x *MSLoginRecord) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

//GetAllMSLoginRecordReq 获取所有登录记录列表请求
type GetAllMSLoginRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq        `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Page      *Page             `protobuf:"bytes,2,opt,name=page,proto3" json:"page"`
	Filter    map[string]string `protobuf:"bytes,3,rep,name=filter,proto3" json:"filter" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAllMSLoginRecordReq) Reset() {
	*x = GetAllMSLoginRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSLoginRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSLoginRecordReq) ProtoMessage() {}

func (x *GetAllMSLoginRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSLoginRecordReq.ProtoReflect.Descriptor instead.
func (*GetAllMSLoginRecordReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{86}
}

func (x *GetAllMSLoginRecordReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetAllMSLoginRecordReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetAllMSLoginRecordReq) GetFilter() map[string]string {
	if x != nil {
		return x.Filter
	}
	return nil
}

//GetAllMSLoginRecordResp 获取所有登录记录列表响应
type GetAllMSLoginRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *CommonResp      `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	LoginRecords []*MSLoginRecord `protobuf:"bytes,2,rep,name=loginRecords,proto3" json:"loginRecords"`
	Total        int64            `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *GetAllMSLoginRecordResp) Reset() {
	*x = GetAllMSLoginRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSLoginRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSLoginRecordResp) ProtoMessage() {}

func (x *GetAllMSLoginRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSLoginRecordResp.ProtoReflect.Descriptor instead.
func (*GetAllMSLoginRecordResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{87}
}

func (x *GetAllMSLoginRecordResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllMSLoginRecordResp) GetLoginRecords() []*MSLoginRecord {
	if x != nil {
		return x.LoginRecords
	}
	return nil
}

func (x *GetAllMSLoginRecordResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

//MSAlbum 相册
type MSAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Cid           string `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid"`
	Aid           string `protobuf:"bytes,3,opt,name=aid,proto3" json:"aid"`
	Type          int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type"`
	Name          string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	Url           string `protobuf:"bytes,6,opt,name=url,proto3" json:"url"`
	Ext           string `protobuf:"bytes,7,opt,name=ext,proto3" json:"ext"`
	Size          int64  `protobuf:"varint,8,opt,name=size,proto3" json:"size"`
	CreateTime    int64  `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime"`
	UpdateTime    int64  `protobuf:"varint,10,opt,name=updateTime,proto3" json:"updateTime"`
	DeleteTime    int64  `protobuf:"varint,11,opt,name=deleteTime,proto3" json:"deleteTime"`
	CreateTimeStr string `protobuf:"bytes,12,opt,name=createTimeStr,proto3" json:"createTimeStr"`
	UpdateTimeStr string `protobuf:"bytes,13,opt,name=updateTimeStr,proto3" json:"updateTimeStr"`
	DeleteTimeStr string `protobuf:"bytes,14,opt,name=deleteTimeStr,proto3" json:"deleteTimeStr"`
}

func (x *MSAlbum) Reset() {
	*x = MSAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSAlbum) ProtoMessage() {}

func (x *MSAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSAlbum.ProtoReflect.Descriptor instead.
func (*MSAlbum) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{88}
}

func (x *MSAlbum) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MSAlbum) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *MSAlbum) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

func (x *MSAlbum) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MSAlbum) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MSAlbum) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MSAlbum) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *MSAlbum) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MSAlbum) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MSAlbum) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *MSAlbum) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *MSAlbum) GetCreateTimeStr() string {
	if x != nil {
		return x.CreateTimeStr
	}
	return ""
}

func (x *MSAlbum) GetUpdateTimeStr() string {
	if x != nil {
		return x.UpdateTimeStr
	}
	return ""
}

func (x *MSAlbum) GetDeleteTimeStr() string {
	if x != nil {
		return x.DeleteTimeStr
	}
	return ""
}

//GetAllMSAlbumReq 获取所有相册列表请求
type GetAllMSAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq        `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Page      *Page             `protobuf:"bytes,2,opt,name=page,proto3" json:"page"`
	Filter    map[string]string `protobuf:"bytes,3,rep,name=filter,proto3" json:"filter" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAllMSAlbumReq) Reset() {
	*x = GetAllMSAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSAlbumReq) ProtoMessage() {}

func (x *GetAllMSAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSAlbumReq.ProtoReflect.Descriptor instead.
func (*GetAllMSAlbumReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{89}
}

func (x *GetAllMSAlbumReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetAllMSAlbumReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetAllMSAlbumReq) GetFilter() map[string]string {
	if x != nil {
		return x.Filter
	}
	return nil
}

//GetAllMSAlbumResp 获取所有相册列表响应
type GetAllMSAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Albums     []*MSAlbum  `protobuf:"bytes,2,rep,name=albums,proto3" json:"albums"`
	Total      int64       `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *GetAllMSAlbumResp) Reset() {
	*x = GetAllMSAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSAlbumResp) ProtoMessage() {}

func (x *GetAllMSAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSAlbumResp.ProtoReflect.Descriptor instead.
func (*GetAllMSAlbumResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{90}
}

func (x *GetAllMSAlbumResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllMSAlbumResp) GetAlbums() []*MSAlbum {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *GetAllMSAlbumResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

//GetMSAlbumDetailReq 获取相册详情请求
type GetMSAlbumDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Id        string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *GetMSAlbumDetailReq) Reset() {
	*x = GetMSAlbumDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMSAlbumDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSAlbumDetailReq) ProtoMessage() {}

func (x *GetMSAlbumDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSAlbumDetailReq.ProtoReflect.Descriptor instead.
func (*GetMSAlbumDetailReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{91}
}

func (x *GetMSAlbumDetailReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetMSAlbumDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//DeleteMSAlbumReq 删除相册请求
type DeleteMSAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Ids       []string   `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids"`
}

func (x *DeleteMSAlbumReq) Reset() {
	*x = DeleteMSAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSAlbumReq) ProtoMessage() {}

func (x *DeleteMSAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSAlbumReq.ProtoReflect.Descriptor instead.
func (*DeleteMSAlbumReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{92}
}

func (x *DeleteMSAlbumReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *DeleteMSAlbumReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

//DeleteMSAlbumResp 删除相册响应
type DeleteMSAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteMSAlbumResp) Reset() {
	*x = DeleteMSAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSAlbumResp) ProtoMessage() {}

func (x *DeleteMSAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSAlbumResp.ProtoReflect.Descriptor instead.
func (*DeleteMSAlbumResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{93}
}

func (x *DeleteMSAlbumResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//AddMSAlbumCateReq 添加相册分类请求
type AddMSAlbumCateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq   `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	AlbumCate *MSAlbumCate `protobuf:"bytes,2,opt,name=albumCate,proto3" json:"albumCate"`
}

func (x *AddMSAlbumCateReq) Reset() {
	*x = AddMSAlbumCateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSAlbumCateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSAlbumCateReq) ProtoMessage() {}

func (x *AddMSAlbumCateReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSAlbumCateReq.ProtoReflect.Descriptor instead.
func (*AddMSAlbumCateReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{94}
}

func (x *AddMSAlbumCateReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *AddMSAlbumCateReq) GetAlbumCate() *MSAlbumCate {
	if x != nil {
		return x.AlbumCate
	}
	return nil
}

//AddMSAlbumCateResp 添加相册分类响应
type AddMSAlbumCateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *AddMSAlbumCateResp) Reset() {
	*x = AddMSAlbumCateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMSAlbumCateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMSAlbumCateResp) ProtoMessage() {}

func (x *AddMSAlbumCateResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMSAlbumCateResp.ProtoReflect.Descriptor instead.
func (*AddMSAlbumCateResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{95}
}

func (x *AddMSAlbumCateResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//UpdateMSAlbumReq 更新相册请求
type UpdateMSAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Album     *MSAlbum   `protobuf:"bytes,2,opt,name=album,proto3" json:"album"`
}

func (x *UpdateMSAlbumReq) Reset() {
	*x = UpdateMSAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSAlbumReq) ProtoMessage() {}

func (x *UpdateMSAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSAlbumReq.ProtoReflect.Descriptor instead.
func (*UpdateMSAlbumReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{96}
}

func (x *UpdateMSAlbumReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UpdateMSAlbumReq) GetAlbum() *MSAlbum {
	if x != nil {
		return x.Album
	}
	return nil
}

//UpdateMSAlbumResp 更新相册响应
type UpdateMSAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateMSAlbumResp) Reset() {
	*x = UpdateMSAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSAlbumResp) ProtoMessage() {}

func (x *UpdateMSAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSAlbumResp.ProtoReflect.Descriptor instead.
func (*UpdateMSAlbumResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{97}
}

func (x *UpdateMSAlbumResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//MSAlbumCate 相册分类
type MSAlbumCate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Pid           string `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid"`
	Type          int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	CreateTime    int64  `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime"`
	UpdateTime    int64  `protobuf:"varint,6,opt,name=updateTime,proto3" json:"updateTime"`
	DeleteTime    int64  `protobuf:"varint,7,opt,name=deleteTime,proto3" json:"deleteTime"`
	CreateTimeStr string `protobuf:"bytes,8,opt,name=createTimeStr,proto3" json:"createTimeStr"`
	UpdateTimeStr string `protobuf:"bytes,9,opt,name=updateTimeStr,proto3" json:"updateTimeStr"`
	DeleteTimeStr string `protobuf:"bytes,10,opt,name=deleteTimeStr,proto3" json:"deleteTimeStr"`
}

func (x *MSAlbumCate) Reset() {
	*x = MSAlbumCate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSAlbumCate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSAlbumCate) ProtoMessage() {}

func (x *MSAlbumCate) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSAlbumCate.ProtoReflect.Descriptor instead.
func (*MSAlbumCate) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{98}
}

func (x *MSAlbumCate) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MSAlbumCate) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *MSAlbumCate) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MSAlbumCate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MSAlbumCate) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MSAlbumCate) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *MSAlbumCate) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *MSAlbumCate) GetCreateTimeStr() string {
	if x != nil {
		return x.CreateTimeStr
	}
	return ""
}

func (x *MSAlbumCate) GetUpdateTimeStr() string {
	if x != nil {
		return x.UpdateTimeStr
	}
	return ""
}

func (x *MSAlbumCate) GetDeleteTimeStr() string {
	if x != nil {
		return x.DeleteTimeStr
	}
	return ""
}

//GetAllMSAlbumCateReq 获取所有相册分类列表请求
type GetAllMSAlbumCateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
}

func (x *GetAllMSAlbumCateReq) Reset() {
	*x = GetAllMSAlbumCateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSAlbumCateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSAlbumCateReq) ProtoMessage() {}

func (x *GetAllMSAlbumCateReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSAlbumCateReq.ProtoReflect.Descriptor instead.
func (*GetAllMSAlbumCateReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{99}
}

func (x *GetAllMSAlbumCateReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

//GetAllMSAlbumCateResp 获取所有相册分类列表响应
type GetAllMSAlbumCateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp    `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	AlbumCates []*MSAlbumCate `protobuf:"bytes,2,rep,name=albumCates,proto3" json:"albumCates"`
}

func (x *GetAllMSAlbumCateResp) Reset() {
	*x = GetAllMSAlbumCateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMSAlbumCateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMSAlbumCateResp) ProtoMessage() {}

func (x *GetAllMSAlbumCateResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMSAlbumCateResp.ProtoReflect.Descriptor instead.
func (*GetAllMSAlbumCateResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{100}
}

func (x *GetAllMSAlbumCateResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllMSAlbumCateResp) GetAlbumCates() []*MSAlbumCate {
	if x != nil {
		return x.AlbumCates
	}
	return nil
}

//DeleteMSAlbumCateReq 删除相册分类请求
type DeleteMSAlbumCateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	Ids       []string   `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids"`
}

func (x *DeleteMSAlbumCateReq) Reset() {
	*x = DeleteMSAlbumCateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSAlbumCateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSAlbumCateReq) ProtoMessage() {}

func (x *DeleteMSAlbumCateReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSAlbumCateReq.ProtoReflect.Descriptor instead.
func (*DeleteMSAlbumCateReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{101}
}

func (x *DeleteMSAlbumCateReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *DeleteMSAlbumCateReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

//DeleteMSAlbumCateResp 删除相册分类响应
type DeleteMSAlbumCateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteMSAlbumCateResp) Reset() {
	*x = DeleteMSAlbumCateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMSAlbumCateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMSAlbumCateResp) ProtoMessage() {}

func (x *DeleteMSAlbumCateResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMSAlbumCateResp.ProtoReflect.Descriptor instead.
func (*DeleteMSAlbumCateResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{102}
}

func (x *DeleteMSAlbumCateResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//UpdateMSAlbumCateReq 更新相册分类请求
type UpdateMSAlbumCateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq   `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	AlbumCate *MSAlbumCate `protobuf:"bytes,2,opt,name=albumCate,proto3" json:"albumCate"`
}

func (x *UpdateMSAlbumCateReq) Reset() {
	*x = UpdateMSAlbumCateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSAlbumCateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSAlbumCateReq) ProtoMessage() {}

func (x *UpdateMSAlbumCateReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSAlbumCateReq.ProtoReflect.Descriptor instead.
func (*UpdateMSAlbumCateReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{103}
}

func (x *UpdateMSAlbumCateReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UpdateMSAlbumCateReq) GetAlbumCate() *MSAlbumCate {
	if x != nil {
		return x.AlbumCate
	}
	return nil
}

//UpdateMSAlbumCateResp 更新相册分类响应
type UpdateMSAlbumCateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateMSAlbumCateResp) Reset() {
	*x = UpdateMSAlbumCateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMSAlbumCateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSAlbumCateResp) ProtoMessage() {}

func (x *UpdateMSAlbumCateResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSAlbumCateResp.ProtoReflect.Descriptor instead.
func (*UpdateMSAlbumCateResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{104}
}

func (x *UpdateMSAlbumCateResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//StatsMSReq 统计请求
type StatsMSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	StartTime string     `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime"`
	EndTime   string     `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime"`
}

func (x *StatsMSReq) Reset() {
	*x = StatsMSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsMSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsMSReq) ProtoMessage() {}

func (x *StatsMSReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsMSReq.ProtoReflect.Descriptor instead.
func (*StatsMSReq) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{105}
}

func (x *StatsMSReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *StatsMSReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *StatsMSReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

//StatsMSResp 统计响应
type StatsMSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Today  *StatsMSResp_Today    `protobuf:"bytes,1,opt,name=today,proto3" json:"today"`
	Dates  []string              `protobuf:"bytes,2,rep,name=dates,proto3" json:"dates"`
	Legend []string              `protobuf:"bytes,3,rep,name=legend,proto3" json:"legend"`
	Series []*StatsMSResp_Series `protobuf:"bytes,4,rep,name=series,proto3" json:"series"`
}

func (x *StatsMSResp) Reset() {
	*x = StatsMSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsMSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsMSResp) ProtoMessage() {}

func (x *StatsMSResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsMSResp.ProtoReflect.Descriptor instead.
func (*StatsMSResp) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{106}
}

func (x *StatsMSResp) GetToday() *StatsMSResp_Today {
	if x != nil {
		return x.Today
	}
	return nil
}

func (x *StatsMSResp) GetDates() []string {
	if x != nil {
		return x.Dates
	}
	return nil
}

func (x *StatsMSResp) GetLegend() []string {
	if x != nil {
		return x.Legend
	}
	return nil
}

func (x *StatsMSResp) GetSeries() []*StatsMSResp_Series {
	if x != nil {
		return x.Series
	}
	return nil
}

type GetServerAllConfigResp_TelemetryConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndPoint string  `protobuf:"bytes,1,opt,name=endPoint,proto3" json:"endPoint"`
	Sampler  float32 `protobuf:"fixed32,2,opt,name=sampler,proto3" json:"sampler"`
	Batcher  string  `protobuf:"bytes,3,opt,name=batcher,proto3" json:"batcher"`
}

func (x *GetServerAllConfigResp_TelemetryConfig) Reset() {
	*x = GetServerAllConfigResp_TelemetryConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_TelemetryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_TelemetryConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_TelemetryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_TelemetryConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_TelemetryConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetServerAllConfigResp_TelemetryConfig) GetEndPoint() string {
	if x != nil {
		return x.EndPoint
	}
	return ""
}

func (x *GetServerAllConfigResp_TelemetryConfig) GetSampler() float32 {
	if x != nil {
		return x.Sampler
	}
	return 0
}

func (x *GetServerAllConfigResp_TelemetryConfig) GetBatcher() string {
	if x != nil {
		return x.Batcher
	}
	return ""
}

type GetServerAllConfigResp_RedisConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	Pass string `protobuf:"bytes,3,opt,name=pass,proto3" json:"pass"`
	Tls  bool   `protobuf:"varint,4,opt,name=tls,proto3" json:"tls"`
}

func (x *GetServerAllConfigResp_RedisConfig) Reset() {
	*x = GetServerAllConfigResp_RedisConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_RedisConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_RedisConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_RedisConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_RedisConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_RedisConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GetServerAllConfigResp_RedisConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetServerAllConfigResp_RedisConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetServerAllConfigResp_RedisConfig) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *GetServerAllConfigResp_RedisConfig) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

type GetServerAllConfigResp_MysqlConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr         string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr"`
	MaxIdleConns int32  `protobuf:"varint,2,opt,name=maxIdleConns,proto3" json:"maxIdleConns"`
	MaxOpenConns int32  `protobuf:"varint,3,opt,name=maxOpenConns,proto3" json:"maxOpenConns"`
	LogLevel     string `protobuf:"bytes,4,opt,name=logLevel,proto3" json:"logLevel"`
}

func (x *GetServerAllConfigResp_MysqlConfig) Reset() {
	*x = GetServerAllConfigResp_MysqlConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_MysqlConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_MysqlConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_MysqlConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_MysqlConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_MysqlConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 2}
}

func (x *GetServerAllConfigResp_MysqlConfig) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *GetServerAllConfigResp_MysqlConfig) GetMaxIdleConns() int32 {
	if x != nil {
		return x.MaxIdleConns
	}
	return 0
}

func (x *GetServerAllConfigResp_MysqlConfig) GetMaxOpenConns() int32 {
	if x != nil {
		return x.MaxOpenConns
	}
	return 0
}

func (x *GetServerAllConfigResp_MysqlConfig) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

type GetServerAllConfigResp_CommonConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host         string                                  `protobuf:"bytes,1,opt,name=host,proto3" json:"host"`
	RpcTimeOut   int64                                   `protobuf:"varint,2,opt,name=rpcTimeOut,proto3" json:"rpcTimeOut"`
	LogLevel     string                                  `protobuf:"bytes,3,opt,name=logLevel,proto3" json:"logLevel"`
	Telemetry    *GetServerAllConfigResp_TelemetryConfig `protobuf:"bytes,4,opt,name=telemetry,proto3" json:"telemetry"`
	Redis        *GetServerAllConfigResp_RedisConfig     `protobuf:"bytes,5,opt,name=redis,proto3" json:"redis"`
	Mysql        *GetServerAllConfigResp_MysqlConfig     `protobuf:"bytes,6,opt,name=mysql,proto3" json:"mysql"`
	Ip2RegionUrl string                                  `protobuf:"bytes,7,opt,name=ip2RegionUrl,proto3" json:"ip2RegionUrl"`
	Mode         string                                  `protobuf:"bytes,8,opt,name=mode,proto3" json:"mode"`
}

func (x *GetServerAllConfigResp_CommonConfig) Reset() {
	*x = GetServerAllConfigResp_CommonConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_CommonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_CommonConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_CommonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_CommonConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_CommonConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 3}
}

func (x *GetServerAllConfigResp_CommonConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetServerAllConfigResp_CommonConfig) GetRpcTimeOut() int64 {
	if x != nil {
		return x.RpcTimeOut
	}
	return 0
}

func (x *GetServerAllConfigResp_CommonConfig) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *GetServerAllConfigResp_CommonConfig) GetTelemetry() *GetServerAllConfigResp_TelemetryConfig {
	if x != nil {
		return x.Telemetry
	}
	return nil
}

func (x *GetServerAllConfigResp_CommonConfig) GetRedis() *GetServerAllConfigResp_RedisConfig {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *GetServerAllConfigResp_CommonConfig) GetMysql() *GetServerAllConfigResp_MysqlConfig {
	if x != nil {
		return x.Mysql
	}
	return nil
}

func (x *GetServerAllConfigResp_CommonConfig) GetIp2RegionUrl() string {
	if x != nil {
		return x.Ip2RegionUrl
	}
	return ""
}

func (x *GetServerAllConfigResp_CommonConfig) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type GetServerAllConfigResp_ConnRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscovType    string   `protobuf:"bytes,1,opt,name=discovType,proto3" json:"discovType"`
	K8SNamespace  string   `protobuf:"bytes,2,opt,name=k8sNamespace,proto3" json:"k8sNamespace"`
	Endpoints     []string `protobuf:"bytes,3,rep,name=endpoints,proto3" json:"endpoints"`
	Port          int64    `protobuf:"varint,4,opt,name=port,proto3" json:"port"`
	WebsocketPort int64    `protobuf:"varint,5,opt,name=websocketPort,proto3" json:"websocketPort"`
	RsaPublicKey  string   `protobuf:"bytes,6,opt,name=rsaPublicKey,proto3" json:"rsaPublicKey"`
	RsaPrivateKey string   `protobuf:"bytes,7,opt,name=rsaPrivateKey,proto3" json:"rsaPrivateKey"`
}

func (x *GetServerAllConfigResp_ConnRpcConfig) Reset() {
	*x = GetServerAllConfigResp_ConnRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_ConnRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_ConnRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_ConnRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_ConnRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_ConnRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 4}
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetDiscovType() string {
	if x != nil {
		return x.DiscovType
	}
	return ""
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetK8SNamespace() string {
	if x != nil {
		return x.K8SNamespace
	}
	return ""
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetWebsocketPort() int64 {
	if x != nil {
		return x.WebsocketPort
	}
	return 0
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetRsaPublicKey() string {
	if x != nil {
		return x.RsaPublicKey
	}
	return ""
}

func (x *GetServerAllConfigResp_ConnRpcConfig) GetRsaPrivateKey() string {
	if x != nil {
		return x.RsaPrivateKey
	}
	return ""
}

type GetServerAllConfigResp_ImRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
}

func (x *GetServerAllConfigResp_ImRpcConfig) Reset() {
	*x = GetServerAllConfigResp_ImRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_ImRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_ImRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_ImRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_ImRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_ImRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 5}
}

func (x *GetServerAllConfigResp_ImRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetServerAllConfigResp_MobPushConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled        bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled"`
	AppKey         string `protobuf:"bytes,2,opt,name=appKey,proto3" json:"appKey"`
	AppSecret      string `protobuf:"bytes,3,opt,name=appSecret,proto3" json:"appSecret"`
	ApnsProduction bool   `protobuf:"varint,4,opt,name=apnsProduction,proto3" json:"apnsProduction"`
	ApnsCateGory   string `protobuf:"bytes,5,opt,name=apnsCateGory,proto3" json:"apnsCateGory"`
	ApnsSound      string `protobuf:"bytes,6,opt,name=apnsSound,proto3" json:"apnsSound"`
	AndroidSound   string `protobuf:"bytes,7,opt,name=androidSound,proto3" json:"androidSound"`
}

func (x *GetServerAllConfigResp_MobPushConfig) Reset() {
	*x = GetServerAllConfigResp_MobPushConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_MobPushConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_MobPushConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_MobPushConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_MobPushConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_MobPushConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 6}
}

func (x *GetServerAllConfigResp_MobPushConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GetServerAllConfigResp_MobPushConfig) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *GetServerAllConfigResp_MobPushConfig) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *GetServerAllConfigResp_MobPushConfig) GetApnsProduction() bool {
	if x != nil {
		return x.ApnsProduction
	}
	return false
}

func (x *GetServerAllConfigResp_MobPushConfig) GetApnsCateGory() string {
	if x != nil {
		return x.ApnsCateGory
	}
	return ""
}

func (x *GetServerAllConfigResp_MobPushConfig) GetApnsSound() string {
	if x != nil {
		return x.ApnsSound
	}
	return ""
}

func (x *GetServerAllConfigResp_MobPushConfig) GetAndroidSound() string {
	if x != nil {
		return x.AndroidSound
	}
	return ""
}

type GetServerAllConfigResp_MsgPulsarConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled           bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled"`
	Token             string `protobuf:"bytes,2,opt,name=token,proto3" json:"token"`
	VpcUrl            string `protobuf:"bytes,3,opt,name=vpcUrl,proto3" json:"vpcUrl"`
	TopicName         string `protobuf:"bytes,4,opt,name=topicName,proto3" json:"topicName"`
	ReceiverQueueSize int64  `protobuf:"varint,5,opt,name=receiverQueueSize,proto3" json:"receiverQueueSize"`
	ProducerTimeout   int64  `protobuf:"varint,6,opt,name=producerTimeout,proto3" json:"producerTimeout"`
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) Reset() {
	*x = GetServerAllConfigResp_MsgPulsarConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_MsgPulsarConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_MsgPulsarConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_MsgPulsarConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_MsgPulsarConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 7}
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetVpcUrl() string {
	if x != nil {
		return x.VpcUrl
	}
	return ""
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetReceiverQueueSize() int64 {
	if x != nil {
		return x.ReceiverQueueSize
	}
	return 0
}

func (x *GetServerAllConfigResp_MsgPulsarConfig) GetProducerTimeout() int64 {
	if x != nil {
		return x.ProducerTimeout
	}
	return 0
}

type GetServerAllConfigResp_MsgRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port         int64                                   `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
	MobPush      *GetServerAllConfigResp_MobPushConfig   `protobuf:"bytes,2,opt,name=mobPush,proto3" json:"mobPush"`
	Pulsar       *GetServerAllConfigResp_MsgPulsarConfig `protobuf:"bytes,3,opt,name=pulsar,proto3" json:"pulsar"`
	DiscovType   string                                  `protobuf:"bytes,4,opt,name=discovType,proto3" json:"discovType"`
	K8SNamespace string                                  `protobuf:"bytes,5,opt,name=k8sNamespace,proto3" json:"k8sNamespace"`
	Endpoints    []string                                `protobuf:"bytes,6,rep,name=endpoints,proto3" json:"endpoints"`
}

func (x *GetServerAllConfigResp_MsgRpcConfig) Reset() {
	*x = GetServerAllConfigResp_MsgRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_MsgRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_MsgRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_MsgRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_MsgRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_MsgRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 8}
}

func (x *GetServerAllConfigResp_MsgRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetServerAllConfigResp_MsgRpcConfig) GetMobPush() *GetServerAllConfigResp_MobPushConfig {
	if x != nil {
		return x.MobPush
	}
	return nil
}

func (x *GetServerAllConfigResp_MsgRpcConfig) GetPulsar() *GetServerAllConfigResp_MsgPulsarConfig {
	if x != nil {
		return x.Pulsar
	}
	return nil
}

func (x *GetServerAllConfigResp_MsgRpcConfig) GetDiscovType() string {
	if x != nil {
		return x.DiscovType
	}
	return ""
}

func (x *GetServerAllConfigResp_MsgRpcConfig) GetK8SNamespace() string {
	if x != nil {
		return x.K8SNamespace
	}
	return ""
}

func (x *GetServerAllConfigResp_MsgRpcConfig) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

type GetServerAllConfigResp_UserRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int64                             `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
	Sms  *GetServerAllConfigResp_SmsConfig `protobuf:"bytes,2,opt,name=sms,proto3" json:"sms"`
}

func (x *GetServerAllConfigResp_UserRpcConfig) Reset() {
	*x = GetServerAllConfigResp_UserRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_UserRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_UserRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_UserRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_UserRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_UserRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 9}
}

func (x *GetServerAllConfigResp_UserRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetServerAllConfigResp_UserRpcConfig) GetSms() *GetServerAllConfigResp_SmsConfig {
	if x != nil {
		return x.Sms
	}
	return nil
}

type GetServerAllConfigResp_SmsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled    bool                                     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled"`
	Type       string                                   `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	TencentSms *GetServerAllConfigResp_TencentSmsConfig `protobuf:"bytes,3,opt,name=tencentSms,proto3" json:"tencentSms"`
}

func (x *GetServerAllConfigResp_SmsConfig) Reset() {
	*x = GetServerAllConfigResp_SmsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_SmsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_SmsConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_SmsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_SmsConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_SmsConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 10}
}

func (x *GetServerAllConfigResp_SmsConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GetServerAllConfigResp_SmsConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetServerAllConfigResp_SmsConfig) GetTencentSms() *GetServerAllConfigResp_TencentSmsConfig {
	if x != nil {
		return x.TencentSms
	}
	return nil
}

type GetServerAllConfigResp_TencentSmsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId"`
	SecretId   string `protobuf:"bytes,2,opt,name=secretId,proto3" json:"secretId"`
	SecretKey  string `protobuf:"bytes,3,opt,name=secretKey,proto3" json:"secretKey"`
	Region     string `protobuf:"bytes,4,opt,name=region,proto3" json:"region"`
	Sign       string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign"`
	TemplateId string `protobuf:"bytes,6,opt,name=templateId,proto3" json:"templateId"`
}

func (x *GetServerAllConfigResp_TencentSmsConfig) Reset() {
	*x = GetServerAllConfigResp_TencentSmsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_TencentSmsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_TencentSmsConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_TencentSmsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_TencentSmsConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_TencentSmsConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 11}
}

func (x *GetServerAllConfigResp_TencentSmsConfig) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetServerAllConfigResp_TencentSmsConfig) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *GetServerAllConfigResp_TencentSmsConfig) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *GetServerAllConfigResp_TencentSmsConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetServerAllConfigResp_TencentSmsConfig) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *GetServerAllConfigResp_TencentSmsConfig) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type GetServerAllConfigResp_RelationRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
}

func (x *GetServerAllConfigResp_RelationRpcConfig) Reset() {
	*x = GetServerAllConfigResp_RelationRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_RelationRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_RelationRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_RelationRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_RelationRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_RelationRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 12}
}

func (x *GetServerAllConfigResp_RelationRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetServerAllConfigResp_GroupRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port                int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
	MaxGroupCount       int64 `protobuf:"varint,2,opt,name=maxGroupCount,proto3" json:"maxGroupCount"`
	MaxGroupMemberCount int64 `protobuf:"varint,3,opt,name=maxGroupMemberCount,proto3" json:"maxGroupMemberCount"`
}

func (x *GetServerAllConfigResp_GroupRpcConfig) Reset() {
	*x = GetServerAllConfigResp_GroupRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_GroupRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_GroupRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_GroupRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_GroupRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_GroupRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 13}
}

func (x *GetServerAllConfigResp_GroupRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetServerAllConfigResp_GroupRpcConfig) GetMaxGroupCount() int64 {
	if x != nil {
		return x.MaxGroupCount
	}
	return 0
}

func (x *GetServerAllConfigResp_GroupRpcConfig) GetMaxGroupMemberCount() int64 {
	if x != nil {
		return x.MaxGroupMemberCount
	}
	return 0
}

type GetServerAllConfigResp_NoticeRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
}

func (x *GetServerAllConfigResp_NoticeRpcConfig) Reset() {
	*x = GetServerAllConfigResp_NoticeRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_NoticeRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_NoticeRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_NoticeRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_NoticeRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_NoticeRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 14}
}

func (x *GetServerAllConfigResp_NoticeRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetServerAllConfigResp_AppMgmtRpcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port"`
}

func (x *GetServerAllConfigResp_AppMgmtRpcConfig) Reset() {
	*x = GetServerAllConfigResp_AppMgmtRpcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_AppMgmtRpcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_AppMgmtRpcConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_AppMgmtRpcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_AppMgmtRpcConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_AppMgmtRpcConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 15}
}

func (x *GetServerAllConfigResp_AppMgmtRpcConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetServerAllConfigResp_MgmtConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcPort        int64  `protobuf:"varint,1,opt,name=rpcPort,proto3" json:"rpcPort"`
	HttpPort       int64  `protobuf:"varint,2,opt,name=httpPort,proto3" json:"httpPort"`
	SuperAdminId   string `protobuf:"bytes,3,opt,name=superAdminId,proto3" json:"superAdminId"`
	SuperAdminPass string `protobuf:"bytes,4,opt,name=superAdminPass,proto3" json:"superAdminPass"`
}

func (x *GetServerAllConfigResp_MgmtConfig) Reset() {
	*x = GetServerAllConfigResp_MgmtConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAllConfigResp_MgmtConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAllConfigResp_MgmtConfig) ProtoMessage() {}

func (x *GetServerAllConfigResp_MgmtConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAllConfigResp_MgmtConfig.ProtoReflect.Descriptor instead.
func (*GetServerAllConfigResp_MgmtConfig) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{3, 16}
}

func (x *GetServerAllConfigResp_MgmtConfig) GetRpcPort() int64 {
	if x != nil {
		return x.RpcPort
	}
	return 0
}

func (x *GetServerAllConfigResp_MgmtConfig) GetHttpPort() int64 {
	if x != nil {
		return x.HttpPort
	}
	return 0
}

func (x *GetServerAllConfigResp_MgmtConfig) GetSuperAdminId() string {
	if x != nil {
		return x.SuperAdminId
	}
	return ""
}

func (x *GetServerAllConfigResp_MgmtConfig) GetSuperAdminPass() string {
	if x != nil {
		return x.SuperAdminPass
	}
	return ""
}

type AppLineConfig_Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string                       `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	ObjectId string                       `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId"`
	Cos      *AppLineConfig_Storage_Cos   `protobuf:"bytes,4,opt,name=cos,proto3" json:"cos"`
	Oss      *AppLineConfig_Storage_Oss   `protobuf:"bytes,5,opt,name=oss,proto3" json:"oss"`
	Minio    *AppLineConfig_Storage_Minio `protobuf:"bytes,6,opt,name=minio,proto3" json:"minio"`
	Kodo     *AppLineConfig_Storage_Kodo  `protobuf:"bytes,7,opt,name=kodo,proto3" json:"kodo"`
}

func (x *AppLineConfig_Storage) Reset() {
	*x = AppLineConfig_Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLineConfig_Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLineConfig_Storage) ProtoMessage() {}

func (x *AppLineConfig_Storage) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLineConfig_Storage.ProtoReflect.Descriptor instead.
func (*AppLineConfig_Storage) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AppLineConfig_Storage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AppLineConfig_Storage) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *AppLineConfig_Storage) GetCos() *AppLineConfig_Storage_Cos {
	if x != nil {
		return x.Cos
	}
	return nil
}

func (x *AppLineConfig_Storage) GetOss() *AppLineConfig_Storage_Oss {
	if x != nil {
		return x.Oss
	}
	return nil
}

func (x *AppLineConfig_Storage) GetMinio() *AppLineConfig_Storage_Minio {
	if x != nil {
		return x.Minio
	}
	return nil
}

func (x *AppLineConfig_Storage) GetKodo() *AppLineConfig_Storage_Kodo {
	if x != nil {
		return x.Kodo
	}
	return nil
}

type AppLineConfig_Storage_Cos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId"`
	SecretId   string `protobuf:"bytes,2,opt,name=secretId,proto3" json:"secretId"`
	SecretKey  string `protobuf:"bytes,3,opt,name=secretKey,proto3" json:"secretKey"`
	BucketName string `protobuf:"bytes,4,opt,name=bucketName,proto3" json:"bucketName"`
	Region     string `protobuf:"bytes,5,opt,name=region,proto3" json:"region"`
	BucketUrl  string `protobuf:"bytes,6,opt,name=bucketUrl,proto3" json:"bucketUrl"`
}

func (x *AppLineConfig_Storage_Cos) Reset() {
	*x = AppLineConfig_Storage_Cos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLineConfig_Storage_Cos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLineConfig_Storage_Cos) ProtoMessage() {}

func (x *AppLineConfig_Storage_Cos) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLineConfig_Storage_Cos.ProtoReflect.Descriptor instead.
func (*AppLineConfig_Storage_Cos) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *AppLineConfig_Storage_Cos) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AppLineConfig_Storage_Cos) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *AppLineConfig_Storage_Cos) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *AppLineConfig_Storage_Cos) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *AppLineConfig_Storage_Cos) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AppLineConfig_Storage_Cos) GetBucketUrl() string {
	if x != nil {
		return x.BucketUrl
	}
	return ""
}

type AppLineConfig_Storage_Oss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint        string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint"`
	AccessKeyId     string `protobuf:"bytes,2,opt,name=accessKeyId,proto3" json:"accessKeyId"`
	AccessKeySecret string `protobuf:"bytes,3,opt,name=accessKeySecret,proto3" json:"accessKeySecret"`
	BucketName      string `protobuf:"bytes,4,opt,name=bucketName,proto3" json:"bucketName"`
	BucketUrl       string `protobuf:"bytes,5,opt,name=bucketUrl,proto3" json:"bucketUrl"`
}

func (x *AppLineConfig_Storage_Oss) Reset() {
	*x = AppLineConfig_Storage_Oss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLineConfig_Storage_Oss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLineConfig_Storage_Oss) ProtoMessage() {}

func (x *AppLineConfig_Storage_Oss) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLineConfig_Storage_Oss.ProtoReflect.Descriptor instead.
func (*AppLineConfig_Storage_Oss) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{6, 0, 1}
}

func (x *AppLineConfig_Storage_Oss) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *AppLineConfig_Storage_Oss) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *AppLineConfig_Storage_Oss) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *AppLineConfig_Storage_Oss) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *AppLineConfig_Storage_Oss) GetBucketUrl() string {
	if x != nil {
		return x.BucketUrl
	}
	return ""
}

type AppLineConfig_Storage_Minio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint        string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint"`
	AccessKeyId     string `protobuf:"bytes,2,opt,name=accessKeyId,proto3" json:"accessKeyId"`
	SecretAccessKey string `protobuf:"bytes,3,opt,name=secretAccessKey,proto3" json:"secretAccessKey"`
	BucketName      string `protobuf:"bytes,4,opt,name=bucketName,proto3" json:"bucketName"`
	Ssl             bool   `protobuf:"varint,5,opt,name=ssl,proto3" json:"ssl"`
	BucketUrl       string `protobuf:"bytes,6,opt,name=bucketUrl,proto3" json:"bucketUrl"`
	Region          string `protobuf:"bytes,7,opt,name=region,proto3" json:"region"`
}

func (x *AppLineConfig_Storage_Minio) Reset() {
	*x = AppLineConfig_Storage_Minio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLineConfig_Storage_Minio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLineConfig_Storage_Minio) ProtoMessage() {}

func (x *AppLineConfig_Storage_Minio) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLineConfig_Storage_Minio.ProtoReflect.Descriptor instead.
func (*AppLineConfig_Storage_Minio) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{6, 0, 2}
}

func (x *AppLineConfig_Storage_Minio) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *AppLineConfig_Storage_Minio) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *AppLineConfig_Storage_Minio) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *AppLineConfig_Storage_Minio) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *AppLineConfig_Storage_Minio) GetSsl() bool {
	if x != nil {
		return x.Ssl
	}
	return false
}

func (x *AppLineConfig_Storage_Minio) GetBucketUrl() string {
	if x != nil {
		return x.BucketUrl
	}
	return ""
}

func (x *AppLineConfig_Storage_Minio) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type AppLineConfig_Storage_Kodo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKey  string `protobuf:"bytes,1,opt,name=accessKey,proto3" json:"accessKey"`
	SecretKey  string `protobuf:"bytes,2,opt,name=secretKey,proto3" json:"secretKey"`
	BucketName string `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName"`
	Region     string `protobuf:"bytes,4,opt,name=region,proto3" json:"region"`
	BucketUrl  string `protobuf:"bytes,5,opt,name=bucketUrl,proto3" json:"bucketUrl"`
	UseHTTPS   bool   `protobuf:"varint,6,opt,name=useHTTPS,proto3" json:"useHTTPS"`
}

func (x *AppLineConfig_Storage_Kodo) Reset() {
	*x = AppLineConfig_Storage_Kodo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLineConfig_Storage_Kodo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLineConfig_Storage_Kodo) ProtoMessage() {}

func (x *AppLineConfig_Storage_Kodo) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLineConfig_Storage_Kodo.ProtoReflect.Descriptor instead.
func (*AppLineConfig_Storage_Kodo) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{6, 0, 3}
}

func (x *AppLineConfig_Storage_Kodo) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *AppLineConfig_Storage_Kodo) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *AppLineConfig_Storage_Kodo) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *AppLineConfig_Storage_Kodo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AppLineConfig_Storage_Kodo) GetBucketUrl() string {
	if x != nil {
		return x.BucketUrl
	}
	return ""
}

func (x *AppLineConfig_Storage_Kodo) GetUseHTTPS() bool {
	if x != nil {
		return x.UseHTTPS
	}
	return false
}

type StatsMSResp_Today struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time             string `protobuf:"bytes,1,opt,name=time,proto3" json:"time"`
	NewUser          int32  `protobuf:"varint,2,opt,name=newUser,proto3" json:"newUser"`
	NewGroup         int32  `protobuf:"varint,4,opt,name=newGroup,proto3" json:"newGroup"`
	TodayMsg         int32  `protobuf:"varint,6,opt,name=todayMsg,proto3" json:"todayMsg"`
	TodayMsgUser     int32  `protobuf:"varint,8,opt,name=todayMsgUser,proto3" json:"todayMsgUser"`
	TodayAliveGroup  int32  `protobuf:"varint,9,opt,name=todayAliveGroup,proto3" json:"todayAliveGroup"`
	TodayAliveSingle int32  `protobuf:"varint,10,opt,name=todayAliveSingle,proto3" json:"todayAliveSingle"`
	TodayAliveUser   int32  `protobuf:"varint,11,opt,name=todayAliveUser,proto3" json:"todayAliveUser"`
	TodayNewFriend   int32  `protobuf:"varint,12,opt,name=todayNewFriend,proto3" json:"todayNewFriend"`
}

func (x *StatsMSResp_Today) Reset() {
	*x = StatsMSResp_Today{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsMSResp_Today) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsMSResp_Today) ProtoMessage() {}

func (x *StatsMSResp_Today) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsMSResp_Today.ProtoReflect.Descriptor instead.
func (*StatsMSResp_Today) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{106, 0}
}

func (x *StatsMSResp_Today) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *StatsMSResp_Today) GetNewUser() int32 {
	if x != nil {
		return x.NewUser
	}
	return 0
}

func (x *StatsMSResp_Today) GetNewGroup() int32 {
	if x != nil {
		return x.NewGroup
	}
	return 0
}

func (x *StatsMSResp_Today) GetTodayMsg() int32 {
	if x != nil {
		return x.TodayMsg
	}
	return 0
}

func (x *StatsMSResp_Today) GetTodayMsgUser() int32 {
	if x != nil {
		return x.TodayMsgUser
	}
	return 0
}

func (x *StatsMSResp_Today) GetTodayAliveGroup() int32 {
	if x != nil {
		return x.TodayAliveGroup
	}
	return 0
}

func (x *StatsMSResp_Today) GetTodayAliveSingle() int32 {
	if x != nil {
		return x.TodayAliveSingle
	}
	return 0
}

func (x *StatsMSResp_Today) GetTodayAliveUser() int32 {
	if x != nil {
		return x.TodayAliveUser
	}
	return 0
}

func (x *StatsMSResp_Today) GetTodayNewFriend() int32 {
	if x != nil {
		return x.TodayNewFriend
	}
	return 0
}

type StatsMSResp_Series struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Data  []int32 `protobuf:"varint,2,rep,packed,name=data,proto3" json:"data"`
	Type  string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	Stack string  `protobuf:"bytes,4,opt,name=stack,proto3" json:"stack"`
}

func (x *StatsMSResp_Series) Reset() {
	*x = StatsMSResp_Series{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsMSResp_Series) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsMSResp_Series) ProtoMessage() {}

func (x *StatsMSResp_Series) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsMSResp_Series.ProtoReflect.Descriptor instead.
func (*StatsMSResp_Series) Descriptor() ([]byte, []int) {
	return file_mgmt_proto_rawDescGZIP(), []int{106, 1}
}

func (x *StatsMSResp_Series) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StatsMSResp_Series) GetData() []int32 {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StatsMSResp_Series) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StatsMSResp_Series) GetStack() string {
	if x != nil {
		return x.Stack
	}
	return ""
}

var File_mgmt_proto protoreflect.FileDescriptor

var file_mgmt_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a,
	0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x44, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x22, 0xaa, 0x19, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x42,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x52, 0x70, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x52,
	0x70, 0x63, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x6d, 0x52, 0x70, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x49, 0x6d,
	0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x69, 0x6d, 0x52, 0x70, 0x63,
	0x12, 0x3f, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x52, 0x70, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x52, 0x70,
	0x63, 0x12, 0x42, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x52, 0x70, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x52, 0x70, 0x63, 0x12, 0x4e, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x70, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x70, 0x63, 0x12, 0x45, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x70,
	0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x70, 0x63, 0x12, 0x48, 0x0a, 0x09,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x70, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x70, 0x63, 0x12, 0x4b, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x4d, 0x67, 0x6d,
	0x74, 0x52, 0x70, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x67, 0x6d, 0x74, 0x52, 0x70,
	0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x4d, 0x67, 0x6d, 0x74,
	0x52, 0x70, 0x63, 0x12, 0x39, 0x0a, 0x04, 0x6d, 0x67, 0x6d, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x67,
	0x6d, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x6d, 0x67, 0x6d, 0x74, 0x1a, 0x61,
	0x0a, 0x0f, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x1a, 0x5b, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x1a, 0x85,
	0x01, 0x0a, 0x0b, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61,
	0x78, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0xdc, 0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x70, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x72, 0x70, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x48, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x12, 0x3c, 0x0a, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x12,
	0x3c, 0x0a, 0x05, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x70, 0x32, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x70, 0x32, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x1a, 0xf5, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x70,
	0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6b, 0x38, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b,
	0x38, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x73, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x73, 0x61, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x73, 0x61, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x73, 0x61, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x1a, 0x21, 0x0a,
	0x0b, 0x49, 0x6d, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x1a, 0xed, 0x01, 0x0a, 0x0d, 0x4d, 0x6f, 0x62, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70,
	0x70, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x70, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x70, 0x6e, 0x73,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70,
	0x6e, 0x73, 0x43, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x70, 0x6e, 0x73, 0x43, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x72, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x70, 0x6e, 0x73, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x70, 0x6e, 0x73, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x1a, 0xcf, 0x01, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x50, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x55, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x70, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x1a, 0x8c, 0x02, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x6d, 0x6f, 0x62, 0x50, 0x75,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x6f, 0x62, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x07, 0x6d, 0x6f, 0x62, 0x50, 0x75, 0x73, 0x68, 0x12, 0x42, 0x0a, 0x06, 0x70,
	0x75, 0x6c, 0x73, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x75, 0x6c, 0x73, 0x61,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x70, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6b, 0x38, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x38, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x1a, 0x5b, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x36, 0x0a, 0x03, 0x73, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x73, 0x6d, 0x73, 0x1a, 0x86,
	0x01, 0x0a, 0x09, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x54, 0x65, 0x6e, 0x63, 0x65,
	0x6e, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x6e, 0x74, 0x53, 0x6d, 0x73, 0x1a, 0xae, 0x01, 0x0a, 0x10, 0x54, 0x65, 0x6e, 0x63,
	0x65, 0x6e, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x1a, 0x27, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x1a, 0x7c, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x6d, 0x61, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x6d, 0x61, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x25, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x26, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x4d, 0x67, 0x6d,
	0x74, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x8e,
	0x01, 0x0a, 0x0a, 0x4d, 0x67, 0x6d, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x22,
	0x78, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x48, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x80, 0x09, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x65, 0x73, 0x49, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x65,
	0x73, 0x49, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x1a, 0xf3, 0x07, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x03,
	0x63, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x73, 0x52, 0x03, 0x63, 0x6f, 0x73, 0x12, 0x2f, 0x0a,
	0x03, 0x6f, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x73, 0x73, 0x52, 0x03, 0x6f, 0x73, 0x73, 0x12, 0x35,
	0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x52, 0x05,
	0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x12, 0x32, 0x0a, 0x04, 0x6b, 0x6f, 0x64, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4b,
	0x6f, 0x64, 0x6f, 0x52, 0x04, 0x6b, 0x6f, 0x64, 0x6f, 0x1a, 0xab, 0x01, 0x0a, 0x03, 0x43, 0x6f,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x1a, 0xab, 0x01, 0x0a, 0x03, 0x4f, 0x73, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x55, 0x72, 0x6c, 0x1a, 0xd7, 0x01, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x73, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x73, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a,
	0xb4, 0x01, 0x0a, 0x04, 0x4b, 0x6f, 0x64, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x48, 0x54, 0x54, 0x50, 0x53, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x48, 0x54, 0x54, 0x50, 0x53, 0x22, 0x42, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x7f, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x61, 0x70,
	0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x7e, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x37, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x61, 0x70,
	0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x49, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x65, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d,
	0x53, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x63, 0x0a,
	0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x6a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d, 0x53, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xfa,
	0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x65, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62,
	0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x4c,
	0x6f, 0x67, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x46, 0x61, 0x76, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x46, 0x61, 0x76, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x42, 0x61, 0x63, 0x6b, 0x64, 0x72,
	0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x42, 0x61, 0x63,
	0x6b, 0x64, 0x72, 0x6f, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x74, 0x72,
	0x52, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0xfc, 0x04, 0x0a, 0x06,
	0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x53, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x53, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x65, 0x6e, 0x75, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6d, 0x65, 0x6e, 0x75, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x61, 0x74, 0x68, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63,
	0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x32, 0x12, 0x26, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x1e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xd8, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d,
	0x53, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a,
	0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4d, 0x53,
	0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x67, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x20, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75,
	0x73, 0x22, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x65, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x4d, 0x65, 0x6e,
	0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x6d,
	0x65, 0x6e, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x22, 0x5b, 0x0a, 0x0c, 0x41,
	0x64, 0x64, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x22, 0x3f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d,
	0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5e, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x04, 0x6d, 0x65, 0x6e,
	0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x22, 0x42, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x50, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71,
	0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x42, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0xa3, 0x02, 0x0a, 0x09, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x6c, 0x6f, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x3e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x70, 0x69,
	0x50, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a,
	0x39, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53,
	0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x08, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x44, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x73, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x50, 0x61,
	0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x08, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x22, 0x54, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61,
	0x74, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x71, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d,
	0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x27, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61,
	0x74, 0x68, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x22, 0x67, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x2b,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x07, 0x61,
	0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x07, 0x61, 0x70, 0x69,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x42, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x41, 0x70, 0x69,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x2b,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x07, 0x61,
	0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x07, 0x61, 0x70, 0x69,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x45, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53,
	0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x53, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x45, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xfd, 0x04, 0x0a, 0x06, 0x4d, 0x53, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x49, 0x64, 0x73, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x49, 0x64, 0x73,
	0x12, 0x34, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x2e, 0x41,
	0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x70,
	0x69, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64,
	0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73,
	0x12, 0x2b, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x4a, 0x0a, 0x0d, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x41,
	0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x44, 0x0a, 0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd8, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x7e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x53, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x65, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x52, 0x6f,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x5b, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3f, 0x0a, 0x0d, 0x41, 0x64, 0x64,
	0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5e, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x42, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x50,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x42, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0xd6, 0x03, 0x0a, 0x06, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12,
	0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xd8, 0x01,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x3b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x39, 0x0a,
	0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x20, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d,
	0x53, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x2b,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x65, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x45, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x53, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5b, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4d, 0x53,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5e, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x50, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x42, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x54, 0x0a, 0x15, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x16, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d,
	0x53, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0xdb, 0x02, 0x0a, 0x0d, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x70, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6e, 0x64, 0x49, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x49,
	0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xde, 0x01,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d,
	0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96,
	0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0c, 0x69, 0x70,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x0c, 0x69, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x58, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x53,
	0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x33, 0x0a, 0x0b, 0x69, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x49, 0x70, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x69, 0x70, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x49, 0x70,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0b, 0x69, 0x70, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x0b, 0x69, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x46,
	0x0a, 0x14, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7a, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a,
	0x0b, 0x69, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x69, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x49, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x49, 0x70,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x57, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x49, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xe4, 0x03, 0x0a, 0x0e, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x73, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x50, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x71, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x71, 0x49, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x65, 0x71, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x70, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xe0, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x3f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9a, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x59, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d,
	0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x22, 0x58, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x4a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xff, 0x01, 0x0a, 0x0d, 0x4d, 0x53, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x70, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x70, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x43, 0x69, 0x74,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x43, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x70, 0x49, 0x53, 0x50, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x70, 0x49, 0x53, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2b,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d,
	0x53, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x35, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xef, 0x02,
	0x0a, 0x07, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x22,
	0xd2, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x38, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x06, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x52, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x43, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x6f, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x2d, 0x0a, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74,
	0x65, 0x22, 0x44, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x62, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x43, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0xa9, 0x02, 0x0a, 0x0b, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x22, 0x43, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x22, 0x78, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x0a, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x47, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x72, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x2d, 0x0a, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x43, 0x61, 0x74, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x22,
	0x47, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x43, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x71, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x4d, 0x53, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xae, 0x04, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x05, 0x74,
	0x6f, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x54, 0x6f, 0x64, 0x61,
	0x79, 0x52, 0x05, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x1a, 0xb7, 0x02, 0x0a, 0x05, 0x54, 0x6f, 0x64, 0x61, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x4d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x4d,
	0x73, 0x67, 0x55, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x4d, 0x73, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x41, 0x6c, 0x69,
	0x76, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x41,
	0x6c, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x1a, 0x5a, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x32, 0x86, 0x1b, 0x0a,
	0x0b, 0x6d, 0x67, 0x6d, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0c,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x39, 0x0a, 0x0f, 0x41, 0x66, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4e, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4c, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x53, 0x12, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a,
	0x08, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d, 0x53, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x08, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4d, 0x53, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4d, 0x53, 0x4d, 0x65,
	0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x53,
	0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x53,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41,
	0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4d,
	0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50,
	0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50,
	0x61, 0x74, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4d,
	0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x41,
	0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53,
	0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x52, 0x6f, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x53,
	0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x53,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x53, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x6c, 0x66, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x53, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x41, 0x64, 0x64,
	0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4b, 0x0a, 0x12, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x53, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x4d, 0x53, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x53,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x49,
	0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4d, 0x53,
	0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x49,
	0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x49,
	0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x53, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x49,
	0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d,
	0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x5a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x53, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d,
	0x53, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x43, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x53,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x4d, 0x53, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4d,
	0x53, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4d,
	0x53, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mgmt_proto_rawDescOnce sync.Once
	file_mgmt_proto_rawDescData = file_mgmt_proto_rawDesc
)

func file_mgmt_proto_rawDescGZIP() []byte {
	file_mgmt_proto_rawDescOnce.Do(func() {
		file_mgmt_proto_rawDescData = protoimpl.X.CompressGZIP(file_mgmt_proto_rawDescData)
	})
	return file_mgmt_proto_rawDescData
}

var file_mgmt_proto_msgTypes = make([]protoimpl.MessageInfo, 141)
var file_mgmt_proto_goTypes = []interface{}{
	(*GetServerConfigReq)(nil),                       // 0: pb.GetServerConfigReq
	(*GetServerConfigResp)(nil),                      // 1: pb.GetServerConfigResp
	(*GetServerAllConfigReq)(nil),                    // 2: pb.GetServerAllConfigReq
	(*GetServerAllConfigResp)(nil),                   // 3: pb.GetServerAllConfigResp
	(*UpdateServerConfigReq)(nil),                    // 4: pb.UpdateServerConfigReq
	(*UpdateServerConfigResp)(nil),                   // 5: pb.UpdateServerConfigResp
	(*AppLineConfig)(nil),                            // 6: pb.AppLineConfig
	(*GetAppLineConfigReq)(nil),                      // 7: pb.GetAppLineConfigReq
	(*GetAppLineConfigResp)(nil),                     // 8: pb.GetAppLineConfigResp
	(*UpdateAppLineConfigReq)(nil),                   // 9: pb.UpdateAppLineConfigReq
	(*UpdateAppLineConfigResp)(nil),                  // 10: pb.UpdateAppLineConfigResp
	(*LoginMSReq)(nil),                               // 11: pb.LoginMSReq
	(*LoginMSResp)(nil),                              // 12: pb.LoginMSResp
	(*HealthMSResp)(nil),                             // 13: pb.HealthMSResp
	(*ConfigMSResp)(nil),                             // 14: pb.ConfigMSResp
	(*MSMenu)(nil),                                   // 15: pb.MSMenu
	(*GetAllMSMenuListReq)(nil),                      // 16: pb.GetAllMSMenuListReq
	(*GetAllMSMenuListResp)(nil),                     // 17: pb.GetAllMSMenuListResp
	(*GetMyMSMenuListReq)(nil),                       // 18: pb.GetMyMSMenuListReq
	(*GetMyMSMenuListResp)(nil),                      // 19: pb.GetMyMSMenuListResp
	(*GetMSMenuDetailReq)(nil),                       // 20: pb.GetMSMenuDetailReq
	(*GetMSMenuDetailResp)(nil),                      // 21: pb.GetMSMenuDetailResp
	(*AddMSMenuReq)(nil),                             // 22: pb.AddMSMenuReq
	(*AddMSMenuResp)(nil),                            // 23: pb.AddMSMenuResp
	(*UpdateMSMenuReq)(nil),                          // 24: pb.UpdateMSMenuReq
	(*UpdateMSMenuResp)(nil),                         // 25: pb.UpdateMSMenuResp
	(*DeleteMSMenuReq)(nil),                          // 26: pb.DeleteMSMenuReq
	(*DeleteMSMenuResp)(nil),                         // 27: pb.DeleteMSMenuResp
	(*MSApiPath)(nil),                                // 28: pb.MSApiPath
	(*GetAllMSApiPathListReq)(nil),                   // 29: pb.GetAllMSApiPathListReq
	(*GetAllMSApiPathListResp)(nil),                  // 30: pb.GetAllMSApiPathListResp
	(*GetMyMSApiPathListReq)(nil),                    // 31: pb.GetMyMSApiPathListReq
	(*GetMyMSApiPathListResp)(nil),                   // 32: pb.GetMyMSApiPathListResp
	(*GetMSApiPathDetailReq)(nil),                    // 33: pb.GetMSApiPathDetailReq
	(*GetMSApiPathDetailResp)(nil),                   // 34: pb.GetMSApiPathDetailResp
	(*AddMSApiPathReq)(nil),                          // 35: pb.AddMSApiPathReq
	(*AddMSApiPathResp)(nil),                         // 36: pb.AddMSApiPathResp
	(*UpdateMSApiPathReq)(nil),                       // 37: pb.UpdateMSApiPathReq
	(*UpdateMSApiPathResp)(nil),                      // 38: pb.UpdateMSApiPathResp
	(*DeleteMSApiPathReq)(nil),                       // 39: pb.DeleteMSApiPathReq
	(*DeleteMSApiPathResp)(nil),                      // 40: pb.DeleteMSApiPathResp
	(*MSRole)(nil),                                   // 41: pb.MSRole
	(*GetAllMSRoleListReq)(nil),                      // 42: pb.GetAllMSRoleListReq
	(*GetAllMSRoleListResp)(nil),                     // 43: pb.GetAllMSRoleListResp
	(*GetMSRoleDetailReq)(nil),                       // 44: pb.GetMSRoleDetailReq
	(*GetMSRoleDetailResp)(nil),                      // 45: pb.GetMSRoleDetailResp
	(*AddMSRoleReq)(nil),                             // 46: pb.AddMSRoleReq
	(*AddMSRoleResp)(nil),                            // 47: pb.AddMSRoleResp
	(*UpdateMSRoleReq)(nil),                          // 48: pb.UpdateMSRoleReq
	(*UpdateMSRoleResp)(nil),                         // 49: pb.UpdateMSRoleResp
	(*DeleteMSRoleReq)(nil),                          // 50: pb.DeleteMSRoleReq
	(*DeleteMSRoleResp)(nil),                         // 51: pb.DeleteMSRoleResp
	(*MSUser)(nil),                                   // 52: pb.MSUser
	(*GetAllMSUserListReq)(nil),                      // 53: pb.GetAllMSUserListReq
	(*GetAllMSUserListResp)(nil),                     // 54: pb.GetAllMSUserListResp
	(*GetMSUserDetailReq)(nil),                       // 55: pb.GetMSUserDetailReq
	(*GetMSUserDetailResp)(nil),                      // 56: pb.GetMSUserDetailResp
	(*GetSelfMSUserDetailReq)(nil),                   // 57: pb.GetSelfMSUserDetailReq
	(*GetSelfMSUserDetailResp)(nil),                  // 58: pb.GetSelfMSUserDetailResp
	(*AddMSUserReq)(nil),                             // 59: pb.AddMSUserReq
	(*AddMSUserResp)(nil),                            // 60: pb.AddMSUserResp
	(*UpdateMSUserReq)(nil),                          // 61: pb.UpdateMSUserReq
	(*UpdateMSUserResp)(nil),                         // 62: pb.UpdateMSUserResp
	(*DeleteMSUserReq)(nil),                          // 63: pb.DeleteMSUserReq
	(*DeleteMSUserResp)(nil),                         // 64: pb.DeleteMSUserResp
	(*SwitchMSUserStatusReq)(nil),                    // 65: pb.SwitchMSUserStatusReq
	(*SwitchMSUserStatusResp)(nil),                   // 66: pb.SwitchMSUserStatusResp
	(*MSIpWhiteList)(nil),                            // 67: pb.MSIpWhiteList
	(*GetAllMSIpWhiteListReq)(nil),                   // 68: pb.GetAllMSIpWhiteListReq
	(*GetAllMSIpWhiteListResp)(nil),                  // 69: pb.GetAllMSIpWhiteListResp
	(*GetMSIpWhiteListDetailReq)(nil),                // 70: pb.GetMSIpWhiteListDetailReq
	(*GetMSIpWhiteListDetailResp)(nil),               // 71: pb.GetMSIpWhiteListDetailResp
	(*AddMSIpWhiteListReq)(nil),                      // 72: pb.AddMSIpWhiteListReq
	(*AddMSIpWhiteListResp)(nil),                     // 73: pb.AddMSIpWhiteListResp
	(*UpdateMSIpWhiteListReq)(nil),                   // 74: pb.UpdateMSIpWhiteListReq
	(*UpdateMSIpWhiteListResp)(nil),                  // 75: pb.UpdateMSIpWhiteListResp
	(*DeleteMSIpWhiteListReq)(nil),                   // 76: pb.DeleteMSIpWhiteListReq
	(*DeleteMSIpWhiteListResp)(nil),                  // 77: pb.DeleteMSIpWhiteListResp
	(*MSOperationLog)(nil),                           // 78: pb.MSOperationLog
	(*GetAllMSOperationLogReq)(nil),                  // 79: pb.GetAllMSOperationLogReq
	(*GetAllMSOperationLogResp)(nil),                 // 80: pb.GetAllMSOperationLogResp
	(*GetMSOperationLogDetailReq)(nil),               // 81: pb.GetMSOperationLogDetailReq
	(*GetMSOperationLogDetailResp)(nil),              // 82: pb.GetMSOperationLogDetailResp
	(*DeleteMSOperationLogReq)(nil),                  // 83: pb.DeleteMSOperationLogReq
	(*DeleteMSOperationLogResp)(nil),                 // 84: pb.DeleteMSOperationLogResp
	(*MSLoginRecord)(nil),                            // 85: pb.MSLoginRecord
	(*GetAllMSLoginRecordReq)(nil),                   // 86: pb.GetAllMSLoginRecordReq
	(*GetAllMSLoginRecordResp)(nil),                  // 87: pb.GetAllMSLoginRecordResp
	(*MSAlbum)(nil),                                  // 88: pb.MSAlbum
	(*GetAllMSAlbumReq)(nil),                         // 89: pb.GetAllMSAlbumReq
	(*GetAllMSAlbumResp)(nil),                        // 90: pb.GetAllMSAlbumResp
	(*GetMSAlbumDetailReq)(nil),                      // 91: pb.GetMSAlbumDetailReq
	(*DeleteMSAlbumReq)(nil),                         // 92: pb.DeleteMSAlbumReq
	(*DeleteMSAlbumResp)(nil),                        // 93: pb.DeleteMSAlbumResp
	(*AddMSAlbumCateReq)(nil),                        // 94: pb.AddMSAlbumCateReq
	(*AddMSAlbumCateResp)(nil),                       // 95: pb.AddMSAlbumCateResp
	(*UpdateMSAlbumReq)(nil),                         // 96: pb.UpdateMSAlbumReq
	(*UpdateMSAlbumResp)(nil),                        // 97: pb.UpdateMSAlbumResp
	(*MSAlbumCate)(nil),                              // 98: pb.MSAlbumCate
	(*GetAllMSAlbumCateReq)(nil),                     // 99: pb.GetAllMSAlbumCateReq
	(*GetAllMSAlbumCateResp)(nil),                    // 100: pb.GetAllMSAlbumCateResp
	(*DeleteMSAlbumCateReq)(nil),                     // 101: pb.DeleteMSAlbumCateReq
	(*DeleteMSAlbumCateResp)(nil),                    // 102: pb.DeleteMSAlbumCateResp
	(*UpdateMSAlbumCateReq)(nil),                     // 103: pb.UpdateMSAlbumCateReq
	(*UpdateMSAlbumCateResp)(nil),                    // 104: pb.UpdateMSAlbumCateResp
	(*StatsMSReq)(nil),                               // 105: pb.StatsMSReq
	(*StatsMSResp)(nil),                              // 106: pb.StatsMSResp
	(*GetServerAllConfigResp_TelemetryConfig)(nil),   // 107: pb.GetServerAllConfigResp.TelemetryConfig
	(*GetServerAllConfigResp_RedisConfig)(nil),       // 108: pb.GetServerAllConfigResp.RedisConfig
	(*GetServerAllConfigResp_MysqlConfig)(nil),       // 109: pb.GetServerAllConfigResp.MysqlConfig
	(*GetServerAllConfigResp_CommonConfig)(nil),      // 110: pb.GetServerAllConfigResp.CommonConfig
	(*GetServerAllConfigResp_ConnRpcConfig)(nil),     // 111: pb.GetServerAllConfigResp.ConnRpcConfig
	(*GetServerAllConfigResp_ImRpcConfig)(nil),       // 112: pb.GetServerAllConfigResp.ImRpcConfig
	(*GetServerAllConfigResp_MobPushConfig)(nil),     // 113: pb.GetServerAllConfigResp.MobPushConfig
	(*GetServerAllConfigResp_MsgPulsarConfig)(nil),   // 114: pb.GetServerAllConfigResp.MsgPulsarConfig
	(*GetServerAllConfigResp_MsgRpcConfig)(nil),      // 115: pb.GetServerAllConfigResp.MsgRpcConfig
	(*GetServerAllConfigResp_UserRpcConfig)(nil),     // 116: pb.GetServerAllConfigResp.UserRpcConfig
	(*GetServerAllConfigResp_SmsConfig)(nil),         // 117: pb.GetServerAllConfigResp.SmsConfig
	(*GetServerAllConfigResp_TencentSmsConfig)(nil),  // 118: pb.GetServerAllConfigResp.TencentSmsConfig
	(*GetServerAllConfigResp_RelationRpcConfig)(nil), // 119: pb.GetServerAllConfigResp.RelationRpcConfig
	(*GetServerAllConfigResp_GroupRpcConfig)(nil),    // 120: pb.GetServerAllConfigResp.GroupRpcConfig
	(*GetServerAllConfigResp_NoticeRpcConfig)(nil),   // 121: pb.GetServerAllConfigResp.NoticeRpcConfig
	(*GetServerAllConfigResp_AppMgmtRpcConfig)(nil),  // 122: pb.GetServerAllConfigResp.AppMgmtRpcConfig
	(*GetServerAllConfigResp_MgmtConfig)(nil),        // 123: pb.GetServerAllConfigResp.MgmtConfig
	(*AppLineConfig_Storage)(nil),                    // 124: pb.AppLineConfig.Storage
	(*AppLineConfig_Storage_Cos)(nil),                // 125: pb.AppLineConfig.Storage.Cos
	(*AppLineConfig_Storage_Oss)(nil),                // 126: pb.AppLineConfig.Storage.Oss
	(*AppLineConfig_Storage_Minio)(nil),              // 127: pb.AppLineConfig.Storage.Minio
	(*AppLineConfig_Storage_Kodo)(nil),               // 128: pb.AppLineConfig.Storage.Kodo
	nil,                                              // 129: pb.GetAllMSMenuListReq.FilterEntry
	nil,                                              // 130: pb.GetAllMSApiPathListReq.FilterEntry
	nil,                                              // 131: pb.MSRole.ApiPathsEntry
	nil,                                              // 132: pb.MSRole.MenusEntry
	nil,                                              // 133: pb.GetAllMSRoleListReq.FilterEntry
	nil,                                              // 134: pb.GetAllMSUserListReq.FilterEntry
	nil,                                              // 135: pb.GetAllMSIpWhiteListReq.FilterEntry
	nil,                                              // 136: pb.GetAllMSOperationLogReq.FilterEntry
	nil,                                              // 137: pb.GetAllMSLoginRecordReq.FilterEntry
	nil,                                              // 138: pb.GetAllMSAlbumReq.FilterEntry
	(*StatsMSResp_Today)(nil),                        // 139: pb.StatsMSResp.Today
	(*StatsMSResp_Series)(nil),                       // 140: pb.StatsMSResp.Series
	(*CommonReq)(nil),                                // 141: pb.CommonReq
	(*CommonResp)(nil),                               // 142: pb.CommonResp
	(*MStr)(nil),                                     // 143: pb.MStr
	(*Page)(nil),                                     // 144: pb.Page
	(*AfterConnectReq)(nil),                          // 145: pb.AfterConnectReq
	(*AfterDisconnectReq)(nil),                       // 146: pb.AfterDisconnectReq
}
var file_mgmt_proto_depIdxs = []int32{
	141, // 0: pb.GetServerConfigReq.commonReq:type_name -> pb.CommonReq
	142, // 1: pb.GetServerConfigResp.commonResp:type_name -> pb.CommonResp
	141, // 2: pb.GetServerAllConfigReq.commonReq:type_name -> pb.CommonReq
	142, // 3: pb.GetServerAllConfigResp.commonResp:type_name -> pb.CommonResp
	110, // 4: pb.GetServerAllConfigResp.common:type_name -> pb.GetServerAllConfigResp.CommonConfig
	111, // 5: pb.GetServerAllConfigResp.connRpc:type_name -> pb.GetServerAllConfigResp.ConnRpcConfig
	112, // 6: pb.GetServerAllConfigResp.imRpc:type_name -> pb.GetServerAllConfigResp.ImRpcConfig
	115, // 7: pb.GetServerAllConfigResp.msgRpc:type_name -> pb.GetServerAllConfigResp.MsgRpcConfig
	116, // 8: pb.GetServerAllConfigResp.userRpc:type_name -> pb.GetServerAllConfigResp.UserRpcConfig
	119, // 9: pb.GetServerAllConfigResp.relationRpc:type_name -> pb.GetServerAllConfigResp.RelationRpcConfig
	120, // 10: pb.GetServerAllConfigResp.groupRpc:type_name -> pb.GetServerAllConfigResp.GroupRpcConfig
	121, // 11: pb.GetServerAllConfigResp.noticeRpc:type_name -> pb.GetServerAllConfigResp.NoticeRpcConfig
	122, // 12: pb.GetServerAllConfigResp.appMgmtRpc:type_name -> pb.GetServerAllConfigResp.AppMgmtRpcConfig
	123, // 13: pb.GetServerAllConfigResp.mgmt:type_name -> pb.GetServerAllConfigResp.MgmtConfig
	141, // 14: pb.UpdateServerConfigReq.commonReq:type_name -> pb.CommonReq
	3,   // 15: pb.UpdateServerConfigReq.config:type_name -> pb.GetServerAllConfigResp
	142, // 16: pb.UpdateServerConfigResp.commonResp:type_name -> pb.CommonResp
	124, // 17: pb.AppLineConfig.storage:type_name -> pb.AppLineConfig.Storage
	141, // 18: pb.GetAppLineConfigReq.commonReq:type_name -> pb.CommonReq
	142, // 19: pb.GetAppLineConfigResp.commonResp:type_name -> pb.CommonResp
	6,   // 20: pb.GetAppLineConfigResp.appLineConfig:type_name -> pb.AppLineConfig
	141, // 21: pb.UpdateAppLineConfigReq.commonReq:type_name -> pb.CommonReq
	6,   // 22: pb.UpdateAppLineConfigReq.appLineConfig:type_name -> pb.AppLineConfig
	142, // 23: pb.UpdateAppLineConfigResp.commonResp:type_name -> pb.CommonResp
	141, // 24: pb.LoginMSReq.commonReq:type_name -> pb.CommonReq
	142, // 25: pb.LoginMSResp.commonResp:type_name -> pb.CommonResp
	142, // 26: pb.HealthMSResp.commonResp:type_name -> pb.CommonResp
	142, // 27: pb.ConfigMSResp.commonResp:type_name -> pb.CommonResp
	143, // 28: pb.ConfigMSResp.copyright:type_name -> pb.MStr
	15,  // 29: pb.MSMenu.children:type_name -> pb.MSMenu
	141, // 30: pb.GetAllMSMenuListReq.commonReq:type_name -> pb.CommonReq
	144, // 31: pb.GetAllMSMenuListReq.page:type_name -> pb.Page
	129, // 32: pb.GetAllMSMenuListReq.filter:type_name -> pb.GetAllMSMenuListReq.FilterEntry
	142, // 33: pb.GetAllMSMenuListResp.commonResp:type_name -> pb.CommonResp
	15,  // 34: pb.GetAllMSMenuListResp.menus:type_name -> pb.MSMenu
	141, // 35: pb.GetMyMSMenuListReq.commonReq:type_name -> pb.CommonReq
	142, // 36: pb.GetMyMSMenuListResp.commonResp:type_name -> pb.CommonResp
	15,  // 37: pb.GetMyMSMenuListResp.menus:type_name -> pb.MSMenu
	141, // 38: pb.GetMSMenuDetailReq.commonReq:type_name -> pb.CommonReq
	142, // 39: pb.GetMSMenuDetailResp.commonResp:type_name -> pb.CommonResp
	15,  // 40: pb.GetMSMenuDetailResp.menu:type_name -> pb.MSMenu
	141, // 41: pb.AddMSMenuReq.commonReq:type_name -> pb.CommonReq
	15,  // 42: pb.AddMSMenuReq.menu:type_name -> pb.MSMenu
	142, // 43: pb.AddMSMenuResp.commonResp:type_name -> pb.CommonResp
	141, // 44: pb.UpdateMSMenuReq.commonReq:type_name -> pb.CommonReq
	15,  // 45: pb.UpdateMSMenuReq.menu:type_name -> pb.MSMenu
	142, // 46: pb.UpdateMSMenuResp.commonResp:type_name -> pb.CommonResp
	141, // 47: pb.DeleteMSMenuReq.commonReq:type_name -> pb.CommonReq
	142, // 48: pb.DeleteMSMenuResp.commonResp:type_name -> pb.CommonResp
	141, // 49: pb.GetAllMSApiPathListReq.commonReq:type_name -> pb.CommonReq
	144, // 50: pb.GetAllMSApiPathListReq.page:type_name -> pb.Page
	130, // 51: pb.GetAllMSApiPathListReq.filter:type_name -> pb.GetAllMSApiPathListReq.FilterEntry
	142, // 52: pb.GetAllMSApiPathListResp.commonResp:type_name -> pb.CommonResp
	28,  // 53: pb.GetAllMSApiPathListResp.apiPaths:type_name -> pb.MSApiPath
	141, // 54: pb.GetMyMSApiPathListReq.commonReq:type_name -> pb.CommonReq
	142, // 55: pb.GetMyMSApiPathListResp.commonResp:type_name -> pb.CommonResp
	28,  // 56: pb.GetMyMSApiPathListResp.apiPaths:type_name -> pb.MSApiPath
	141, // 57: pb.GetMSApiPathDetailReq.commonReq:type_name -> pb.CommonReq
	142, // 58: pb.GetMSApiPathDetailResp.commonResp:type_name -> pb.CommonResp
	28,  // 59: pb.GetMSApiPathDetailResp.apiPath:type_name -> pb.MSApiPath
	141, // 60: pb.AddMSApiPathReq.commonReq:type_name -> pb.CommonReq
	28,  // 61: pb.AddMSApiPathReq.apiPath:type_name -> pb.MSApiPath
	142, // 62: pb.AddMSApiPathResp.commonResp:type_name -> pb.CommonResp
	141, // 63: pb.UpdateMSApiPathReq.commonReq:type_name -> pb.CommonReq
	28,  // 64: pb.UpdateMSApiPathReq.apiPath:type_name -> pb.MSApiPath
	142, // 65: pb.UpdateMSApiPathResp.commonResp:type_name -> pb.CommonResp
	141, // 66: pb.DeleteMSApiPathReq.commonReq:type_name -> pb.CommonReq
	142, // 67: pb.DeleteMSApiPathResp.commonResp:type_name -> pb.CommonResp
	131, // 68: pb.MSRole.apiPaths:type_name -> pb.MSRole.ApiPathsEntry
	132, // 69: pb.MSRole.menus:type_name -> pb.MSRole.MenusEntry
	141, // 70: pb.GetAllMSRoleListReq.commonReq:type_name -> pb.CommonReq
	144, // 71: pb.GetAllMSRoleListReq.page:type_name -> pb.Page
	133, // 72: pb.GetAllMSRoleListReq.filter:type_name -> pb.GetAllMSRoleListReq.FilterEntry
	142, // 73: pb.GetAllMSRoleListResp.commonResp:type_name -> pb.CommonResp
	41,  // 74: pb.GetAllMSRoleListResp.roles:type_name -> pb.MSRole
	141, // 75: pb.GetMSRoleDetailReq.commonReq:type_name -> pb.CommonReq
	142, // 76: pb.GetMSRoleDetailResp.commonResp:type_name -> pb.CommonResp
	41,  // 77: pb.GetMSRoleDetailResp.role:type_name -> pb.MSRole
	141, // 78: pb.AddMSRoleReq.commonReq:type_name -> pb.CommonReq
	41,  // 79: pb.AddMSRoleReq.role:type_name -> pb.MSRole
	142, // 80: pb.AddMSRoleResp.commonResp:type_name -> pb.CommonResp
	141, // 81: pb.UpdateMSRoleReq.commonReq:type_name -> pb.CommonReq
	41,  // 82: pb.UpdateMSRoleReq.role:type_name -> pb.MSRole
	142, // 83: pb.UpdateMSRoleResp.commonResp:type_name -> pb.CommonResp
	141, // 84: pb.DeleteMSRoleReq.commonReq:type_name -> pb.CommonReq
	142, // 85: pb.DeleteMSRoleResp.commonResp:type_name -> pb.CommonResp
	141, // 86: pb.GetAllMSUserListReq.commonReq:type_name -> pb.CommonReq
	144, // 87: pb.GetAllMSUserListReq.page:type_name -> pb.Page
	134, // 88: pb.GetAllMSUserListReq.filter:type_name -> pb.GetAllMSUserListReq.FilterEntry
	142, // 89: pb.GetAllMSUserListResp.commonResp:type_name -> pb.CommonResp
	52,  // 90: pb.GetAllMSUserListResp.users:type_name -> pb.MSUser
	141, // 91: pb.GetMSUserDetailReq.commonReq:type_name -> pb.CommonReq
	142, // 92: pb.GetMSUserDetailResp.commonResp:type_name -> pb.CommonResp
	52,  // 93: pb.GetMSUserDetailResp.user:type_name -> pb.MSUser
	141, // 94: pb.GetSelfMSUserDetailReq.commonReq:type_name -> pb.CommonReq
	142, // 95: pb.GetSelfMSUserDetailResp.commonResp:type_name -> pb.CommonResp
	52,  // 96: pb.GetSelfMSUserDetailResp.user:type_name -> pb.MSUser
	141, // 97: pb.AddMSUserReq.commonReq:type_name -> pb.CommonReq
	52,  // 98: pb.AddMSUserReq.user:type_name -> pb.MSUser
	142, // 99: pb.AddMSUserResp.commonResp:type_name -> pb.CommonResp
	141, // 100: pb.UpdateMSUserReq.commonReq:type_name -> pb.CommonReq
	52,  // 101: pb.UpdateMSUserReq.user:type_name -> pb.MSUser
	142, // 102: pb.UpdateMSUserResp.commonResp:type_name -> pb.CommonResp
	141, // 103: pb.DeleteMSUserReq.commonReq:type_name -> pb.CommonReq
	142, // 104: pb.DeleteMSUserResp.commonResp:type_name -> pb.CommonResp
	141, // 105: pb.SwitchMSUserStatusReq.commonReq:type_name -> pb.CommonReq
	142, // 106: pb.SwitchMSUserStatusResp.commonResp:type_name -> pb.CommonResp
	141, // 107: pb.GetAllMSIpWhiteListReq.commonReq:type_name -> pb.CommonReq
	144, // 108: pb.GetAllMSIpWhiteListReq.page:type_name -> pb.Page
	135, // 109: pb.GetAllMSIpWhiteListReq.filter:type_name -> pb.GetAllMSIpWhiteListReq.FilterEntry
	142, // 110: pb.GetAllMSIpWhiteListResp.commonResp:type_name -> pb.CommonResp
	67,  // 111: pb.GetAllMSIpWhiteListResp.ipWhiteLists:type_name -> pb.MSIpWhiteList
	141, // 112: pb.GetMSIpWhiteListDetailReq.commonReq:type_name -> pb.CommonReq
	142, // 113: pb.GetMSIpWhiteListDetailResp.commonResp:type_name -> pb.CommonResp
	67,  // 114: pb.GetMSIpWhiteListDetailResp.ipWhiteList:type_name -> pb.MSIpWhiteList
	141, // 115: pb.AddMSIpWhiteListReq.commonReq:type_name -> pb.CommonReq
	67,  // 116: pb.AddMSIpWhiteListReq.ipWhiteList:type_name -> pb.MSIpWhiteList
	142, // 117: pb.AddMSIpWhiteListResp.commonResp:type_name -> pb.CommonResp
	141, // 118: pb.UpdateMSIpWhiteListReq.commonReq:type_name -> pb.CommonReq
	67,  // 119: pb.UpdateMSIpWhiteListReq.ipWhiteList:type_name -> pb.MSIpWhiteList
	142, // 120: pb.UpdateMSIpWhiteListResp.commonResp:type_name -> pb.CommonResp
	141, // 121: pb.DeleteMSIpWhiteListReq.commonReq:type_name -> pb.CommonReq
	142, // 122: pb.DeleteMSIpWhiteListResp.commonResp:type_name -> pb.CommonResp
	141, // 123: pb.GetAllMSOperationLogReq.commonReq:type_name -> pb.CommonReq
	144, // 124: pb.GetAllMSOperationLogReq.page:type_name -> pb.Page
	136, // 125: pb.GetAllMSOperationLogReq.filter:type_name -> pb.GetAllMSOperationLogReq.FilterEntry
	142, // 126: pb.GetAllMSOperationLogResp.commonResp:type_name -> pb.CommonResp
	78,  // 127: pb.GetAllMSOperationLogResp.operationLogs:type_name -> pb.MSOperationLog
	141, // 128: pb.GetMSOperationLogDetailReq.commonReq:type_name -> pb.CommonReq
	142, // 129: pb.GetMSOperationLogDetailResp.commonResp:type_name -> pb.CommonResp
	78,  // 130: pb.GetMSOperationLogDetailResp.operationLog:type_name -> pb.MSOperationLog
	141, // 131: pb.DeleteMSOperationLogReq.commonReq:type_name -> pb.CommonReq
	142, // 132: pb.DeleteMSOperationLogResp.commonResp:type_name -> pb.CommonResp
	141, // 133: pb.GetAllMSLoginRecordReq.commonReq:type_name -> pb.CommonReq
	144, // 134: pb.GetAllMSLoginRecordReq.page:type_name -> pb.Page
	137, // 135: pb.GetAllMSLoginRecordReq.filter:type_name -> pb.GetAllMSLoginRecordReq.FilterEntry
	142, // 136: pb.GetAllMSLoginRecordResp.commonResp:type_name -> pb.CommonResp
	85,  // 137: pb.GetAllMSLoginRecordResp.loginRecords:type_name -> pb.MSLoginRecord
	141, // 138: pb.GetAllMSAlbumReq.commonReq:type_name -> pb.CommonReq
	144, // 139: pb.GetAllMSAlbumReq.page:type_name -> pb.Page
	138, // 140: pb.GetAllMSAlbumReq.filter:type_name -> pb.GetAllMSAlbumReq.FilterEntry
	142, // 141: pb.GetAllMSAlbumResp.commonResp:type_name -> pb.CommonResp
	88,  // 142: pb.GetAllMSAlbumResp.albums:type_name -> pb.MSAlbum
	141, // 143: pb.GetMSAlbumDetailReq.commonReq:type_name -> pb.CommonReq
	141, // 144: pb.DeleteMSAlbumReq.commonReq:type_name -> pb.CommonReq
	142, // 145: pb.DeleteMSAlbumResp.commonResp:type_name -> pb.CommonResp
	141, // 146: pb.AddMSAlbumCateReq.commonReq:type_name -> pb.CommonReq
	98,  // 147: pb.AddMSAlbumCateReq.albumCate:type_name -> pb.MSAlbumCate
	142, // 148: pb.AddMSAlbumCateResp.commonResp:type_name -> pb.CommonResp
	141, // 149: pb.UpdateMSAlbumReq.commonReq:type_name -> pb.CommonReq
	88,  // 150: pb.UpdateMSAlbumReq.album:type_name -> pb.MSAlbum
	142, // 151: pb.UpdateMSAlbumResp.commonResp:type_name -> pb.CommonResp
	141, // 152: pb.GetAllMSAlbumCateReq.commonReq:type_name -> pb.CommonReq
	142, // 153: pb.GetAllMSAlbumCateResp.commonResp:type_name -> pb.CommonResp
	98,  // 154: pb.GetAllMSAlbumCateResp.albumCates:type_name -> pb.MSAlbumCate
	141, // 155: pb.DeleteMSAlbumCateReq.commonReq:type_name -> pb.CommonReq
	142, // 156: pb.DeleteMSAlbumCateResp.commonResp:type_name -> pb.CommonResp
	141, // 157: pb.UpdateMSAlbumCateReq.commonReq:type_name -> pb.CommonReq
	98,  // 158: pb.UpdateMSAlbumCateReq.albumCate:type_name -> pb.MSAlbumCate
	142, // 159: pb.UpdateMSAlbumCateResp.commonResp:type_name -> pb.CommonResp
	141, // 160: pb.StatsMSReq.commonReq:type_name -> pb.CommonReq
	139, // 161: pb.StatsMSResp.today:type_name -> pb.StatsMSResp.Today
	140, // 162: pb.StatsMSResp.series:type_name -> pb.StatsMSResp.Series
	107, // 163: pb.GetServerAllConfigResp.CommonConfig.telemetry:type_name -> pb.GetServerAllConfigResp.TelemetryConfig
	108, // 164: pb.GetServerAllConfigResp.CommonConfig.redis:type_name -> pb.GetServerAllConfigResp.RedisConfig
	109, // 165: pb.GetServerAllConfigResp.CommonConfig.mysql:type_name -> pb.GetServerAllConfigResp.MysqlConfig
	113, // 166: pb.GetServerAllConfigResp.MsgRpcConfig.mobPush:type_name -> pb.GetServerAllConfigResp.MobPushConfig
	114, // 167: pb.GetServerAllConfigResp.MsgRpcConfig.pulsar:type_name -> pb.GetServerAllConfigResp.MsgPulsarConfig
	117, // 168: pb.GetServerAllConfigResp.UserRpcConfig.sms:type_name -> pb.GetServerAllConfigResp.SmsConfig
	118, // 169: pb.GetServerAllConfigResp.SmsConfig.tencentSms:type_name -> pb.GetServerAllConfigResp.TencentSmsConfig
	125, // 170: pb.AppLineConfig.Storage.cos:type_name -> pb.AppLineConfig.Storage.Cos
	126, // 171: pb.AppLineConfig.Storage.oss:type_name -> pb.AppLineConfig.Storage.Oss
	127, // 172: pb.AppLineConfig.Storage.minio:type_name -> pb.AppLineConfig.Storage.Minio
	128, // 173: pb.AppLineConfig.Storage.kodo:type_name -> pb.AppLineConfig.Storage.Kodo
	28,  // 174: pb.MSRole.ApiPathsEntry.value:type_name -> pb.MSApiPath
	15,  // 175: pb.MSRole.MenusEntry.value:type_name -> pb.MSMenu
	145, // 176: pb.mgmtService.AfterConnect:input_type -> pb.AfterConnectReq
	146, // 177: pb.mgmtService.AfterDisconnect:input_type -> pb.AfterDisconnectReq
	0,   // 178: pb.mgmtService.GetServerConfig:input_type -> pb.GetServerConfigReq
	2,   // 179: pb.mgmtService.GetServerAllConfig:input_type -> pb.GetServerAllConfigReq
	4,   // 180: pb.mgmtService.UpdateServerConfig:input_type -> pb.UpdateServerConfigReq
	7,   // 181: pb.mgmtService.GetAppLineConfig:input_type -> pb.GetAppLineConfigReq
	9,   // 182: pb.mgmtService.UpdateAppLineConfig:input_type -> pb.UpdateAppLineConfigReq
	11,  // 183: pb.mgmtService.LoginMS:input_type -> pb.LoginMSReq
	141, // 184: pb.mgmtService.HealthMS:input_type -> pb.CommonReq
	141, // 185: pb.mgmtService.ConfigMS:input_type -> pb.CommonReq
	16,  // 186: pb.mgmtService.GetAllMSMenuList:input_type -> pb.GetAllMSMenuListReq
	18,  // 187: pb.mgmtService.GetMyMSMenuList:input_type -> pb.GetMyMSMenuListReq
	20,  // 188: pb.mgmtService.GetMSMenuDetail:input_type -> pb.GetMSMenuDetailReq
	22,  // 189: pb.mgmtService.AddMSMenu:input_type -> pb.AddMSMenuReq
	24,  // 190: pb.mgmtService.UpdateMSMenu:input_type -> pb.UpdateMSMenuReq
	26,  // 191: pb.mgmtService.DeleteMSMenu:input_type -> pb.DeleteMSMenuReq
	29,  // 192: pb.mgmtService.GetAllMSApiPathList:input_type -> pb.GetAllMSApiPathListReq
	31,  // 193: pb.mgmtService.GetMyMSApiPathList:input_type -> pb.GetMyMSApiPathListReq
	33,  // 194: pb.mgmtService.GetMSApiPathDetail:input_type -> pb.GetMSApiPathDetailReq
	35,  // 195: pb.mgmtService.AddMSApiPath:input_type -> pb.AddMSApiPathReq
	37,  // 196: pb.mgmtService.UpdateMSApiPath:input_type -> pb.UpdateMSApiPathReq
	39,  // 197: pb.mgmtService.DeleteMSApiPath:input_type -> pb.DeleteMSApiPathReq
	42,  // 198: pb.mgmtService.GetAllMSRoleList:input_type -> pb.GetAllMSRoleListReq
	44,  // 199: pb.mgmtService.GetMSRoleDetail:input_type -> pb.GetMSRoleDetailReq
	46,  // 200: pb.mgmtService.AddMSRole:input_type -> pb.AddMSRoleReq
	48,  // 201: pb.mgmtService.UpdateMSRole:input_type -> pb.UpdateMSRoleReq
	50,  // 202: pb.mgmtService.DeleteMSRole:input_type -> pb.DeleteMSRoleReq
	53,  // 203: pb.mgmtService.GetAllMSUserList:input_type -> pb.GetAllMSUserListReq
	55,  // 204: pb.mgmtService.GetMSUserDetail:input_type -> pb.GetMSUserDetailReq
	57,  // 205: pb.mgmtService.GetSelfMSUserDetail:input_type -> pb.GetSelfMSUserDetailReq
	59,  // 206: pb.mgmtService.AddMSUser:input_type -> pb.AddMSUserReq
	61,  // 207: pb.mgmtService.UpdateMSUser:input_type -> pb.UpdateMSUserReq
	63,  // 208: pb.mgmtService.DeleteMSUser:input_type -> pb.DeleteMSUserReq
	65,  // 209: pb.mgmtService.SwitchMSUserStatus:input_type -> pb.SwitchMSUserStatusReq
	68,  // 210: pb.mgmtService.GetAllMSIpWhiteList:input_type -> pb.GetAllMSIpWhiteListReq
	70,  // 211: pb.mgmtService.GetMSIpWhiteListDetail:input_type -> pb.GetMSIpWhiteListDetailReq
	72,  // 212: pb.mgmtService.AddMSIpWhiteList:input_type -> pb.AddMSIpWhiteListReq
	74,  // 213: pb.mgmtService.UpdateMSIpWhiteList:input_type -> pb.UpdateMSIpWhiteListReq
	76,  // 214: pb.mgmtService.DeleteMSIpWhiteList:input_type -> pb.DeleteMSIpWhiteListReq
	79,  // 215: pb.mgmtService.GetAllMSOperationLog:input_type -> pb.GetAllMSOperationLogReq
	81,  // 216: pb.mgmtService.GetMSOperationLogDetail:input_type -> pb.GetMSOperationLogDetailReq
	83,  // 217: pb.mgmtService.DeleteMSOperationLog:input_type -> pb.DeleteMSOperationLogReq
	86,  // 218: pb.mgmtService.GetAllMSLoginRecord:input_type -> pb.GetAllMSLoginRecordReq
	99,  // 219: pb.mgmtService.GetAllMSAlbumCate:input_type -> pb.GetAllMSAlbumCateReq
	101, // 220: pb.mgmtService.DeleteMSAlbumCate:input_type -> pb.DeleteMSAlbumCateReq
	94,  // 221: pb.mgmtService.AddMSAlbumCate:input_type -> pb.AddMSAlbumCateReq
	103, // 222: pb.mgmtService.UpdateMSAlbumCate:input_type -> pb.UpdateMSAlbumCateReq
	89,  // 223: pb.mgmtService.GetAllMSAlbum:input_type -> pb.GetAllMSAlbumReq
	92,  // 224: pb.mgmtService.DeleteMSAlbum:input_type -> pb.DeleteMSAlbumReq
	96,  // 225: pb.mgmtService.UpdateMSAlbum:input_type -> pb.UpdateMSAlbumReq
	105, // 226: pb.mgmtService.StatsMS:input_type -> pb.StatsMSReq
	142, // 227: pb.mgmtService.AfterConnect:output_type -> pb.CommonResp
	142, // 228: pb.mgmtService.AfterDisconnect:output_type -> pb.CommonResp
	1,   // 229: pb.mgmtService.GetServerConfig:output_type -> pb.GetServerConfigResp
	3,   // 230: pb.mgmtService.GetServerAllConfig:output_type -> pb.GetServerAllConfigResp
	5,   // 231: pb.mgmtService.UpdateServerConfig:output_type -> pb.UpdateServerConfigResp
	8,   // 232: pb.mgmtService.GetAppLineConfig:output_type -> pb.GetAppLineConfigResp
	10,  // 233: pb.mgmtService.UpdateAppLineConfig:output_type -> pb.UpdateAppLineConfigResp
	12,  // 234: pb.mgmtService.LoginMS:output_type -> pb.LoginMSResp
	13,  // 235: pb.mgmtService.HealthMS:output_type -> pb.HealthMSResp
	14,  // 236: pb.mgmtService.ConfigMS:output_type -> pb.ConfigMSResp
	17,  // 237: pb.mgmtService.GetAllMSMenuList:output_type -> pb.GetAllMSMenuListResp
	19,  // 238: pb.mgmtService.GetMyMSMenuList:output_type -> pb.GetMyMSMenuListResp
	21,  // 239: pb.mgmtService.GetMSMenuDetail:output_type -> pb.GetMSMenuDetailResp
	23,  // 240: pb.mgmtService.AddMSMenu:output_type -> pb.AddMSMenuResp
	25,  // 241: pb.mgmtService.UpdateMSMenu:output_type -> pb.UpdateMSMenuResp
	27,  // 242: pb.mgmtService.DeleteMSMenu:output_type -> pb.DeleteMSMenuResp
	30,  // 243: pb.mgmtService.GetAllMSApiPathList:output_type -> pb.GetAllMSApiPathListResp
	32,  // 244: pb.mgmtService.GetMyMSApiPathList:output_type -> pb.GetMyMSApiPathListResp
	34,  // 245: pb.mgmtService.GetMSApiPathDetail:output_type -> pb.GetMSApiPathDetailResp
	36,  // 246: pb.mgmtService.AddMSApiPath:output_type -> pb.AddMSApiPathResp
	38,  // 247: pb.mgmtService.UpdateMSApiPath:output_type -> pb.UpdateMSApiPathResp
	40,  // 248: pb.mgmtService.DeleteMSApiPath:output_type -> pb.DeleteMSApiPathResp
	43,  // 249: pb.mgmtService.GetAllMSRoleList:output_type -> pb.GetAllMSRoleListResp
	45,  // 250: pb.mgmtService.GetMSRoleDetail:output_type -> pb.GetMSRoleDetailResp
	47,  // 251: pb.mgmtService.AddMSRole:output_type -> pb.AddMSRoleResp
	49,  // 252: pb.mgmtService.UpdateMSRole:output_type -> pb.UpdateMSRoleResp
	51,  // 253: pb.mgmtService.DeleteMSRole:output_type -> pb.DeleteMSRoleResp
	54,  // 254: pb.mgmtService.GetAllMSUserList:output_type -> pb.GetAllMSUserListResp
	56,  // 255: pb.mgmtService.GetMSUserDetail:output_type -> pb.GetMSUserDetailResp
	58,  // 256: pb.mgmtService.GetSelfMSUserDetail:output_type -> pb.GetSelfMSUserDetailResp
	60,  // 257: pb.mgmtService.AddMSUser:output_type -> pb.AddMSUserResp
	62,  // 258: pb.mgmtService.UpdateMSUser:output_type -> pb.UpdateMSUserResp
	64,  // 259: pb.mgmtService.DeleteMSUser:output_type -> pb.DeleteMSUserResp
	66,  // 260: pb.mgmtService.SwitchMSUserStatus:output_type -> pb.SwitchMSUserStatusResp
	69,  // 261: pb.mgmtService.GetAllMSIpWhiteList:output_type -> pb.GetAllMSIpWhiteListResp
	71,  // 262: pb.mgmtService.GetMSIpWhiteListDetail:output_type -> pb.GetMSIpWhiteListDetailResp
	73,  // 263: pb.mgmtService.AddMSIpWhiteList:output_type -> pb.AddMSIpWhiteListResp
	75,  // 264: pb.mgmtService.UpdateMSIpWhiteList:output_type -> pb.UpdateMSIpWhiteListResp
	77,  // 265: pb.mgmtService.DeleteMSIpWhiteList:output_type -> pb.DeleteMSIpWhiteListResp
	80,  // 266: pb.mgmtService.GetAllMSOperationLog:output_type -> pb.GetAllMSOperationLogResp
	82,  // 267: pb.mgmtService.GetMSOperationLogDetail:output_type -> pb.GetMSOperationLogDetailResp
	84,  // 268: pb.mgmtService.DeleteMSOperationLog:output_type -> pb.DeleteMSOperationLogResp
	87,  // 269: pb.mgmtService.GetAllMSLoginRecord:output_type -> pb.GetAllMSLoginRecordResp
	100, // 270: pb.mgmtService.GetAllMSAlbumCate:output_type -> pb.GetAllMSAlbumCateResp
	102, // 271: pb.mgmtService.DeleteMSAlbumCate:output_type -> pb.DeleteMSAlbumCateResp
	95,  // 272: pb.mgmtService.AddMSAlbumCate:output_type -> pb.AddMSAlbumCateResp
	104, // 273: pb.mgmtService.UpdateMSAlbumCate:output_type -> pb.UpdateMSAlbumCateResp
	90,  // 274: pb.mgmtService.GetAllMSAlbum:output_type -> pb.GetAllMSAlbumResp
	93,  // 275: pb.mgmtService.DeleteMSAlbum:output_type -> pb.DeleteMSAlbumResp
	97,  // 276: pb.mgmtService.UpdateMSAlbum:output_type -> pb.UpdateMSAlbumResp
	106, // 277: pb.mgmtService.StatsMS:output_type -> pb.StatsMSResp
	227, // [227:278] is the sub-list for method output_type
	176, // [176:227] is the sub-list for method input_type
	176, // [176:176] is the sub-list for extension type_name
	176, // [176:176] is the sub-list for extension extendee
	0,   // [0:176] is the sub-list for field type_name
}

func init() { file_mgmt_proto_init() }
func file_mgmt_proto_init() {
	if File_mgmt_proto != nil {
		return
	}
	file_common_proto_init()
	file_conn_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mgmt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLineConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppLineConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppLineConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppLineConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppLineConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthMSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigMSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSMenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSMenuListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyMSMenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyMSMenuListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSMenuDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSMenuDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSApiPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSApiPathListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSApiPathListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyMSApiPathListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyMSApiPathListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSApiPathDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSApiPathDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSApiPathReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSApiPathResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSApiPathReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSApiPathResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSApiPathReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSApiPathResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSRoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSRoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSRoleDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSRoleDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSUserDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSUserDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSelfMSUserDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSelfMSUserDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchMSUserStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchMSUserStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSIpWhiteList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSIpWhiteListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSIpWhiteListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSIpWhiteListDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSIpWhiteListDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSIpWhiteListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSIpWhiteListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSIpWhiteListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSIpWhiteListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSIpWhiteListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSIpWhiteListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSOperationLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSOperationLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSOperationLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSOperationLogDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSOperationLogDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSOperationLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSOperationLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSLoginRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSLoginRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSLoginRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMSAlbumDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSAlbumCateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMSAlbumCateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSAlbumCate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSAlbumCateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMSAlbumCateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSAlbumCateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMSAlbumCateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSAlbumCateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMSAlbumCateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsMSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsMSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_TelemetryConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_RedisConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_MysqlConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_CommonConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_ConnRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_ImRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_MobPushConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_MsgPulsarConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_MsgRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_UserRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_SmsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_TencentSmsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_RelationRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_GroupRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_NoticeRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_AppMgmtRpcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAllConfigResp_MgmtConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLineConfig_Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLineConfig_Storage_Cos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLineConfig_Storage_Oss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLineConfig_Storage_Minio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLineConfig_Storage_Kodo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsMSResp_Today); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsMSResp_Series); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mgmt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   141,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mgmt_proto_goTypes,
		DependencyIndexes: file_mgmt_proto_depIdxs,
		MessageInfos:      file_mgmt_proto_msgTypes,
	}.Build()
	File_mgmt_proto = out.File
	file_mgmt_proto_rawDesc = nil
	file_mgmt_proto_goTypes = nil
	file_mgmt_proto_depIdxs = nil
}
