// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: group.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupDisturbOpt int32

const (
	// 接收消息但不提醒
	GroupDisturbOpt_DisturbReceive GroupDisturbOpt = 0
	// 收进群助手且不提醒
	GroupDisturbOpt_DisturbFold GroupDisturbOpt = 1
	// 屏蔽消息
	GroupDisturbOpt_DisturbBlock GroupDisturbOpt = 2
)

// Enum value maps for GroupDisturbOpt.
var (
	GroupDisturbOpt_name = map[int32]string{
		0: "DisturbReceive",
		1: "DisturbFold",
		2: "DisturbBlock",
	}
	GroupDisturbOpt_value = map[string]int32{
		"DisturbReceive": 0,
		"DisturbFold":    1,
		"DisturbBlock":   2,
	}
)

func (x GroupDisturbOpt) Enum() *GroupDisturbOpt {
	p := new(GroupDisturbOpt)
	*p = x
	return p
}

func (x GroupDisturbOpt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupDisturbOpt) Descriptor() protoreflect.EnumDescriptor {
	return file_group_proto_enumTypes[0].Descriptor()
}

func (GroupDisturbOpt) Type() protoreflect.EnumType {
	return &file_group_proto_enumTypes[0]
}

func (x GroupDisturbOpt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupDisturbOpt.Descriptor instead.
func (GroupDisturbOpt) EnumDescriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{0}
}

type GroupRole int32

const (
	// 普通成员
	GroupRole_NORMAL GroupRole = 0
	// 群主
	GroupRole_OWNER GroupRole = 1
	// 管理员
	GroupRole_ADMIN GroupRole = 2
)

// Enum value maps for GroupRole.
var (
	GroupRole_name = map[int32]string{
		0: "NORMAL",
		1: "OWNER",
		2: "ADMIN",
	}
	GroupRole_value = map[string]int32{
		"NORMAL": 0,
		"OWNER":  1,
		"ADMIN":  2,
	}
)

func (x GroupRole) Enum() *GroupRole {
	p := new(GroupRole)
	*p = x
	return p
}

func (x GroupRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupRole) Descriptor() protoreflect.EnumDescriptor {
	return file_group_proto_enumTypes[1].Descriptor()
}

func (GroupRole) Type() protoreflect.EnumType {
	return &file_group_proto_enumTypes[1]
}

func (x GroupRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupRole.Descriptor instead.
func (GroupRole) EnumDescriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{1}
}

// 申请加入群聊的方式
type GroupSetting_JoinGroupOpt_Type int32

const (
	// 需要验证
	GroupSetting_JoinGroupOpt_NEED_VERIFY GroupSetting_JoinGroupOpt_Type = 0
	// 无需验证
	GroupSetting_JoinGroupOpt_DONT_NEED_VERIFY GroupSetting_JoinGroupOpt_Type = 1
	// 需要邀请
	GroupSetting_JoinGroupOpt_NEED_INVITE GroupSetting_JoinGroupOpt_Type = 2
	// 需要正确回答问题并验证
	GroupSetting_JoinGroupOpt_NEED_ANSWER_VERIFY GroupSetting_JoinGroupOpt_Type = 3
	// 需要正确回答问题
	GroupSetting_JoinGroupOpt_NEED_ANSWER GroupSetting_JoinGroupOpt_Type = 4
)

// Enum value maps for GroupSetting_JoinGroupOpt_Type.
var (
	GroupSetting_JoinGroupOpt_Type_name = map[int32]string{
		0: "NEED_VERIFY",
		1: "DONT_NEED_VERIFY",
		2: "NEED_INVITE",
		3: "NEED_ANSWER_VERIFY",
		4: "NEED_ANSWER",
	}
	GroupSetting_JoinGroupOpt_Type_value = map[string]int32{
		"NEED_VERIFY":        0,
		"DONT_NEED_VERIFY":   1,
		"NEED_INVITE":        2,
		"NEED_ANSWER_VERIFY": 3,
		"NEED_ANSWER":        4,
	}
)

func (x GroupSetting_JoinGroupOpt_Type) Enum() *GroupSetting_JoinGroupOpt_Type {
	p := new(GroupSetting_JoinGroupOpt_Type)
	*p = x
	return p
}

func (x GroupSetting_JoinGroupOpt_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupSetting_JoinGroupOpt_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_group_proto_enumTypes[2].Descriptor()
}

func (GroupSetting_JoinGroupOpt_Type) Type() protoreflect.EnumType {
	return &file_group_proto_enumTypes[2]
}

func (x GroupSetting_JoinGroupOpt_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupSetting_JoinGroupOpt_Type.Descriptor instead.
func (GroupSetting_JoinGroupOpt_Type) EnumDescriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{23, 1, 0}
}

type GetMyGroupListReq_Opt int32

const (
	// 默认
	GetMyGroupListReq_DEFAULT GetMyGroupListReq_Opt = 0
	// 只获取id
	GetMyGroupListReq_ONLY_ID GetMyGroupListReq_Opt = 1
)

// Enum value maps for GetMyGroupListReq_Opt.
var (
	GetMyGroupListReq_Opt_name = map[int32]string{
		0: "DEFAULT",
		1: "ONLY_ID",
	}
	GetMyGroupListReq_Opt_value = map[string]int32{
		"DEFAULT": 0,
		"ONLY_ID": 1,
	}
)

func (x GetMyGroupListReq_Opt) Enum() *GetMyGroupListReq_Opt {
	p := new(GetMyGroupListReq_Opt)
	*p = x
	return p
}

func (x GetMyGroupListReq_Opt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetMyGroupListReq_Opt) Descriptor() protoreflect.EnumDescriptor {
	return file_group_proto_enumTypes[3].Descriptor()
}

func (GetMyGroupListReq_Opt) Type() protoreflect.EnumType {
	return &file_group_proto_enumTypes[3]
}

func (x GetMyGroupListReq_Opt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetMyGroupListReq_Opt.Descriptor instead.
func (GetMyGroupListReq_Opt) EnumDescriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{49, 0}
}

//CreateGroupReq 创建群聊
type CreateGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 拉人进群
	Members []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members"`
	// 群名称(可选参数)
	Name *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name"`
	// 群头像(可选参数)
	Avatar *string `protobuf:"bytes,4,opt,name=avatar,proto3,oneof" json:"avatar"`
}

func (x *CreateGroupReq) Reset() {
	*x = CreateGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupReq) ProtoMessage() {}

func (x *CreateGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupReq.ProtoReflect.Descriptor instead.
func (*CreateGroupReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGroupReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *CreateGroupReq) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CreateGroupReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateGroupReq) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

//CreateGroupResp 创建群聊
type CreateGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	// 群ID
	GroupId *string `protobuf:"bytes,2,opt,name=groupId,proto3,oneof" json:"groupId"`
}

func (x *CreateGroupResp) Reset() {
	*x = CreateGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResp) ProtoMessage() {}

func (x *CreateGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResp.ProtoReflect.Descriptor instead.
func (*CreateGroupResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGroupResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *CreateGroupResp) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

//GetGroupHomeReq 获取群聊首页
type GetGroupHomeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId *string `protobuf:"bytes,2,opt,name=groupId,proto3,oneof" json:"groupId"`
}

func (x *GetGroupHomeReq) Reset() {
	*x = GetGroupHomeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupHomeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupHomeReq) ProtoMessage() {}

func (x *GetGroupHomeReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupHomeReq.ProtoReflect.Descriptor instead.
func (*GetGroupHomeReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{2}
}

func (x *GetGroupHomeReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetGroupHomeReq) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

//GetGroupHomeResp 获取群聊首页
type GetGroupHomeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 群名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	// 群头像
	Avatar string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar"`
	// 创建日期
	CreatedAt string `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt"`
	// 成员人数
	MemberCount int32 `protobuf:"varint,6,opt,name=memberCount,proto3" json:"memberCount"`
	// 群介绍
	Introduction     string                               `protobuf:"bytes,7,opt,name=introduction,proto3" json:"introduction"`
	MemberStatistics []*GetGroupHomeResp_MemberStatistics `protobuf:"bytes,21,rep,name=memberStatistics,proto3" json:"memberStatistics"`
}

func (x *GetGroupHomeResp) Reset() {
	*x = GetGroupHomeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupHomeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupHomeResp) ProtoMessage() {}

func (x *GetGroupHomeResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupHomeResp.ProtoReflect.Descriptor instead.
func (*GetGroupHomeResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{3}
}

func (x *GetGroupHomeResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetGroupHomeResp) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupHomeResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetGroupHomeResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetGroupHomeResp) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetGroupHomeResp) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *GetGroupHomeResp) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *GetGroupHomeResp) GetMemberStatistics() []*GetGroupHomeResp_MemberStatistics {
	if x != nil {
		return x.MemberStatistics
	}
	return nil
}

//InviteFriendToGroupReq 邀请好友进群
type InviteFriendToGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 好友ID
	FriendIds []string `protobuf:"bytes,3,rep,name=friendIds,proto3" json:"friendIds"`
	MinSeq    *string  `protobuf:"bytes,4,opt,name=minSeq,proto3,oneof" json:"minSeq"` // 设置所有成员的最小seq
}

func (x *InviteFriendToGroupReq) Reset() {
	*x = InviteFriendToGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteFriendToGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteFriendToGroupReq) ProtoMessage() {}

func (x *InviteFriendToGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteFriendToGroupReq.ProtoReflect.Descriptor instead.
func (*InviteFriendToGroupReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{4}
}

func (x *InviteFriendToGroupReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *InviteFriendToGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *InviteFriendToGroupReq) GetFriendIds() []string {
	if x != nil {
		return x.FriendIds
	}
	return nil
}

func (x *InviteFriendToGroupReq) GetMinSeq() string {
	if x != nil && x.MinSeq != nil {
		return *x.MinSeq
	}
	return ""
}

//InviteFriendToGroupResp 邀请好友进群
type InviteFriendToGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *InviteFriendToGroupResp) Reset() {
	*x = InviteFriendToGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteFriendToGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteFriendToGroupResp) ProtoMessage() {}

func (x *InviteFriendToGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteFriendToGroupResp.ProtoReflect.Descriptor instead.
func (*InviteFriendToGroupResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{5}
}

func (x *InviteFriendToGroupResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//CreateGroupNoticeReq 创建群公告
type CreateGroupNoticeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 公告标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	// 公告内容
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content"`
}

func (x *CreateGroupNoticeReq) Reset() {
	*x = CreateGroupNoticeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupNoticeReq) ProtoMessage() {}

func (x *CreateGroupNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupNoticeReq.ProtoReflect.Descriptor instead.
func (*CreateGroupNoticeReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{6}
}

func (x *CreateGroupNoticeReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *CreateGroupNoticeReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreateGroupNoticeReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateGroupNoticeReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

//CreateGroupNoticeResp 创建群公告
type CreateGroupNoticeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *CreateGroupNoticeResp) Reset() {
	*x = CreateGroupNoticeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupNoticeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupNoticeResp) ProtoMessage() {}

func (x *CreateGroupNoticeResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupNoticeResp.ProtoReflect.Descriptor instead.
func (*CreateGroupNoticeResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{7}
}

func (x *CreateGroupNoticeResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//DeleteGroupNoticeReq 删除群公告
type DeleteGroupNoticeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 公告ID
	NoticeId string `protobuf:"bytes,3,opt,name=noticeId,proto3" json:"noticeId"`
}

func (x *DeleteGroupNoticeReq) Reset() {
	*x = DeleteGroupNoticeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupNoticeReq) ProtoMessage() {}

func (x *DeleteGroupNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupNoticeReq.ProtoReflect.Descriptor instead.
func (*DeleteGroupNoticeReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteGroupNoticeReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *DeleteGroupNoticeReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DeleteGroupNoticeReq) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

//DeleteGroupNoticeResp 删除群公告
type DeleteGroupNoticeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteGroupNoticeResp) Reset() {
	*x = DeleteGroupNoticeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupNoticeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupNoticeResp) ProtoMessage() {}

func (x *DeleteGroupNoticeResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupNoticeResp.ProtoReflect.Descriptor instead.
func (*DeleteGroupNoticeResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteGroupNoticeResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//EditGroupNoticeReq 编辑群公告
type EditGroupNoticeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 公告ID
	NoticeId string `protobuf:"bytes,3,opt,name=noticeId,proto3" json:"noticeId"`
	// 公告标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	// 公告内容
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content"`
}

func (x *EditGroupNoticeReq) Reset() {
	*x = EditGroupNoticeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditGroupNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditGroupNoticeReq) ProtoMessage() {}

func (x *EditGroupNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditGroupNoticeReq.ProtoReflect.Descriptor instead.
func (*EditGroupNoticeReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{10}
}

func (x *EditGroupNoticeReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *EditGroupNoticeReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *EditGroupNoticeReq) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

func (x *EditGroupNoticeReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditGroupNoticeReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

//EditGroupNoticeResp 编辑群公告
type EditGroupNoticeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *EditGroupNoticeResp) Reset() {
	*x = EditGroupNoticeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditGroupNoticeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditGroupNoticeResp) ProtoMessage() {}

func (x *EditGroupNoticeResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditGroupNoticeResp.ProtoReflect.Descriptor instead.
func (*EditGroupNoticeResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{11}
}

func (x *EditGroupNoticeResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//GetGroupNoticeListReq 获取群公告列表
type GetGroupNoticeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 分页参数
	Page *Page `protobuf:"bytes,3,opt,name=page,proto3,oneof" json:"page"`
}

func (x *GetGroupNoticeListReq) Reset() {
	*x = GetGroupNoticeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupNoticeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupNoticeListReq) ProtoMessage() {}

func (x *GetGroupNoticeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupNoticeListReq.ProtoReflect.Descriptor instead.
func (*GetGroupNoticeListReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{12}
}

func (x *GetGroupNoticeListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetGroupNoticeListReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupNoticeListReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type GroupNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 公告ID
	NoticeId string `protobuf:"bytes,1,opt,name=noticeId,proto3" json:"noticeId"`
	// 公告标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	// 公告内容
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content"`
	// 创建日期
	CreatedAt string `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt"`
}

func (x *GroupNotice) Reset() {
	*x = GroupNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupNotice) ProtoMessage() {}

func (x *GroupNotice) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupNotice.ProtoReflect.Descriptor instead.
func (*GroupNotice) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{13}
}

func (x *GroupNotice) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

func (x *GroupNotice) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GroupNotice) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GroupNotice) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

//GetGroupNoticeListResp 获取群公告列表
type GetGroupNoticeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	// 公告列表
	GroupNotices []*GroupNotice `protobuf:"bytes,2,rep,name=groupNotices,proto3" json:"groupNotices"`
}

func (x *GetGroupNoticeListResp) Reset() {
	*x = GetGroupNoticeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupNoticeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupNoticeListResp) ProtoMessage() {}

func (x *GetGroupNoticeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupNoticeListResp.ProtoReflect.Descriptor instead.
func (*GetGroupNoticeListResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{14}
}

func (x *GetGroupNoticeListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetGroupNoticeListResp) GetGroupNotices() []*GroupNotice {
	if x != nil {
		return x.GroupNotices
	}
	return nil
}

//SetGroupMemberInfoReq 设置群成员信息
type SetGroupMemberInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 群成员ID
	MemberId string `protobuf:"bytes,3,opt,name=memberId,proto3" json:"memberId"`
	// 群内显示的昵称
	Nickname *string `protobuf:"bytes,4,opt,name=nickname,proto3,oneof" json:"nickname"`
	// 群聊的备注
	Remark *string `protobuf:"bytes,5,opt,name=remark,proto3,oneof" json:"remark"`
	// 置顶选项
	Top *bool `protobuf:"varint,6,opt,name=top,proto3,oneof" json:"top"`
	// 免打扰选项
	Disturb *bool `protobuf:"varint,11,opt,name=disturb,proto3,oneof" json:"disturb"`
	// 免打扰选项更多设置
	DisturbMore GroupDisturbOpt `protobuf:"varint,12,opt,name=disturbMore,proto3,enum=pb.GroupDisturbOpt" json:"disturbMore"`
	// 聊天背景图
	ChatBg *string `protobuf:"bytes,13,opt,name=chatBg,proto3,oneof" json:"chatBg"`
}

func (x *SetGroupMemberInfoReq) Reset() {
	*x = SetGroupMemberInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMemberInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMemberInfoReq) ProtoMessage() {}

func (x *SetGroupMemberInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMemberInfoReq.ProtoReflect.Descriptor instead.
func (*SetGroupMemberInfoReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{15}
}

func (x *SetGroupMemberInfoReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *SetGroupMemberInfoReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetTop() bool {
	if x != nil && x.Top != nil {
		return *x.Top
	}
	return false
}

func (x *SetGroupMemberInfoReq) GetDisturb() bool {
	if x != nil && x.Disturb != nil {
		return *x.Disturb
	}
	return false
}

func (x *SetGroupMemberInfoReq) GetDisturbMore() GroupDisturbOpt {
	if x != nil {
		return x.DisturbMore
	}
	return GroupDisturbOpt_DisturbReceive
}

func (x *SetGroupMemberInfoReq) GetChatBg() string {
	if x != nil && x.ChatBg != nil {
		return *x.ChatBg
	}
	return ""
}

//SetGroupMemberInfoResp 设置群成员信息
type SetGroupMemberInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *SetGroupMemberInfoResp) Reset() {
	*x = SetGroupMemberInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMemberInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMemberInfoResp) ProtoMessage() {}

func (x *SetGroupMemberInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMemberInfoResp.ProtoReflect.Descriptor instead.
func (*SetGroupMemberInfoResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{16}
}

func (x *SetGroupMemberInfoResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//GetGroupMemberInfoReq 获取群成员信息
type GetGroupMemberInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 群成员ID
	MemberId string `protobuf:"bytes,3,opt,name=memberId,proto3" json:"memberId"`
}

func (x *GetGroupMemberInfoReq) Reset() {
	*x = GetGroupMemberInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberInfoReq) ProtoMessage() {}

func (x *GetGroupMemberInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberInfoReq.ProtoReflect.Descriptor instead.
func (*GetGroupMemberInfoReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{17}
}

func (x *GetGroupMemberInfoReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetGroupMemberInfoReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMemberInfoReq) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type GroupMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群id
	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId"`
	// 群成员id
	MemberId string `protobuf:"bytes,2,opt,name=memberId,proto3" json:"memberId"`
	// 群内显示的昵称
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname"`
	// 群聊的备注
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark"`
	// 置顶选项
	Top bool `protobuf:"varint,5,opt,name=top,proto3" json:"top"`
	// 免打扰选项
	Disturb bool `protobuf:"varint,6,opt,name=disturb,proto3" json:"disturb"`
	// 免打扰选项更多设置
	DisturbMore GroupDisturbOpt `protobuf:"varint,7,opt,name=disturbMore,proto3,enum=pb.GroupDisturbOpt" json:"disturbMore"`
	// 聊天背景图
	ChatBg string `protobuf:"bytes,8,opt,name=chatBg,proto3" json:"chatBg"`
}

func (x *GroupMemberInfo) Reset() {
	*x = GroupMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMemberInfo) ProtoMessage() {}

func (x *GroupMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMemberInfo.ProtoReflect.Descriptor instead.
func (*GroupMemberInfo) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{18}
}

func (x *GroupMemberInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupMemberInfo) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *GroupMemberInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GroupMemberInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *GroupMemberInfo) GetTop() bool {
	if x != nil {
		return x.Top
	}
	return false
}

func (x *GroupMemberInfo) GetDisturb() bool {
	if x != nil {
		return x.Disturb
	}
	return false
}

func (x *GroupMemberInfo) GetDisturbMore() GroupDisturbOpt {
	if x != nil {
		return x.DisturbMore
	}
	return GroupDisturbOpt_DisturbReceive
}

func (x *GroupMemberInfo) GetChatBg() string {
	if x != nil {
		return x.ChatBg
	}
	return ""
}

//GetGroupMemberInfoResp 获取群成员信息
type GetGroupMemberInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	// 群成员信息
	GroupMemberInfo *GroupMemberInfo `protobuf:"bytes,2,opt,name=groupMemberInfo,proto3" json:"groupMemberInfo"`
}

func (x *GetGroupMemberInfoResp) Reset() {
	*x = GetGroupMemberInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberInfoResp) ProtoMessage() {}

func (x *GetGroupMemberInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberInfoResp.ProtoReflect.Descriptor instead.
func (*GetGroupMemberInfoResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{19}
}

func (x *GetGroupMemberInfoResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetGroupMemberInfoResp) GetGroupMemberInfo() *GroupMemberInfo {
	if x != nil {
		return x.GroupMemberInfo
	}
	return nil
}

//EditGroupInfoReq 编辑群资料
type EditGroupInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 群名称
	Name *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name"`
	// 群头像
	Avatar *string `protobuf:"bytes,4,opt,name=avatar,proto3,oneof" json:"avatar"`
	// 群介绍
	Introduction *string `protobuf:"bytes,5,opt,name=introduction,proto3,oneof" json:"introduction"`
}

func (x *EditGroupInfoReq) Reset() {
	*x = EditGroupInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditGroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditGroupInfoReq) ProtoMessage() {}

func (x *EditGroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditGroupInfoReq.ProtoReflect.Descriptor instead.
func (*EditGroupInfoReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{20}
}

func (x *EditGroupInfoReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *EditGroupInfoReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *EditGroupInfoReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *EditGroupInfoReq) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *EditGroupInfoReq) GetIntroduction() string {
	if x != nil && x.Introduction != nil {
		return *x.Introduction
	}
	return ""
}

//EditGroupInfoResp 编辑群资料
type EditGroupInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *EditGroupInfoResp) Reset() {
	*x = EditGroupInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditGroupInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditGroupInfoResp) ProtoMessage() {}

func (x *EditGroupInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditGroupInfoResp.ProtoReflect.Descriptor instead.
func (*EditGroupInfoResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{21}
}

func (x *EditGroupInfoResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//SetGroupSettingReq 设置群设置
type SetGroupSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 群设置
	GroupSetting *GroupSetting `protobuf:"bytes,3,opt,name=groupSetting,proto3" json:"groupSetting"`
}

func (x *SetGroupSettingReq) Reset() {
	*x = SetGroupSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupSettingReq) ProtoMessage() {}

func (x *SetGroupSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupSettingReq.ProtoReflect.Descriptor instead.
func (*SetGroupSettingReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{22}
}

func (x *SetGroupSettingReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *SetGroupSettingReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SetGroupSettingReq) GetGroupSetting() *GroupSetting {
	if x != nil {
		return x.GroupSetting
	}
	return nil
}

type GroupSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发言频率限制
	SpeakLimit *int32 `protobuf:"varint,1,opt,name=speakLimit,proto3,oneof" json:"speakLimit"`
	// 新成员可见的历史消息条数
	HistoryMsgCount *int32 `protobuf:"varint,3,opt,name=historyMsgCount,proto3,oneof" json:"historyMsgCount"`
	// 是否开启匿名聊天
	AnonymousChat bool `protobuf:"varint,4,opt,name=anonymousChat,proto3" json:"anonymousChat"`
	// 申请加入群聊的方式
	JoinGroupOpt *GroupSetting_JoinGroupOpt `protobuf:"bytes,5,opt,name=joinGroupOpt,proto3" json:"joinGroupOpt"`
}

func (x *GroupSetting) Reset() {
	*x = GroupSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetting) ProtoMessage() {}

func (x *GroupSetting) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetting.ProtoReflect.Descriptor instead.
func (*GroupSetting) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{23}
}

func (x *GroupSetting) GetSpeakLimit() int32 {
	if x != nil && x.SpeakLimit != nil {
		return *x.SpeakLimit
	}
	return 0
}

func (x *GroupSetting) GetHistoryMsgCount() int32 {
	if x != nil && x.HistoryMsgCount != nil {
		return *x.HistoryMsgCount
	}
	return 0
}

func (x *GroupSetting) GetAnonymousChat() bool {
	if x != nil {
		return x.AnonymousChat
	}
	return false
}

func (x *GroupSetting) GetJoinGroupOpt() *GroupSetting_JoinGroupOpt {
	if x != nil {
		return x.JoinGroupOpt
	}
	return nil
}

//SetGroupSettingResp 设置群设置
type SetGroupSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *SetGroupSettingResp) Reset() {
	*x = SetGroupSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupSettingResp) ProtoMessage() {}

func (x *SetGroupSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupSettingResp.ProtoReflect.Descriptor instead.
func (*SetGroupSettingResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{24}
}

func (x *SetGroupSettingResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//GetGroupSettingReq 获取群设置
type GetGroupSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
}

func (x *GetGroupSettingReq) Reset() {
	*x = GetGroupSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupSettingReq) ProtoMessage() {}

func (x *GetGroupSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupSettingReq.ProtoReflect.Descriptor instead.
func (*GetGroupSettingReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{25}
}

func (x *GetGroupSettingReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetGroupSettingReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

//GetGroupSettingResp 获取群设置
type GetGroupSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	// 群设置
	GroupSetting *GroupSetting `protobuf:"bytes,2,opt,name=groupSetting,proto3" json:"groupSetting"`
}

func (x *GetGroupSettingResp) Reset() {
	*x = GetGroupSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupSettingResp) ProtoMessage() {}

func (x *GetGroupSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupSettingResp.ProtoReflect.Descriptor instead.
func (*GetGroupSettingResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{26}
}

func (x *GetGroupSettingResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetGroupSettingResp) GetGroupSetting() *GroupSetting {
	if x != nil {
		return x.GroupSetting
	}
	return nil
}

//TransferGroupOwnerReq 转让群主
type TransferGroupOwnerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 新群主ID
	NewOwner string `protobuf:"bytes,3,opt,name=newOwner,proto3" json:"newOwner"`
}

func (x *TransferGroupOwnerReq) Reset() {
	*x = TransferGroupOwnerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferGroupOwnerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferGroupOwnerReq) ProtoMessage() {}

func (x *TransferGroupOwnerReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferGroupOwnerReq.ProtoReflect.Descriptor instead.
func (*TransferGroupOwnerReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{27}
}

func (x *TransferGroupOwnerReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *TransferGroupOwnerReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *TransferGroupOwnerReq) GetNewOwner() string {
	if x != nil {
		return x.NewOwner
	}
	return ""
}

//TransferGroupOwnerResp 转让群主
type TransferGroupOwnerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *TransferGroupOwnerResp) Reset() {
	*x = TransferGroupOwnerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferGroupOwnerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferGroupOwnerResp) ProtoMessage() {}

func (x *TransferGroupOwnerResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferGroupOwnerResp.ProtoReflect.Descriptor instead.
func (*TransferGroupOwnerResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{28}
}

func (x *TransferGroupOwnerResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//SetGroupMemberRoleReq 设置群成员角色
type SetGroupMemberRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 群成员ID
	MemberId string `protobuf:"bytes,3,opt,name=memberId,proto3" json:"memberId"`
	// 角色
	Role GroupRole `protobuf:"varint,4,opt,name=role,proto3,enum=pb.GroupRole" json:"role"`
}

func (x *SetGroupMemberRoleReq) Reset() {
	*x = SetGroupMemberRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMemberRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMemberRoleReq) ProtoMessage() {}

func (x *SetGroupMemberRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMemberRoleReq.ProtoReflect.Descriptor instead.
func (*SetGroupMemberRoleReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{29}
}

func (x *SetGroupMemberRoleReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *SetGroupMemberRoleReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SetGroupMemberRoleReq) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *SetGroupMemberRoleReq) GetRole() GroupRole {
	if x != nil {
		return x.Role
	}
	return GroupRole_NORMAL
}

//SetGroupMemberRoleResp 设置群成员角色
type SetGroupMemberRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *SetGroupMemberRoleResp) Reset() {
	*x = SetGroupMemberRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMemberRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMemberRoleResp) ProtoMessage() {}

func (x *SetGroupMemberRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMemberRoleResp.ProtoReflect.Descriptor instead.
func (*SetGroupMemberRoleResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{30}
}

func (x *SetGroupMemberRoleResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//KickGroupMemberReq 踢出群成员
type KickGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 群成员ID
	MemberId string `protobuf:"bytes,3,opt,name=memberId,proto3" json:"memberId"`
}

func (x *KickGroupMemberReq) Reset() {
	*x = KickGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickGroupMemberReq) ProtoMessage() {}

func (x *KickGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickGroupMemberReq.ProtoReflect.Descriptor instead.
func (*KickGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{31}
}

func (x *KickGroupMemberReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *KickGroupMemberReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *KickGroupMemberReq) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

//KickGroupMemberResp 踢出群成员
type KickGroupMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *KickGroupMemberResp) Reset() {
	*x = KickGroupMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickGroupMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickGroupMemberResp) ProtoMessage() {}

func (x *KickGroupMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickGroupMemberResp.ProtoReflect.Descriptor instead.
func (*KickGroupMemberResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{32}
}

func (x *KickGroupMemberResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//QuitGroupReq 退出群聊
type QuitGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
}

func (x *QuitGroupReq) Reset() {
	*x = QuitGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitGroupReq) ProtoMessage() {}

func (x *QuitGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitGroupReq.ProtoReflect.Descriptor instead.
func (*QuitGroupReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{33}
}

func (x *QuitGroupReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *QuitGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

//QuitGroupResp 退出群聊
type QuitGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *QuitGroupResp) Reset() {
	*x = QuitGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitGroupResp) ProtoMessage() {}

func (x *QuitGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitGroupResp.ProtoReflect.Descriptor instead.
func (*QuitGroupResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{34}
}

func (x *QuitGroupResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//禁言群成员
type BanGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 群成员ID
	MemberId string `protobuf:"bytes,3,opt,name=memberId,proto3" json:"memberId"`
	// 禁言时长
	Duration int32 `protobuf:"varint,4,opt,name=duration,proto3" json:"duration"`
}

func (x *BanGroupMemberReq) Reset() {
	*x = BanGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanGroupMemberReq) ProtoMessage() {}

func (x *BanGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanGroupMemberReq.ProtoReflect.Descriptor instead.
func (*BanGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{35}
}

func (x *BanGroupMemberReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *BanGroupMemberReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *BanGroupMemberReq) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *BanGroupMemberReq) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

//禁言群成员
type BanGroupMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *BanGroupMemberResp) Reset() {
	*x = BanGroupMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanGroupMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanGroupMemberResp) ProtoMessage() {}

func (x *BanGroupMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanGroupMemberResp.ProtoReflect.Descriptor instead.
func (*BanGroupMemberResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{36}
}

func (x *BanGroupMemberResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//禁言全部群成员
type BanAllGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 禁言时长
	Duration int32 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration"`
}

func (x *BanAllGroupMemberReq) Reset() {
	*x = BanAllGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanAllGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanAllGroupMemberReq) ProtoMessage() {}

func (x *BanAllGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanAllGroupMemberReq.ProtoReflect.Descriptor instead.
func (*BanAllGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{37}
}

func (x *BanAllGroupMemberReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *BanAllGroupMemberReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *BanAllGroupMemberReq) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

//禁言全部群成员
type BanAllGroupMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *BanAllGroupMemberResp) Reset() {
	*x = BanAllGroupMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanAllGroupMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanAllGroupMemberResp) ProtoMessage() {}

func (x *BanAllGroupMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanAllGroupMemberResp.ProtoReflect.Descriptor instead.
func (*BanAllGroupMemberResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{38}
}

func (x *BanAllGroupMemberResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//解除禁言群成员
type UnbanGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 群成员ID
	MemberId string `protobuf:"bytes,3,opt,name=memberId,proto3" json:"memberId"`
}

func (x *UnbanGroupMemberReq) Reset() {
	*x = UnbanGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanGroupMemberReq) ProtoMessage() {}

func (x *UnbanGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanGroupMemberReq.ProtoReflect.Descriptor instead.
func (*UnbanGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{39}
}

func (x *UnbanGroupMemberReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UnbanGroupMemberReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UnbanGroupMemberReq) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

//解除禁言群成员
type UnbanGroupMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UnbanGroupMemberResp) Reset() {
	*x = UnbanGroupMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanGroupMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanGroupMemberResp) ProtoMessage() {}

func (x *UnbanGroupMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanGroupMemberResp.ProtoReflect.Descriptor instead.
func (*UnbanGroupMemberResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{40}
}

func (x *UnbanGroupMemberResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//解除禁言全部群成员
type UnbanAllGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
}

func (x *UnbanAllGroupMemberReq) Reset() {
	*x = UnbanAllGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanAllGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanAllGroupMemberReq) ProtoMessage() {}

func (x *UnbanAllGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanAllGroupMemberReq.ProtoReflect.Descriptor instead.
func (*UnbanAllGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{41}
}

func (x *UnbanAllGroupMemberReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UnbanAllGroupMemberReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

//解除禁言全部群成员
type UnbanAllGroupMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UnbanAllGroupMemberResp) Reset() {
	*x = UnbanAllGroupMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanAllGroupMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanAllGroupMemberResp) ProtoMessage() {}

func (x *UnbanAllGroupMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanAllGroupMemberResp.ProtoReflect.Descriptor instead.
func (*UnbanAllGroupMemberResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{42}
}

func (x *UnbanAllGroupMemberResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//GetGroupMemberListReq 获取群成员列表
type GetGroupMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 分页
	Page *Page `protobuf:"bytes,3,opt,name=page,proto3" json:"page"`
}

func (x *GetGroupMemberListReq) Reset() {
	*x = GetGroupMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListReq) ProtoMessage() {}

func (x *GetGroupMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListReq.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{43}
}

func (x *GetGroupMemberListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetGroupMemberListReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMemberListReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

//GetGroupMemberListResp 获取群成员列表
type GetGroupMemberListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	// 群成员列表
	GroupMemberList []*GetGroupMemberListResp_GroupMember `protobuf:"bytes,2,rep,name=groupMemberList,proto3" json:"groupMemberList"`
}

func (x *GetGroupMemberListResp) Reset() {
	*x = GetGroupMemberListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListResp) ProtoMessage() {}

func (x *GetGroupMemberListResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListResp.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{44}
}

func (x *GetGroupMemberListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetGroupMemberListResp) GetGroupMemberList() []*GetGroupMemberListResp_GroupMember {
	if x != nil {
		return x.GroupMemberList
	}
	return nil
}

//DismissGroupReq 解散群聊
type DismissGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
}

func (x *DismissGroupReq) Reset() {
	*x = DismissGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DismissGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DismissGroupReq) ProtoMessage() {}

func (x *DismissGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DismissGroupReq.ProtoReflect.Descriptor instead.
func (*DismissGroupReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{45}
}

func (x *DismissGroupReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *DismissGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

//DismissGroupResp 解散群聊
type DismissGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DismissGroupResp) Reset() {
	*x = DismissGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DismissGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DismissGroupResp) ProtoMessage() {}

func (x *DismissGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DismissGroupResp.ProtoReflect.Descriptor instead.
func (*DismissGroupResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{46}
}

func (x *DismissGroupResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//SetGroupMsgNotifyOptReq 设置群消息通知选项
type SetGroupMsgNotifyTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 群ID
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId"`
	// 消息通知类型
	Opt *MsgNotifyOpt `protobuf:"bytes,3,opt,name=opt,proto3" json:"opt"`
}

func (x *SetGroupMsgNotifyTypeReq) Reset() {
	*x = SetGroupMsgNotifyTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMsgNotifyTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMsgNotifyTypeReq) ProtoMessage() {}

func (x *SetGroupMsgNotifyTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMsgNotifyTypeReq.ProtoReflect.Descriptor instead.
func (*SetGroupMsgNotifyTypeReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{47}
}

func (x *SetGroupMsgNotifyTypeReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *SetGroupMsgNotifyTypeReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SetGroupMsgNotifyTypeReq) GetOpt() *MsgNotifyOpt {
	if x != nil {
		return x.Opt
	}
	return nil
}

//SetGroupMsgNotifyOptResp 设置群消息通知选项
type SetGroupMsgNotifyTypeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *SetGroupMsgNotifyTypeResp) Reset() {
	*x = SetGroupMsgNotifyTypeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMsgNotifyTypeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMsgNotifyTypeResp) ProtoMessage() {}

func (x *SetGroupMsgNotifyTypeResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMsgNotifyTypeResp.ProtoReflect.Descriptor instead.
func (*SetGroupMsgNotifyTypeResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{48}
}

func (x *SetGroupMsgNotifyTypeResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//GetMyGroupListReq 获取我的群聊列表
type GetMyGroupListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	// 分页
	Page   *Page                     `protobuf:"bytes,2,opt,name=page,proto3" json:"page"`
	Filter *GetMyGroupListReq_Filter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter"`
	// 获取选项
	Opt GetMyGroupListReq_Opt `protobuf:"varint,10,opt,name=opt,proto3,enum=pb.GetMyGroupListReq_Opt" json:"opt"`
}

func (x *GetMyGroupListReq) Reset() {
	*x = GetMyGroupListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyGroupListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyGroupListReq) ProtoMessage() {}

func (x *GetMyGroupListReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyGroupListReq.ProtoReflect.Descriptor instead.
func (*GetMyGroupListReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{49}
}

func (x *GetMyGroupListReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetMyGroupListReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetMyGroupListReq) GetFilter() *GetMyGroupListReq_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetMyGroupListReq) GetOpt() GetMyGroupListReq_Opt {
	if x != nil {
		return x.Opt
	}
	return GetMyGroupListReq_DEFAULT
}

//GetMyGroupListResp 获取我的群聊列表
type GetMyGroupListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	// 群聊列表
	GroupMap map[string]*GetMyGroupListResp_Group `protobuf:"bytes,2,rep,name=groupMap,proto3" json:"groupMap" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// ids
	Ids []string `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids"`
}

func (x *GetMyGroupListResp) Reset() {
	*x = GetMyGroupListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyGroupListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyGroupListResp) ProtoMessage() {}

func (x *GetMyGroupListResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyGroupListResp.ProtoReflect.Descriptor instead.
func (*GetMyGroupListResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{50}
}

func (x *GetMyGroupListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMyGroupListResp) GetGroupMap() map[string]*GetMyGroupListResp_Group {
	if x != nil {
		return x.GroupMap
	}
	return nil
}

func (x *GetMyGroupListResp) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 成员统计
type GetGroupHomeResp_MemberStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 统计标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	// 人数
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	// 占百分比
	Percentage int32 `protobuf:"varint,3,opt,name=percentage,proto3" json:"percentage"`
}

func (x *GetGroupHomeResp_MemberStatistics) Reset() {
	*x = GetGroupHomeResp_MemberStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupHomeResp_MemberStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupHomeResp_MemberStatistics) ProtoMessage() {}

func (x *GetGroupHomeResp_MemberStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupHomeResp_MemberStatistics.ProtoReflect.Descriptor instead.
func (*GetGroupHomeResp_MemberStatistics) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetGroupHomeResp_MemberStatistics) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetGroupHomeResp_MemberStatistics) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetGroupHomeResp_MemberStatistics) GetPercentage() int32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

// 成员权限选项
type GroupSetting_MemberPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群成员是否可以发起临时会话
	CanStartTempChat bool `protobuf:"varint,1,opt,name=canStartTempChat,proto3" json:"canStartTempChat"`
	// 群成员是否可以邀请好友进群
	CanInviteFriend       bool   `protobuf:"varint,2,opt,name=canInviteFriend,proto3" json:"canInviteFriend"`
	InviteFriendHowVerify *int32 `protobuf:"varint,3,opt,name=inviteFriendHowVerify,proto3,oneof" json:"inviteFriendHowVerify"` // 0:不需要验证 1:需要验证
}

func (x *GroupSetting_MemberPermission) Reset() {
	*x = GroupSetting_MemberPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetting_MemberPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetting_MemberPermission) ProtoMessage() {}

func (x *GroupSetting_MemberPermission) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetting_MemberPermission.ProtoReflect.Descriptor instead.
func (*GroupSetting_MemberPermission) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{23, 0}
}

func (x *GroupSetting_MemberPermission) GetCanStartTempChat() bool {
	if x != nil {
		return x.CanStartTempChat
	}
	return false
}

func (x *GroupSetting_MemberPermission) GetCanInviteFriend() bool {
	if x != nil {
		return x.CanInviteFriend
	}
	return false
}

func (x *GroupSetting_MemberPermission) GetInviteFriendHowVerify() int32 {
	if x != nil && x.InviteFriendHowVerify != nil {
		return *x.InviteFriendHowVerify
	}
	return 0
}

// 申请加入群聊的方式
type GroupSetting_JoinGroupOpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 申请加入群聊的方式
	Type GroupSetting_JoinGroupOpt_Type `protobuf:"varint,1,opt,name=type,proto3,enum=pb.GroupSetting_JoinGroupOpt_Type" json:"type"`
	// 验证信息
	Question string `protobuf:"bytes,3,opt,name=question,proto3" json:"question"`
	Answer   string `protobuf:"bytes,4,opt,name=answer,proto3" json:"answer"`
}

func (x *GroupSetting_JoinGroupOpt) Reset() {
	*x = GroupSetting_JoinGroupOpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetting_JoinGroupOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetting_JoinGroupOpt) ProtoMessage() {}

func (x *GroupSetting_JoinGroupOpt) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetting_JoinGroupOpt.ProtoReflect.Descriptor instead.
func (*GroupSetting_JoinGroupOpt) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{23, 1}
}

func (x *GroupSetting_JoinGroupOpt) GetType() GroupSetting_JoinGroupOpt_Type {
	if x != nil {
		return x.Type
	}
	return GroupSetting_JoinGroupOpt_NEED_VERIFY
}

func (x *GroupSetting_JoinGroupOpt) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *GroupSetting_JoinGroupOpt) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type GetGroupMemberListResp_GroupMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGroupMemberListResp_GroupMember) Reset() {
	*x = GetGroupMemberListResp_GroupMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListResp_GroupMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListResp_GroupMember) ProtoMessage() {}

func (x *GetGroupMemberListResp_GroupMember) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListResp_GroupMember.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListResp_GroupMember) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{44, 0}
}

// 过滤
type GetMyGroupListReq_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 消息接收类型
	// 是否过滤掉群助手
	FilterFold bool `protobuf:"varint,1,opt,name=filterFold,proto3" json:"filterFold"`
	// 是否过滤已屏蔽的群
	FilterShield bool `protobuf:"varint,2,opt,name=filterShield,proto3" json:"filterShield"`
}

func (x *GetMyGroupListReq_Filter) Reset() {
	*x = GetMyGroupListReq_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyGroupListReq_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyGroupListReq_Filter) ProtoMessage() {}

func (x *GetMyGroupListReq_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyGroupListReq_Filter.ProtoReflect.Descriptor instead.
func (*GetMyGroupListReq_Filter) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{49, 0}
}

func (x *GetMyGroupListReq_Filter) GetFilterFold() bool {
	if x != nil {
		return x.FilterFold
	}
	return false
}

func (x *GetMyGroupListReq_Filter) GetFilterShield() bool {
	if x != nil {
		return x.FilterShield
	}
	return false
}

type GetMyGroupListResp_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMyGroupListResp_Group) Reset() {
	*x = GetMyGroupListResp_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyGroupListResp_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyGroupListResp_Group) ProtoMessage() {}

func (x *GetMyGroupListResp_Group) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyGroupListResp_Group.ProtoReflect.Descriptor instead.
func (*GetMyGroupListResp_Group) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{50, 0}
}

var File_group_proto protoreflect.FileDescriptor

var file_group_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x08, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x6c, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1d, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2b,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x9f, 0x03, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0x5e, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x53,
	0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x53,
	0x65, 0x71, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71,
	0x22, 0x49, 0x0a, 0x17, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8d, 0x01, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x79, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x47, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa7, 0x01, 0x0a, 0x12, 0x45, 0x64, 0x69,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x45, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8a, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x7d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0c, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73, 0x22, 0xf9,
	0x02, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x74, 0x6f, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x03, 0x52, 0x07, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x88, 0x01, 0x01, 0x12,
	0x35, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44,
	0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x4f, 0x70, 0x74, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x75,
	0x72, 0x62, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x42, 0x67,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x42, 0x67,
	0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x74, 0x6f, 0x70, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x42, 0x67, 0x22, 0x48, 0x0a, 0x16, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x7a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xf6, 0x01, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x6f, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x12, 0x35, 0x0a, 0x0b, 0x64, 0x69,
	0x73, 0x74, 0x75, 0x72, 0x62, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72,
	0x62, 0x4f, 0x70, 0x74, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x4d, 0x6f, 0x72,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x42, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x42, 0x67, 0x22, 0x87, 0x01, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xdd, 0x01, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x11, 0x45, 0x64, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x91, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0c,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x94, 0x05, 0x0a,
	0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a,
	0x0a, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0f, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x43, 0x68,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x43, 0x68, 0x61, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4f, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x70, 0x74, 0x52, 0x0c, 0x6a, 0x6f,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x70, 0x74, 0x1a, 0xbd, 0x01, 0x0a, 0x10, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x43,
	0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x68, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63,
	0x61, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x39, 0x0a, 0x15, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x48, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x48, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x88, 0x01, 0x01,
	0x42, 0x18, 0x0a, 0x16, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x48, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x1a, 0xe3, 0x01, 0x0a, 0x0c, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x70, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x70, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0f, 0x0a, 0x0b, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x44, 0x4f, 0x4e, 0x54, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x59, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x49,
	0x4e, 0x56, 0x49, 0x54, 0x45, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x45, 0x45, 0x44, 0x5f,
	0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x10, 0x04,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5b, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34,
	0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0x7a, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x22, 0x48, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x9d, 0x01, 0x0a, 0x15, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x77, 0x0a, 0x12, 0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45, 0x0a,
	0x13, 0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x55, 0x0a, 0x0c, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x0d, 0x51,
	0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x92, 0x01, 0x0a,
	0x11, 0x42, 0x61, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x44, 0x0a, 0x12, 0x42, 0x61, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x79, 0x0a, 0x14, 0x42, 0x61, 0x6e, 0x41, 0x6c,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x15, 0x42, 0x61, 0x6e, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x78, 0x0a, 0x13, 0x55,
	0x6e, 0x62, 0x61, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x14, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5f, 0x0a,
	0x16, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x49,
	0x0a, 0x17, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7c, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x0d, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x42, 0x0a,
	0x10, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x85, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73,
	0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2b,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x4f, 0x70, 0x74, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x22, 0x4b, 0x0a, 0x19, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb0, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a,
	0x03, 0x6f, 0x70, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x2e, 0x4f, 0x70, 0x74, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x1a, 0x4c, 0x0a, 0x06, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x6f,
	0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x46, 0x6f, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x68,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x1f, 0x0a, 0x03, 0x4f, 0x70, 0x74, 0x12,
	0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x22, 0xfc, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x40, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x61, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x1a, 0x07, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x59, 0x0a,
	0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x48, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x4f, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x44,
	0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x46, 0x6f, 0x6c, 0x64, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x10, 0x02, 0x2a, 0x2d, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4f,
	0x57, 0x4e, 0x45, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10,
	0x02, 0x32, 0x91, 0x0d, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48,
	0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x13, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x6f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x12,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x12, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0f, 0x4b, 0x69,
	0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x09, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x42, 0x61, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x42, 0x61, 0x6e, 0x41, 0x6c,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x61, 0x6e, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x41,
	0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x10, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x62,
	0x61, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x13,
	0x55, 0x6e, 0x62, 0x61, 0x6e, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x41, 0x6c,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x0c, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x15, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_group_proto_rawDescOnce sync.Once
	file_group_proto_rawDescData = file_group_proto_rawDesc
)

func file_group_proto_rawDescGZIP() []byte {
	file_group_proto_rawDescOnce.Do(func() {
		file_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_group_proto_rawDescData)
	})
	return file_group_proto_rawDescData
}

var file_group_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_group_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_group_proto_goTypes = []interface{}{
	(GroupDisturbOpt)(0),                       // 0: pb.GroupDisturbOpt
	(GroupRole)(0),                             // 1: pb.GroupRole
	(GroupSetting_JoinGroupOpt_Type)(0),        // 2: pb.GroupSetting.JoinGroupOpt.Type
	(GetMyGroupListReq_Opt)(0),                 // 3: pb.GetMyGroupListReq.Opt
	(*CreateGroupReq)(nil),                     // 4: pb.CreateGroupReq
	(*CreateGroupResp)(nil),                    // 5: pb.CreateGroupResp
	(*GetGroupHomeReq)(nil),                    // 6: pb.GetGroupHomeReq
	(*GetGroupHomeResp)(nil),                   // 7: pb.GetGroupHomeResp
	(*InviteFriendToGroupReq)(nil),             // 8: pb.InviteFriendToGroupReq
	(*InviteFriendToGroupResp)(nil),            // 9: pb.InviteFriendToGroupResp
	(*CreateGroupNoticeReq)(nil),               // 10: pb.CreateGroupNoticeReq
	(*CreateGroupNoticeResp)(nil),              // 11: pb.CreateGroupNoticeResp
	(*DeleteGroupNoticeReq)(nil),               // 12: pb.DeleteGroupNoticeReq
	(*DeleteGroupNoticeResp)(nil),              // 13: pb.DeleteGroupNoticeResp
	(*EditGroupNoticeReq)(nil),                 // 14: pb.EditGroupNoticeReq
	(*EditGroupNoticeResp)(nil),                // 15: pb.EditGroupNoticeResp
	(*GetGroupNoticeListReq)(nil),              // 16: pb.GetGroupNoticeListReq
	(*GroupNotice)(nil),                        // 17: pb.GroupNotice
	(*GetGroupNoticeListResp)(nil),             // 18: pb.GetGroupNoticeListResp
	(*SetGroupMemberInfoReq)(nil),              // 19: pb.SetGroupMemberInfoReq
	(*SetGroupMemberInfoResp)(nil),             // 20: pb.SetGroupMemberInfoResp
	(*GetGroupMemberInfoReq)(nil),              // 21: pb.GetGroupMemberInfoReq
	(*GroupMemberInfo)(nil),                    // 22: pb.GroupMemberInfo
	(*GetGroupMemberInfoResp)(nil),             // 23: pb.GetGroupMemberInfoResp
	(*EditGroupInfoReq)(nil),                   // 24: pb.EditGroupInfoReq
	(*EditGroupInfoResp)(nil),                  // 25: pb.EditGroupInfoResp
	(*SetGroupSettingReq)(nil),                 // 26: pb.SetGroupSettingReq
	(*GroupSetting)(nil),                       // 27: pb.GroupSetting
	(*SetGroupSettingResp)(nil),                // 28: pb.SetGroupSettingResp
	(*GetGroupSettingReq)(nil),                 // 29: pb.GetGroupSettingReq
	(*GetGroupSettingResp)(nil),                // 30: pb.GetGroupSettingResp
	(*TransferGroupOwnerReq)(nil),              // 31: pb.TransferGroupOwnerReq
	(*TransferGroupOwnerResp)(nil),             // 32: pb.TransferGroupOwnerResp
	(*SetGroupMemberRoleReq)(nil),              // 33: pb.SetGroupMemberRoleReq
	(*SetGroupMemberRoleResp)(nil),             // 34: pb.SetGroupMemberRoleResp
	(*KickGroupMemberReq)(nil),                 // 35: pb.KickGroupMemberReq
	(*KickGroupMemberResp)(nil),                // 36: pb.KickGroupMemberResp
	(*QuitGroupReq)(nil),                       // 37: pb.QuitGroupReq
	(*QuitGroupResp)(nil),                      // 38: pb.QuitGroupResp
	(*BanGroupMemberReq)(nil),                  // 39: pb.BanGroupMemberReq
	(*BanGroupMemberResp)(nil),                 // 40: pb.BanGroupMemberResp
	(*BanAllGroupMemberReq)(nil),               // 41: pb.BanAllGroupMemberReq
	(*BanAllGroupMemberResp)(nil),              // 42: pb.BanAllGroupMemberResp
	(*UnbanGroupMemberReq)(nil),                // 43: pb.UnbanGroupMemberReq
	(*UnbanGroupMemberResp)(nil),               // 44: pb.UnbanGroupMemberResp
	(*UnbanAllGroupMemberReq)(nil),             // 45: pb.UnbanAllGroupMemberReq
	(*UnbanAllGroupMemberResp)(nil),            // 46: pb.UnbanAllGroupMemberResp
	(*GetGroupMemberListReq)(nil),              // 47: pb.GetGroupMemberListReq
	(*GetGroupMemberListResp)(nil),             // 48: pb.GetGroupMemberListResp
	(*DismissGroupReq)(nil),                    // 49: pb.DismissGroupReq
	(*DismissGroupResp)(nil),                   // 50: pb.DismissGroupResp
	(*SetGroupMsgNotifyTypeReq)(nil),           // 51: pb.SetGroupMsgNotifyTypeReq
	(*SetGroupMsgNotifyTypeResp)(nil),          // 52: pb.SetGroupMsgNotifyTypeResp
	(*GetMyGroupListReq)(nil),                  // 53: pb.GetMyGroupListReq
	(*GetMyGroupListResp)(nil),                 // 54: pb.GetMyGroupListResp
	(*GetGroupHomeResp_MemberStatistics)(nil),  // 55: pb.GetGroupHomeResp.MemberStatistics
	(*GroupSetting_MemberPermission)(nil),      // 56: pb.GroupSetting.MemberPermission
	(*GroupSetting_JoinGroupOpt)(nil),          // 57: pb.GroupSetting.JoinGroupOpt
	(*GetGroupMemberListResp_GroupMember)(nil), // 58: pb.GetGroupMemberListResp.GroupMember
	(*GetMyGroupListReq_Filter)(nil),           // 59: pb.GetMyGroupListReq.Filter
	(*GetMyGroupListResp_Group)(nil),           // 60: pb.GetMyGroupListResp.Group
	nil,                                        // 61: pb.GetMyGroupListResp.GroupMapEntry
	(*CommonReq)(nil),                          // 62: pb.CommonReq
	(*CommonResp)(nil),                         // 63: pb.CommonResp
	(*Page)(nil),                               // 64: pb.Page
	(*MsgNotifyOpt)(nil),                       // 65: pb.MsgNotifyOpt
}
var file_group_proto_depIdxs = []int32{
	62, // 0: pb.CreateGroupReq.commonReq:type_name -> pb.CommonReq
	63, // 1: pb.CreateGroupResp.commonResp:type_name -> pb.CommonResp
	62, // 2: pb.GetGroupHomeReq.commonReq:type_name -> pb.CommonReq
	63, // 3: pb.GetGroupHomeResp.commonResp:type_name -> pb.CommonResp
	55, // 4: pb.GetGroupHomeResp.memberStatistics:type_name -> pb.GetGroupHomeResp.MemberStatistics
	62, // 5: pb.InviteFriendToGroupReq.commonReq:type_name -> pb.CommonReq
	63, // 6: pb.InviteFriendToGroupResp.commonResp:type_name -> pb.CommonResp
	62, // 7: pb.CreateGroupNoticeReq.commonReq:type_name -> pb.CommonReq
	63, // 8: pb.CreateGroupNoticeResp.commonResp:type_name -> pb.CommonResp
	62, // 9: pb.DeleteGroupNoticeReq.commonReq:type_name -> pb.CommonReq
	63, // 10: pb.DeleteGroupNoticeResp.commonResp:type_name -> pb.CommonResp
	62, // 11: pb.EditGroupNoticeReq.commonReq:type_name -> pb.CommonReq
	63, // 12: pb.EditGroupNoticeResp.commonResp:type_name -> pb.CommonResp
	62, // 13: pb.GetGroupNoticeListReq.commonReq:type_name -> pb.CommonReq
	64, // 14: pb.GetGroupNoticeListReq.page:type_name -> pb.Page
	63, // 15: pb.GetGroupNoticeListResp.commonResp:type_name -> pb.CommonResp
	17, // 16: pb.GetGroupNoticeListResp.groupNotices:type_name -> pb.GroupNotice
	62, // 17: pb.SetGroupMemberInfoReq.commonReq:type_name -> pb.CommonReq
	0,  // 18: pb.SetGroupMemberInfoReq.disturbMore:type_name -> pb.GroupDisturbOpt
	63, // 19: pb.SetGroupMemberInfoResp.commonResp:type_name -> pb.CommonResp
	62, // 20: pb.GetGroupMemberInfoReq.commonReq:type_name -> pb.CommonReq
	0,  // 21: pb.GroupMemberInfo.disturbMore:type_name -> pb.GroupDisturbOpt
	63, // 22: pb.GetGroupMemberInfoResp.commonResp:type_name -> pb.CommonResp
	22, // 23: pb.GetGroupMemberInfoResp.groupMemberInfo:type_name -> pb.GroupMemberInfo
	62, // 24: pb.EditGroupInfoReq.commonReq:type_name -> pb.CommonReq
	63, // 25: pb.EditGroupInfoResp.commonResp:type_name -> pb.CommonResp
	62, // 26: pb.SetGroupSettingReq.commonReq:type_name -> pb.CommonReq
	27, // 27: pb.SetGroupSettingReq.groupSetting:type_name -> pb.GroupSetting
	57, // 28: pb.GroupSetting.joinGroupOpt:type_name -> pb.GroupSetting.JoinGroupOpt
	63, // 29: pb.SetGroupSettingResp.commonResp:type_name -> pb.CommonResp
	62, // 30: pb.GetGroupSettingReq.commonReq:type_name -> pb.CommonReq
	63, // 31: pb.GetGroupSettingResp.commonResp:type_name -> pb.CommonResp
	27, // 32: pb.GetGroupSettingResp.groupSetting:type_name -> pb.GroupSetting
	62, // 33: pb.TransferGroupOwnerReq.commonReq:type_name -> pb.CommonReq
	63, // 34: pb.TransferGroupOwnerResp.commonResp:type_name -> pb.CommonResp
	62, // 35: pb.SetGroupMemberRoleReq.commonReq:type_name -> pb.CommonReq
	1,  // 36: pb.SetGroupMemberRoleReq.role:type_name -> pb.GroupRole
	63, // 37: pb.SetGroupMemberRoleResp.commonResp:type_name -> pb.CommonResp
	62, // 38: pb.KickGroupMemberReq.commonReq:type_name -> pb.CommonReq
	63, // 39: pb.KickGroupMemberResp.commonResp:type_name -> pb.CommonResp
	62, // 40: pb.QuitGroupReq.commonReq:type_name -> pb.CommonReq
	63, // 41: pb.QuitGroupResp.commonResp:type_name -> pb.CommonResp
	62, // 42: pb.BanGroupMemberReq.commonReq:type_name -> pb.CommonReq
	63, // 43: pb.BanGroupMemberResp.commonResp:type_name -> pb.CommonResp
	62, // 44: pb.BanAllGroupMemberReq.commonReq:type_name -> pb.CommonReq
	63, // 45: pb.BanAllGroupMemberResp.commonResp:type_name -> pb.CommonResp
	62, // 46: pb.UnbanGroupMemberReq.commonReq:type_name -> pb.CommonReq
	63, // 47: pb.UnbanGroupMemberResp.commonResp:type_name -> pb.CommonResp
	62, // 48: pb.UnbanAllGroupMemberReq.commonReq:type_name -> pb.CommonReq
	63, // 49: pb.UnbanAllGroupMemberResp.commonResp:type_name -> pb.CommonResp
	62, // 50: pb.GetGroupMemberListReq.commonReq:type_name -> pb.CommonReq
	64, // 51: pb.GetGroupMemberListReq.page:type_name -> pb.Page
	63, // 52: pb.GetGroupMemberListResp.commonResp:type_name -> pb.CommonResp
	58, // 53: pb.GetGroupMemberListResp.groupMemberList:type_name -> pb.GetGroupMemberListResp.GroupMember
	62, // 54: pb.DismissGroupReq.commonReq:type_name -> pb.CommonReq
	63, // 55: pb.DismissGroupResp.commonResp:type_name -> pb.CommonResp
	62, // 56: pb.SetGroupMsgNotifyTypeReq.commonReq:type_name -> pb.CommonReq
	65, // 57: pb.SetGroupMsgNotifyTypeReq.opt:type_name -> pb.MsgNotifyOpt
	63, // 58: pb.SetGroupMsgNotifyTypeResp.commonResp:type_name -> pb.CommonResp
	62, // 59: pb.GetMyGroupListReq.commonReq:type_name -> pb.CommonReq
	64, // 60: pb.GetMyGroupListReq.page:type_name -> pb.Page
	59, // 61: pb.GetMyGroupListReq.filter:type_name -> pb.GetMyGroupListReq.Filter
	3,  // 62: pb.GetMyGroupListReq.opt:type_name -> pb.GetMyGroupListReq.Opt
	63, // 63: pb.GetMyGroupListResp.commonResp:type_name -> pb.CommonResp
	61, // 64: pb.GetMyGroupListResp.groupMap:type_name -> pb.GetMyGroupListResp.GroupMapEntry
	2,  // 65: pb.GroupSetting.JoinGroupOpt.type:type_name -> pb.GroupSetting.JoinGroupOpt.Type
	60, // 66: pb.GetMyGroupListResp.GroupMapEntry.value:type_name -> pb.GetMyGroupListResp.Group
	4,  // 67: pb.groupService.CreateGroup:input_type -> pb.CreateGroupReq
	6,  // 68: pb.groupService.GetGroupHome:input_type -> pb.GetGroupHomeReq
	8,  // 69: pb.groupService.InviteFriendToGroup:input_type -> pb.InviteFriendToGroupReq
	10, // 70: pb.groupService.CreateGroupNotice:input_type -> pb.CreateGroupNoticeReq
	12, // 71: pb.groupService.DeleteGroupNotice:input_type -> pb.DeleteGroupNoticeReq
	16, // 72: pb.groupService.GetGroupNoticeList:input_type -> pb.GetGroupNoticeListReq
	19, // 73: pb.groupService.SetGroupMemberInfo:input_type -> pb.SetGroupMemberInfoReq
	21, // 74: pb.groupService.GetGroupMemberInfo:input_type -> pb.GetGroupMemberInfoReq
	24, // 75: pb.groupService.EditGroupInfo:input_type -> pb.EditGroupInfoReq
	26, // 76: pb.groupService.SetGroupSetting:input_type -> pb.SetGroupSettingReq
	29, // 77: pb.groupService.GetGroupSetting:input_type -> pb.GetGroupSettingReq
	31, // 78: pb.groupService.TransferGroupOwner:input_type -> pb.TransferGroupOwnerReq
	33, // 79: pb.groupService.SetGroupMemberRole:input_type -> pb.SetGroupMemberRoleReq
	35, // 80: pb.groupService.KickGroupMember:input_type -> pb.KickGroupMemberReq
	37, // 81: pb.groupService.QuitGroup:input_type -> pb.QuitGroupReq
	39, // 82: pb.groupService.BanGroupMember:input_type -> pb.BanGroupMemberReq
	41, // 83: pb.groupService.BanAllGroupMember:input_type -> pb.BanAllGroupMemberReq
	43, // 84: pb.groupService.UnbanGroupMember:input_type -> pb.UnbanGroupMemberReq
	45, // 85: pb.groupService.UnbanAllGroupMember:input_type -> pb.UnbanAllGroupMemberReq
	47, // 86: pb.groupService.GetGroupMemberList:input_type -> pb.GetGroupMemberListReq
	49, // 87: pb.groupService.DismissGroup:input_type -> pb.DismissGroupReq
	51, // 88: pb.groupService.SetGroupMsgNotifyType:input_type -> pb.SetGroupMsgNotifyTypeReq
	53, // 89: pb.groupService.GetMyGroupList:input_type -> pb.GetMyGroupListReq
	5,  // 90: pb.groupService.CreateGroup:output_type -> pb.CreateGroupResp
	7,  // 91: pb.groupService.GetGroupHome:output_type -> pb.GetGroupHomeResp
	9,  // 92: pb.groupService.InviteFriendToGroup:output_type -> pb.InviteFriendToGroupResp
	11, // 93: pb.groupService.CreateGroupNotice:output_type -> pb.CreateGroupNoticeResp
	13, // 94: pb.groupService.DeleteGroupNotice:output_type -> pb.DeleteGroupNoticeResp
	18, // 95: pb.groupService.GetGroupNoticeList:output_type -> pb.GetGroupNoticeListResp
	20, // 96: pb.groupService.SetGroupMemberInfo:output_type -> pb.SetGroupMemberInfoResp
	23, // 97: pb.groupService.GetGroupMemberInfo:output_type -> pb.GetGroupMemberInfoResp
	25, // 98: pb.groupService.EditGroupInfo:output_type -> pb.EditGroupInfoResp
	28, // 99: pb.groupService.SetGroupSetting:output_type -> pb.SetGroupSettingResp
	30, // 100: pb.groupService.GetGroupSetting:output_type -> pb.GetGroupSettingResp
	32, // 101: pb.groupService.TransferGroupOwner:output_type -> pb.TransferGroupOwnerResp
	34, // 102: pb.groupService.SetGroupMemberRole:output_type -> pb.SetGroupMemberRoleResp
	36, // 103: pb.groupService.KickGroupMember:output_type -> pb.KickGroupMemberResp
	38, // 104: pb.groupService.QuitGroup:output_type -> pb.QuitGroupResp
	40, // 105: pb.groupService.BanGroupMember:output_type -> pb.BanGroupMemberResp
	42, // 106: pb.groupService.BanAllGroupMember:output_type -> pb.BanAllGroupMemberResp
	44, // 107: pb.groupService.UnbanGroupMember:output_type -> pb.UnbanGroupMemberResp
	46, // 108: pb.groupService.UnbanAllGroupMember:output_type -> pb.UnbanAllGroupMemberResp
	48, // 109: pb.groupService.GetGroupMemberList:output_type -> pb.GetGroupMemberListResp
	50, // 110: pb.groupService.DismissGroup:output_type -> pb.DismissGroupResp
	52, // 111: pb.groupService.SetGroupMsgNotifyType:output_type -> pb.SetGroupMsgNotifyTypeResp
	54, // 112: pb.groupService.GetMyGroupList:output_type -> pb.GetMyGroupListResp
	90, // [90:113] is the sub-list for method output_type
	67, // [67:90] is the sub-list for method input_type
	67, // [67:67] is the sub-list for extension type_name
	67, // [67:67] is the sub-list for extension extendee
	0,  // [0:67] is the sub-list for field type_name
}

func init() { file_group_proto_init() }
func file_group_proto_init() {
	if File_group_proto != nil {
		return
	}
	file_common_proto_init()
	file_im_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupHomeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupHomeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteFriendToGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteFriendToGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupNoticeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupNoticeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupNoticeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupNoticeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditGroupNoticeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditGroupNoticeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupNoticeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupNoticeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMemberInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMemberInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditGroupInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditGroupInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferGroupOwnerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferGroupOwnerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMemberRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMemberRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickGroupMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanGroupMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanAllGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanAllGroupMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanGroupMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanAllGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanAllGroupMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DismissGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DismissGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMsgNotifyTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMsgNotifyTypeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyGroupListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyGroupListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupHomeResp_MemberStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetting_MemberPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetting_JoinGroupOpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListResp_GroupMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyGroupListReq_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyGroupListResp_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_group_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_group_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_group_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_group_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_group_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_group_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_group_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_group_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_group_proto_msgTypes[52].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_group_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_group_proto_goTypes,
		DependencyIndexes: file_group_proto_depIdxs,
		EnumInfos:         file_group_proto_enumTypes,
		MessageInfos:      file_group_proto_msgTypes,
	}.Build()
	File_group_proto = out.File
	file_group_proto_rawDesc = nil
	file_group_proto_goTypes = nil
	file_group_proto_depIdxs = nil
}
