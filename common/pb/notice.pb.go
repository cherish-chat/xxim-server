// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: notice.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//通知数据
type NoticeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会话信息
	ConvId      string `protobuf:"bytes,1,opt,name=convId,proto3" json:"convId"`            // 会话id (notice:$noticeId)
	UnreadCount int32  `protobuf:"varint,2,opt,name=unreadCount,proto3" json:"unreadCount"` // 会话未读数
	// 未读数量是绝对值还是增量
	UnreadAbsolute bool `protobuf:"varint,3,opt,name=unreadAbsolute,proto3" json:"unreadAbsolute"`
	// 消息信息
	NoticeId    string `protobuf:"bytes,11,opt,name=noticeId,proto3" json:"noticeId"`
	CreateTime  string `protobuf:"bytes,12,opt,name=createTime,proto3" json:"createTime"`
	Title       string `protobuf:"bytes,13,opt,name=title,proto3" json:"title"`              // 消息标题(显示在会话列表)
	ContentType int32  `protobuf:"varint,14,opt,name=contentType,proto3" json:"contentType"` // 通知数据类型
	Content     []byte `protobuf:"bytes,15,opt,name=content,proto3" json:"content"`          // 消息数据
	// 附加信息
	Options *NoticeData_Options `protobuf:"bytes,21,opt,name=options,proto3" json:"options"` // 通知选项
	// 扩展信息
	Ext []byte `protobuf:"bytes,31,opt,name=ext,proto3" json:"ext"` // 扩展字段
}

func (x *NoticeData) Reset() {
	*x = NoticeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeData) ProtoMessage() {}

func (x *NoticeData) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeData.ProtoReflect.Descriptor instead.
func (*NoticeData) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{0}
}

func (x *NoticeData) GetConvId() string {
	if x != nil {
		return x.ConvId
	}
	return ""
}

func (x *NoticeData) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *NoticeData) GetUnreadAbsolute() bool {
	if x != nil {
		return x.UnreadAbsolute
	}
	return false
}

func (x *NoticeData) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

func (x *NoticeData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *NoticeData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NoticeData) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *NoticeData) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *NoticeData) GetOptions() *NoticeData_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *NoticeData) GetExt() []byte {
	if x != nil {
		return x.Ext
	}
	return nil
}

type NoticeDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeDataList []*NoticeData `protobuf:"bytes,1,rep,name=noticeDataList,proto3" json:"noticeDataList"`
}

func (x *NoticeDataList) Reset() {
	*x = NoticeDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeDataList) ProtoMessage() {}

func (x *NoticeDataList) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeDataList.ProtoReflect.Descriptor instead.
func (*NoticeDataList) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{1}
}

func (x *NoticeDataList) GetNoticeDataList() []*NoticeData {
	if x != nil {
		return x.NoticeDataList
	}
	return nil
}

//SendNoticeDataReq 发送通知数据
type SendNoticeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq   *CommonReq  `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	NoticeData  *NoticeData `protobuf:"bytes,2,opt,name=noticeData,proto3" json:"noticeData"`
	UserId      *string     `protobuf:"bytes,3,opt,name=userId,proto3,oneof" json:"userId"`            // 指定用户id
	IsBroadcast *bool       `protobuf:"varint,4,opt,name=isBroadcast,proto3,oneof" json:"isBroadcast"` // 是否广播
}

func (x *SendNoticeDataReq) Reset() {
	*x = SendNoticeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNoticeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNoticeDataReq) ProtoMessage() {}

func (x *SendNoticeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNoticeDataReq.ProtoReflect.Descriptor instead.
func (*SendNoticeDataReq) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{2}
}

func (x *SendNoticeDataReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *SendNoticeDataReq) GetNoticeData() *NoticeData {
	if x != nil {
		return x.NoticeData
	}
	return nil
}

func (x *SendNoticeDataReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *SendNoticeDataReq) GetIsBroadcast() bool {
	if x != nil && x.IsBroadcast != nil {
		return *x.IsBroadcast
	}
	return false
}

type SendNoticeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *SendNoticeDataResp) Reset() {
	*x = SendNoticeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNoticeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNoticeDataResp) ProtoMessage() {}

func (x *SendNoticeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNoticeDataResp.ProtoReflect.Descriptor instead.
func (*SendNoticeDataResp) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{3}
}

func (x *SendNoticeDataResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//PushNoticeDataReq 推送通知数据
type PushNoticeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	NoticeId  string     `protobuf:"bytes,2,opt,name=noticeId,proto3" json:"noticeId"`
}

func (x *PushNoticeDataReq) Reset() {
	*x = PushNoticeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushNoticeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushNoticeDataReq) ProtoMessage() {}

func (x *PushNoticeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushNoticeDataReq.ProtoReflect.Descriptor instead.
func (*PushNoticeDataReq) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{4}
}

func (x *PushNoticeDataReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *PushNoticeDataReq) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

type PushNoticeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *PushNoticeDataResp) Reset() {
	*x = PushNoticeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushNoticeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushNoticeDataResp) ProtoMessage() {}

func (x *PushNoticeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushNoticeDataResp.ProtoReflect.Descriptor instead.
func (*PushNoticeDataResp) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{5}
}

func (x *PushNoticeDataResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//GetNoticeDataReq 获取通知数据
type GetUserNoticeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	UserId    string     `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId"`
}

func (x *GetUserNoticeDataReq) Reset() {
	*x = GetUserNoticeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNoticeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNoticeDataReq) ProtoMessage() {}

func (x *GetUserNoticeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNoticeDataReq.ProtoReflect.Descriptor instead.
func (*GetUserNoticeDataReq) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserNoticeDataReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetUserNoticeDataReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserNoticeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp   `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	NoticeData []*NoticeData `protobuf:"bytes,2,rep,name=noticeData,proto3" json:"noticeData"`
	Push       bool          `protobuf:"varint,3,opt,name=push,proto3" json:"push"`
}

func (x *GetUserNoticeDataResp) Reset() {
	*x = GetUserNoticeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNoticeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNoticeDataResp) ProtoMessage() {}

func (x *GetUserNoticeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNoticeDataResp.ProtoReflect.Descriptor instead.
func (*GetUserNoticeDataResp) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserNoticeDataResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserNoticeDataResp) GetNoticeData() []*NoticeData {
	if x != nil {
		return x.NoticeData
	}
	return nil
}

func (x *GetUserNoticeDataResp) GetPush() bool {
	if x != nil {
		return x.Push
	}
	return false
}

//AckNoticeDataReq 确认通知数据
type AckNoticeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	NoticeIds []string   `protobuf:"bytes,2,rep,name=noticeIds,proto3" json:"noticeIds"`
}

func (x *AckNoticeDataReq) Reset() {
	*x = AckNoticeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckNoticeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckNoticeDataReq) ProtoMessage() {}

func (x *AckNoticeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckNoticeDataReq.ProtoReflect.Descriptor instead.
func (*AckNoticeDataReq) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{8}
}

func (x *AckNoticeDataReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *AckNoticeDataReq) GetNoticeIds() []string {
	if x != nil {
		return x.NoticeIds
	}
	return nil
}

type AckNoticeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *AckNoticeDataResp) Reset() {
	*x = AckNoticeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckNoticeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckNoticeDataResp) ProtoMessage() {}

func (x *AckNoticeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckNoticeDataResp.ProtoReflect.Descriptor instead.
func (*AckNoticeDataResp) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{9}
}

func (x *AckNoticeDataResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

//GetUserNoticeConvIdsReq 获取用户所有的通知号
type GetUserNoticeConvIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	UserId    string     `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId"`
}

func (x *GetUserNoticeConvIdsReq) Reset() {
	*x = GetUserNoticeConvIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNoticeConvIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNoticeConvIdsReq) ProtoMessage() {}

func (x *GetUserNoticeConvIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNoticeConvIdsReq.ProtoReflect.Descriptor instead.
func (*GetUserNoticeConvIdsReq) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserNoticeConvIdsReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetUserNoticeConvIdsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserNoticeConvIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	ConvIds    []string    `protobuf:"bytes,2,rep,name=convIds,proto3" json:"convIds"`
}

func (x *GetUserNoticeConvIdsResp) Reset() {
	*x = GetUserNoticeConvIdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNoticeConvIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNoticeConvIdsResp) ProtoMessage() {}

func (x *GetUserNoticeConvIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNoticeConvIdsResp.ProtoReflect.Descriptor instead.
func (*GetUserNoticeConvIdsResp) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserNoticeConvIdsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserNoticeConvIdsResp) GetConvIds() []string {
	if x != nil {
		return x.ConvIds
	}
	return nil
}

//GetNoticeConvAllSubscribersReq 获取通知号所有的订阅者
type GetNoticeConvAllSubscribersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	ConvId    string     `protobuf:"bytes,2,opt,name=convId,proto3" json:"convId"`
}

func (x *GetNoticeConvAllSubscribersReq) Reset() {
	*x = GetNoticeConvAllSubscribersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNoticeConvAllSubscribersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoticeConvAllSubscribersReq) ProtoMessage() {}

func (x *GetNoticeConvAllSubscribersReq) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoticeConvAllSubscribersReq.ProtoReflect.Descriptor instead.
func (*GetNoticeConvAllSubscribersReq) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{12}
}

func (x *GetNoticeConvAllSubscribersReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetNoticeConvAllSubscribersReq) GetConvId() string {
	if x != nil {
		return x.ConvId
	}
	return ""
}

type GetNoticeConvAllSubscribersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	UserIds    []string    `protobuf:"bytes,2,rep,name=userIds,proto3" json:"userIds"`
}

func (x *GetNoticeConvAllSubscribersResp) Reset() {
	*x = GetNoticeConvAllSubscribersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNoticeConvAllSubscribersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoticeConvAllSubscribersResp) ProtoMessage() {}

func (x *GetNoticeConvAllSubscribersResp) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoticeConvAllSubscribersResp.ProtoReflect.Descriptor instead.
func (*GetNoticeConvAllSubscribersResp) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{13}
}

func (x *GetNoticeConvAllSubscribersResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetNoticeConvAllSubscribersResp) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type NoticeData_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户端是否需要保存消息
	StorageForClient bool `protobuf:"varint,1,opt,name=storageForClient,proto3" json:"storageForClient"`
	// 是否需要重新渲染会话
	UpdateConvMsg bool `protobuf:"varint,2,opt,name=updateConvMsg,proto3" json:"updateConvMsg"`
	// 只推送在线用户一次
	OnlinePushOnce bool `protobuf:"varint,3,opt,name=onlinePushOnce,proto3" json:"onlinePushOnce"`
}

func (x *NoticeData_Options) Reset() {
	*x = NoticeData_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeData_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeData_Options) ProtoMessage() {}

func (x *NoticeData_Options) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeData_Options.ProtoReflect.Descriptor instead.
func (*NoticeData_Options) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NoticeData_Options) GetStorageForClient() bool {
	if x != nil {
		return x.StorageForClient
	}
	return false
}

func (x *NoticeData_Options) GetUpdateConvMsg() bool {
	if x != nil {
		return x.UpdateConvMsg
	}
	return false
}

func (x *NoticeData_Options) GetOnlinePushOnce() bool {
	if x != nil {
		return x.OnlinePushOnce
	}
	return false
}

var File_notice_proto protoreflect.FileDescriptor

var file_notice_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x1a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x03, 0x0a,
	0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x76, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x41,
	0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x78, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x65, 0x78, 0x74, 0x1a,
	0x83, 0x01, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x4d, 0x73, 0x67, 0x12, 0x26, 0x0a,
	0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x4f, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x4f, 0x6e, 0x63, 0x65, 0x22, 0x48, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xcf, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x2e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x0b, 0x69, 0x73, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0b, 0x69, 0x73, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x73, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x22, 0x44, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5c, 0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5b, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x75, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x70, 0x75, 0x73, 0x68, 0x22, 0x5d, 0x0a, 0x10, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x43, 0x0a, 0x11, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5e, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x73,
	0x22, 0x65, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x32, 0xc4, 0x04, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0f, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x16,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x76, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notice_proto_rawDescOnce sync.Once
	file_notice_proto_rawDescData = file_notice_proto_rawDesc
)

func file_notice_proto_rawDescGZIP() []byte {
	file_notice_proto_rawDescOnce.Do(func() {
		file_notice_proto_rawDescData = protoimpl.X.CompressGZIP(file_notice_proto_rawDescData)
	})
	return file_notice_proto_rawDescData
}

var file_notice_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_notice_proto_goTypes = []interface{}{
	(*NoticeData)(nil),                      // 0: pb.NoticeData
	(*NoticeDataList)(nil),                  // 1: pb.NoticeDataList
	(*SendNoticeDataReq)(nil),               // 2: pb.SendNoticeDataReq
	(*SendNoticeDataResp)(nil),              // 3: pb.SendNoticeDataResp
	(*PushNoticeDataReq)(nil),               // 4: pb.PushNoticeDataReq
	(*PushNoticeDataResp)(nil),              // 5: pb.PushNoticeDataResp
	(*GetUserNoticeDataReq)(nil),            // 6: pb.GetUserNoticeDataReq
	(*GetUserNoticeDataResp)(nil),           // 7: pb.GetUserNoticeDataResp
	(*AckNoticeDataReq)(nil),                // 8: pb.AckNoticeDataReq
	(*AckNoticeDataResp)(nil),               // 9: pb.AckNoticeDataResp
	(*GetUserNoticeConvIdsReq)(nil),         // 10: pb.GetUserNoticeConvIdsReq
	(*GetUserNoticeConvIdsResp)(nil),        // 11: pb.GetUserNoticeConvIdsResp
	(*GetNoticeConvAllSubscribersReq)(nil),  // 12: pb.GetNoticeConvAllSubscribersReq
	(*GetNoticeConvAllSubscribersResp)(nil), // 13: pb.GetNoticeConvAllSubscribersResp
	(*NoticeData_Options)(nil),              // 14: pb.NoticeData.Options
	(*CommonReq)(nil),                       // 15: pb.CommonReq
	(*CommonResp)(nil),                      // 16: pb.CommonResp
	(*AfterConnectReq)(nil),                 // 17: pb.AfterConnectReq
	(*AfterDisconnectReq)(nil),              // 18: pb.AfterDisconnectReq
}
var file_notice_proto_depIdxs = []int32{
	14, // 0: pb.NoticeData.options:type_name -> pb.NoticeData.Options
	0,  // 1: pb.NoticeDataList.noticeDataList:type_name -> pb.NoticeData
	15, // 2: pb.SendNoticeDataReq.commonReq:type_name -> pb.CommonReq
	0,  // 3: pb.SendNoticeDataReq.noticeData:type_name -> pb.NoticeData
	16, // 4: pb.SendNoticeDataResp.commonResp:type_name -> pb.CommonResp
	15, // 5: pb.PushNoticeDataReq.commonReq:type_name -> pb.CommonReq
	16, // 6: pb.PushNoticeDataResp.commonResp:type_name -> pb.CommonResp
	15, // 7: pb.GetUserNoticeDataReq.commonReq:type_name -> pb.CommonReq
	16, // 8: pb.GetUserNoticeDataResp.commonResp:type_name -> pb.CommonResp
	0,  // 9: pb.GetUserNoticeDataResp.noticeData:type_name -> pb.NoticeData
	15, // 10: pb.AckNoticeDataReq.commonReq:type_name -> pb.CommonReq
	16, // 11: pb.AckNoticeDataResp.commonResp:type_name -> pb.CommonResp
	15, // 12: pb.GetUserNoticeConvIdsReq.commonReq:type_name -> pb.CommonReq
	16, // 13: pb.GetUserNoticeConvIdsResp.commonResp:type_name -> pb.CommonResp
	15, // 14: pb.GetNoticeConvAllSubscribersReq.commonReq:type_name -> pb.CommonReq
	16, // 15: pb.GetNoticeConvAllSubscribersResp.commonResp:type_name -> pb.CommonResp
	17, // 16: pb.noticeService.AfterConnect:input_type -> pb.AfterConnectReq
	18, // 17: pb.noticeService.AfterDisconnect:input_type -> pb.AfterDisconnectReq
	2,  // 18: pb.noticeService.SendNoticeData:input_type -> pb.SendNoticeDataReq
	4,  // 19: pb.noticeService.PushNoticeData:input_type -> pb.PushNoticeDataReq
	6,  // 20: pb.noticeService.GetUserNoticeData:input_type -> pb.GetUserNoticeDataReq
	8,  // 21: pb.noticeService.AckNoticeData:input_type -> pb.AckNoticeDataReq
	10, // 22: pb.noticeService.GetUserNoticeConvIds:input_type -> pb.GetUserNoticeConvIdsReq
	12, // 23: pb.noticeService.GetNoticeConvAllSubscribers:input_type -> pb.GetNoticeConvAllSubscribersReq
	16, // 24: pb.noticeService.AfterConnect:output_type -> pb.CommonResp
	16, // 25: pb.noticeService.AfterDisconnect:output_type -> pb.CommonResp
	3,  // 26: pb.noticeService.SendNoticeData:output_type -> pb.SendNoticeDataResp
	5,  // 27: pb.noticeService.PushNoticeData:output_type -> pb.PushNoticeDataResp
	7,  // 28: pb.noticeService.GetUserNoticeData:output_type -> pb.GetUserNoticeDataResp
	9,  // 29: pb.noticeService.AckNoticeData:output_type -> pb.AckNoticeDataResp
	11, // 30: pb.noticeService.GetUserNoticeConvIds:output_type -> pb.GetUserNoticeConvIdsResp
	13, // 31: pb.noticeService.GetNoticeConvAllSubscribers:output_type -> pb.GetNoticeConvAllSubscribersResp
	24, // [24:32] is the sub-list for method output_type
	16, // [16:24] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_notice_proto_init() }
func file_notice_proto_init() {
	if File_notice_proto != nil {
		return
	}
	file_conn_proto_init()
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_notice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNoticeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNoticeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushNoticeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushNoticeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserNoticeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserNoticeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckNoticeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckNoticeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserNoticeConvIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserNoticeConvIdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNoticeConvAllSubscribersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNoticeConvAllSubscribersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeData_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_notice_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notice_proto_goTypes,
		DependencyIndexes: file_notice_proto_depIdxs,
		MessageInfos:      file_notice_proto_msgTypes,
	}.Build()
	File_notice_proto = out.File
	file_notice_proto_rawDesc = nil
	file_notice_proto_goTypes = nil
	file_notice_proto_depIdxs = nil
}
