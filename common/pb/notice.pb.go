// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: notice.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//通知数据
type NoticeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会话信息
	ConvId string `protobuf:"bytes,1,opt,name=convId,proto3" json:"convId"` // 会话id
	// 消息信息
	NoticeId    string `protobuf:"bytes,11,opt,name=noticeId,proto3" json:"noticeId"`
	CreateTime  string `protobuf:"bytes,12,opt,name=createTime,proto3" json:"createTime"`
	Title       string `protobuf:"bytes,13,opt,name=title,proto3" json:"title"`              // 消息标题(显示在会话列表)
	ContentType int32  `protobuf:"varint,14,opt,name=contentType,proto3" json:"contentType"` // 通知数据类型
	Content     []byte `protobuf:"bytes,15,opt,name=content,proto3" json:"content"`          // 消息数据
	// 附加信息
	Options *NoticeData_Options `protobuf:"bytes,21,opt,name=options,proto3" json:"options"` // 通知选项
	// 扩展信息
	Ext []byte `protobuf:"bytes,31,opt,name=ext,proto3" json:"ext"` // 扩展字段
}

func (x *NoticeData) Reset() {
	*x = NoticeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeData) ProtoMessage() {}

func (x *NoticeData) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeData.ProtoReflect.Descriptor instead.
func (*NoticeData) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{0}
}

func (x *NoticeData) GetConvId() string {
	if x != nil {
		return x.ConvId
	}
	return ""
}

func (x *NoticeData) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

func (x *NoticeData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *NoticeData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NoticeData) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *NoticeData) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *NoticeData) GetOptions() *NoticeData_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *NoticeData) GetExt() []byte {
	if x != nil {
		return x.Ext
	}
	return nil
}

type NoticeDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeDataList []*NoticeData `protobuf:"bytes,1,rep,name=noticeDataList,proto3" json:"noticeDataList"`
}

func (x *NoticeDataList) Reset() {
	*x = NoticeDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeDataList) ProtoMessage() {}

func (x *NoticeDataList) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeDataList.ProtoReflect.Descriptor instead.
func (*NoticeDataList) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{1}
}

func (x *NoticeDataList) GetNoticeDataList() []*NoticeData {
	if x != nil {
		return x.NoticeDataList
	}
	return nil
}

//GetNoticeDataReq 获取通知数据
type GetUserNoticeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonReq `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq"`
	UserId    string     `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId"`
	ConvId    string     `protobuf:"bytes,3,opt,name=convId,proto3" json:"convId"`
	DeviceId  *string    `protobuf:"bytes,4,opt,name=deviceId,proto3,oneof" json:"deviceId"`
}

func (x *GetUserNoticeDataReq) Reset() {
	*x = GetUserNoticeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNoticeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNoticeDataReq) ProtoMessage() {}

func (x *GetUserNoticeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNoticeDataReq.ProtoReflect.Descriptor instead.
func (*GetUserNoticeDataReq) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserNoticeDataReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *GetUserNoticeDataReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserNoticeDataReq) GetConvId() string {
	if x != nil {
		return x.ConvId
	}
	return ""
}

func (x *GetUserNoticeDataReq) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

type GetUserNoticeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp   `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	NoticeData []*NoticeData `protobuf:"bytes,2,rep,name=noticeData,proto3" json:"noticeData"`
	Push       bool          `protobuf:"varint,3,opt,name=push,proto3" json:"push"`
}

func (x *GetUserNoticeDataResp) Reset() {
	*x = GetUserNoticeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNoticeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNoticeDataResp) ProtoMessage() {}

func (x *GetUserNoticeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNoticeDataResp.ProtoReflect.Descriptor instead.
func (*GetUserNoticeDataResp) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserNoticeDataResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserNoticeDataResp) GetNoticeData() []*NoticeData {
	if x != nil {
		return x.NoticeData
	}
	return nil
}

func (x *GetUserNoticeDataResp) GetPush() bool {
	if x != nil {
		return x.Push
	}
	return false
}

//AckNoticeDataReq 确认通知数据
type AckNoticeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvId    string     `protobuf:"bytes,1,opt,name=convId,proto3" json:"convId"`
	NoticeId  string     `protobuf:"bytes,2,opt,name=noticeId,proto3" json:"noticeId"`
	CommonReq *CommonReq `protobuf:"bytes,11,opt,name=commonReq,proto3" json:"commonReq"`
}

func (x *AckNoticeDataReq) Reset() {
	*x = AckNoticeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckNoticeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckNoticeDataReq) ProtoMessage() {}

func (x *AckNoticeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckNoticeDataReq.ProtoReflect.Descriptor instead.
func (*AckNoticeDataReq) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{4}
}

func (x *AckNoticeDataReq) GetConvId() string {
	if x != nil {
		return x.ConvId
	}
	return ""
}

func (x *AckNoticeDataReq) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

func (x *AckNoticeDataReq) GetCommonReq() *CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

type AckNoticeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *AckNoticeDataResp) Reset() {
	*x = AckNoticeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckNoticeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckNoticeDataResp) ProtoMessage() {}

func (x *AckNoticeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckNoticeDataResp.ProtoReflect.Descriptor instead.
func (*AckNoticeDataResp) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{5}
}

func (x *AckNoticeDataResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type NoticeData_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户端是否需要保存消息
	StorageForClient bool `protobuf:"varint,1,opt,name=storageForClient,proto3" json:"storageForClient"`
	// 是否需要重新渲染会话
	UpdateConvMsg bool `protobuf:"varint,2,opt,name=updateConvMsg,proto3" json:"updateConvMsg"`
}

func (x *NoticeData_Options) Reset() {
	*x = NoticeData_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeData_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeData_Options) ProtoMessage() {}

func (x *NoticeData_Options) ProtoReflect() protoreflect.Message {
	mi := &file_notice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeData_Options.ProtoReflect.Descriptor instead.
func (*NoticeData_Options) Descriptor() ([]byte, []int) {
	return file_notice_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NoticeData_Options) GetStorageForClient() bool {
	if x != nil {
		return x.StorageForClient
	}
	return false
}

func (x *NoticeData_Options) GetUpdateConvMsg() bool {
	if x != nil {
		return x.UpdateConvMsg
	}
	return false
}

var File_notice_proto protoreflect.FileDescriptor

var file_notice_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x1a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x02, 0x0a,
	0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x76, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x65, 0x78, 0x74, 0x1a, 0x5b, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x4d,
	0x73, 0x67, 0x22, 0x48, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa1, 0x01, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x76, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x8b, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x75,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x75, 0x73, 0x68, 0x22, 0x73,
	0x0a, 0x10, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x22, 0x43, 0x0a, 0x11, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x32, 0x87, 0x02, 0x0a, 0x0d, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x39, 0x0a, 0x0f, 0x41, 0x66, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x6b, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_notice_proto_rawDescOnce sync.Once
	file_notice_proto_rawDescData = file_notice_proto_rawDesc
)

func file_notice_proto_rawDescGZIP() []byte {
	file_notice_proto_rawDescOnce.Do(func() {
		file_notice_proto_rawDescData = protoimpl.X.CompressGZIP(file_notice_proto_rawDescData)
	})
	return file_notice_proto_rawDescData
}

var file_notice_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_notice_proto_goTypes = []interface{}{
	(*NoticeData)(nil),            // 0: pb.NoticeData
	(*NoticeDataList)(nil),        // 1: pb.NoticeDataList
	(*GetUserNoticeDataReq)(nil),  // 2: pb.GetUserNoticeDataReq
	(*GetUserNoticeDataResp)(nil), // 3: pb.GetUserNoticeDataResp
	(*AckNoticeDataReq)(nil),      // 4: pb.AckNoticeDataReq
	(*AckNoticeDataResp)(nil),     // 5: pb.AckNoticeDataResp
	(*NoticeData_Options)(nil),    // 6: pb.NoticeData.Options
	(*CommonReq)(nil),             // 7: pb.CommonReq
	(*CommonResp)(nil),            // 8: pb.CommonResp
	(*AfterConnectReq)(nil),       // 9: pb.AfterConnectReq
	(*AfterDisconnectReq)(nil),    // 10: pb.AfterDisconnectReq
}
var file_notice_proto_depIdxs = []int32{
	6,  // 0: pb.NoticeData.options:type_name -> pb.NoticeData.Options
	0,  // 1: pb.NoticeDataList.noticeDataList:type_name -> pb.NoticeData
	7,  // 2: pb.GetUserNoticeDataReq.commonReq:type_name -> pb.CommonReq
	8,  // 3: pb.GetUserNoticeDataResp.commonResp:type_name -> pb.CommonResp
	0,  // 4: pb.GetUserNoticeDataResp.noticeData:type_name -> pb.NoticeData
	7,  // 5: pb.AckNoticeDataReq.commonReq:type_name -> pb.CommonReq
	8,  // 6: pb.AckNoticeDataResp.commonResp:type_name -> pb.CommonResp
	9,  // 7: pb.noticeService.AfterConnect:input_type -> pb.AfterConnectReq
	10, // 8: pb.noticeService.AfterDisconnect:input_type -> pb.AfterDisconnectReq
	2,  // 9: pb.noticeService.GetUserNoticeData:input_type -> pb.GetUserNoticeDataReq
	4,  // 10: pb.noticeService.AckNoticeData:input_type -> pb.AckNoticeDataReq
	8,  // 11: pb.noticeService.AfterConnect:output_type -> pb.CommonResp
	8,  // 12: pb.noticeService.AfterDisconnect:output_type -> pb.CommonResp
	3,  // 13: pb.noticeService.GetUserNoticeData:output_type -> pb.GetUserNoticeDataResp
	5,  // 14: pb.noticeService.AckNoticeData:output_type -> pb.AckNoticeDataResp
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_notice_proto_init() }
func file_notice_proto_init() {
	if File_notice_proto != nil {
		return
	}
	file_conn_proto_init()
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_notice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserNoticeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserNoticeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckNoticeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckNoticeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeData_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_notice_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notice_proto_goTypes,
		DependencyIndexes: file_notice_proto_depIdxs,
		MessageInfos:      file_notice_proto_msgTypes,
	}.Build()
	File_notice_proto = out.File
	file_notice_proto_rawDesc = nil
	file_notice_proto_goTypes = nil
	file_notice_proto_depIdxs = nil
}
