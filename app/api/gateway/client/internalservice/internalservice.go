// Code generated by goctl. DO NOT EDIT.
// Source: gateway.peer.proto

package internalservice

import (
	"context"

	"github.com/cherish-chat/xxim-proto/peerpb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GatewayWriteDataContent      = peerpb.GatewayWriteDataContent
	ListLongConnectionReq        = peerpb.ListLongConnectionReq
	ListLongConnectionReq_Filter = peerpb.ListLongConnectionReq_Filter
	ListLongConnectionResp       = peerpb.ListLongConnectionResp

	InternalService interface {
		// ListLongConnection 获取长连接列表
		ListLongConnection(ctx context.Context, in *ListLongConnectionReq, opts ...grpc.CallOption) (*ListLongConnectionResp, error)
	}

	defaultInternalService struct {
		cli zrpc.Client
	}
)

func NewInternalService(cli zrpc.Client) InternalService {
	return &defaultInternalService{
		cli: cli,
	}
}

// ListLongConnection 获取长连接列表
func (m *defaultInternalService) ListLongConnection(ctx context.Context, in *ListLongConnectionReq, opts ...grpc.CallOption) (*ListLongConnectionResp, error) {
	client := peerpb.NewInternalServiceClient(m.cli.Conn())
	return client.ListLongConnection(ctx, in, opts...)
}
