// Code generated by goctl. DO NOT EDIT.
// Source: gateway.peer.proto

package connectionservice

import (
	"context"

	"github.com/cherish-chat/xxim-proto/peerpb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GatewayWriteDataContent      = peerpb.GatewayWriteDataContent
	ListLongConnectionReq        = peerpb.ListLongConnectionReq
	ListLongConnectionReq_Filter = peerpb.ListLongConnectionReq_Filter
	ListLongConnectionResp       = peerpb.ListLongConnectionResp

	ConnectionService interface {
		// WriteData 向用户推送数据
		WriteData(ctx context.Context, in *GatewayWriteDataContent, opts ...grpc.CallOption) (*GatewayWriteDataContent, error)
	}

	defaultConnectionService struct {
		cli zrpc.Client
	}
)

func NewConnectionService(cli zrpc.Client) ConnectionService {
	return &defaultConnectionService{
		cli: cli,
	}
}

// WriteData 向用户推送数据
func (m *defaultConnectionService) WriteData(ctx context.Context, in *GatewayWriteDataContent, opts ...grpc.CallOption) (*GatewayWriteDataContent, error) {
	client := peerpb.NewConnectionServiceClient(m.cli.Conn())
	return client.WriteData(ctx, in, opts...)
}
