// Code generated by goctl. DO NOT EDIT.
// Source: gateway.peer.proto

package connectionservice

import (
	"context"

	"github.com/cherish-chat/xxim-proto/peerpb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuthConnectionReq                   = peerpb.AuthConnectionReq
	AuthConnectionResp                  = peerpb.AuthConnectionResp
	GatewayKeepAliveReq                 = peerpb.GatewayKeepAliveReq
	GatewayKeepAliveResp                = peerpb.GatewayKeepAliveResp
	GatewayKickLongConnectionReq        = peerpb.GatewayKickLongConnectionReq
	GatewayKickLongConnectionReq_Filter = peerpb.GatewayKickLongConnectionReq_Filter
	GatewayKickLongConnectionResp       = peerpb.GatewayKickLongConnectionResp
	GatewayWriteDataReq                 = peerpb.GatewayWriteDataReq
	GatewayWriteDataReq_Filter          = peerpb.GatewayWriteDataReq_Filter
	GatewayWriteDataResp                = peerpb.GatewayWriteDataResp
	ListLongConnectionReq               = peerpb.ListLongConnectionReq
	ListLongConnectionReq_Filter        = peerpb.ListLongConnectionReq_Filter
	ListLongConnectionResp              = peerpb.ListLongConnectionResp
	VerifyConnectionReq                 = peerpb.VerifyConnectionReq
	VerifyConnectionResp                = peerpb.VerifyConnectionResp

	ConnectionService interface {
		// ListLongConnection 获取长连接列表
		ListLongConnection(ctx context.Context, in *ListLongConnectionReq, opts ...grpc.CallOption) (*ListLongConnectionResp, error)
		// GatewayKickLongConnection 踢掉连接
		GatewayKickLongConnection(ctx context.Context, in *GatewayKickLongConnectionReq, opts ...grpc.CallOption) (*GatewayKickLongConnectionResp, error)
	}

	defaultConnectionService struct {
		cli zrpc.Client
	}
)

func NewConnectionService(cli zrpc.Client) ConnectionService {
	return &defaultConnectionService{
		cli: cli,
	}
}

// ListLongConnection 获取长连接列表
func (m *defaultConnectionService) ListLongConnection(ctx context.Context, in *ListLongConnectionReq, opts ...grpc.CallOption) (*ListLongConnectionResp, error) {
	client := peerpb.NewConnectionServiceClient(m.cli.Conn())
	return client.ListLongConnection(ctx, in, opts...)
}

// GatewayKickLongConnection 踢掉连接
func (m *defaultConnectionService) GatewayKickLongConnection(ctx context.Context, in *GatewayKickLongConnectionReq, opts ...grpc.CallOption) (*GatewayKickLongConnectionResp, error) {
	client := peerpb.NewConnectionServiceClient(m.cli.Conn())
	return client.GatewayKickLongConnection(ctx, in, opts...)
}
