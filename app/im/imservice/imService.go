// Code generated by goctl. DO NOT EDIT!
// Source: im.proto

package imservice

import (
	"context"

	"github.com/cherish-chat/xxim-server/common/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseReq             = pb.BaseReq
	MsgData             = pb.MsgData
	MsgData_Conv        = pb.MsgData_Conv
	MsgData_MsgOptions  = pb.MsgData_MsgOptions
	MsgData_OfflinePush = pb.MsgData_OfflinePush
	MsgToMQData         = pb.MsgToMQData
	SendMsgReq          = pb.SendMsgReq
	SendMsgResp         = pb.SendMsgResp

	ImService interface {
		// SendMsg 发送消息到 pulsar
		SendMsg(ctx context.Context, in *SendMsgReq, opts ...grpc.CallOption) (*SendMsgResp, error)
	}

	defaultImService struct {
		cli zrpc.Client
	}
)

func NewImService(cli zrpc.Client) ImService {
	return &defaultImService{
		cli: cli,
	}
}

// SendMsg 发送消息到 pulsar
func (m *defaultImService) SendMsg(ctx context.Context, in *SendMsgReq, opts ...grpc.CallOption) (*SendMsgResp, error) {
	client := pb.NewImServiceClient(m.cli.Conn())
	return client.SendMsg(ctx, in, opts...)
}
