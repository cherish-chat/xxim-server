// Code generated by goctl. DO NOT EDIT!
// Source: relation.proto

package relationservice

import (
	"context"

	"github.com/cherish-chat/xxim-server/common/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AreBlackListReq  = pb.AreBlackListReq
	AreBlackListResp = pb.AreBlackListResp
	AreFriendsReq    = pb.AreFriendsReq
	AreFriendsResp   = pb.AreFriendsResp

	RelationService interface {
		AreFriends(ctx context.Context, in *AreFriendsReq, opts ...grpc.CallOption) (*AreFriendsResp, error)
		AreBlackList(ctx context.Context, in *AreBlackListReq, opts ...grpc.CallOption) (*AreBlackListResp, error)
	}

	defaultRelationService struct {
		cli zrpc.Client
	}
)

func NewRelationService(cli zrpc.Client) RelationService {
	return &defaultRelationService{
		cli: cli,
	}
}

func (m *defaultRelationService) AreFriends(ctx context.Context, in *AreFriendsReq, opts ...grpc.CallOption) (*AreFriendsResp, error) {
	client := pb.NewRelationServiceClient(m.cli.Conn())
	return client.AreFriends(ctx, in, opts...)
}

func (m *defaultRelationService) AreBlackList(ctx context.Context, in *AreBlackListReq, opts ...grpc.CallOption) (*AreBlackListResp, error) {
	client := pb.NewRelationServiceClient(m.cli.Conn())
	return client.AreBlackList(ctx, in, opts...)
}
