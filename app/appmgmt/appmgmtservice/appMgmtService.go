// Code generated by goctl. DO NOT EDIT!
// Source: appmgmt.proto

package appmgmtservice

import (
	"context"

	"github.com/cherish-chat/xxim-server/common/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AppMgmtConfig           = pb.AppMgmtConfig
	GetAllAppMgmtConfigReq  = pb.GetAllAppMgmtConfigReq
	GetAllAppMgmtConfigResp = pb.GetAllAppMgmtConfigResp
	UpdateAppMgmtConfigReq  = pb.UpdateAppMgmtConfigReq
	UpdateAppMgmtConfigResp = pb.UpdateAppMgmtConfigResp

	AppMgmtService interface {
		GetAllAppMgmtConfig(ctx context.Context, in *GetAllAppMgmtConfigReq, opts ...grpc.CallOption) (*GetAllAppMgmtConfigResp, error)
		UpdateAppMgmtConfig(ctx context.Context, in *UpdateAppMgmtConfigReq, opts ...grpc.CallOption) (*UpdateAppMgmtConfigResp, error)
	}

	defaultAppMgmtService struct {
		cli zrpc.Client
	}
)

func NewAppMgmtService(cli zrpc.Client) AppMgmtService {
	return &defaultAppMgmtService{
		cli: cli,
	}
}

func (m *defaultAppMgmtService) GetAllAppMgmtConfig(ctx context.Context, in *GetAllAppMgmtConfigReq, opts ...grpc.CallOption) (*GetAllAppMgmtConfigResp, error) {
	client := pb.NewAppMgmtServiceClient(m.cli.Conn())
	return client.GetAllAppMgmtConfig(ctx, in, opts...)
}

func (m *defaultAppMgmtService) UpdateAppMgmtConfig(ctx context.Context, in *UpdateAppMgmtConfigReq, opts ...grpc.CallOption) (*UpdateAppMgmtConfigResp, error) {
	client := pb.NewAppMgmtServiceClient(m.cli.Conn())
	return client.UpdateAppMgmtConfig(ctx, in, opts...)
}
