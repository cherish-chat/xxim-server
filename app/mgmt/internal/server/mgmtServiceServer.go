// Code generated by goctl. DO NOT EDIT!
// Source: mgmt.proto

package server

import (
	"context"

	"github.com/cherish-chat/xxim-server/app/mgmt/internal/logic"
	"github.com/cherish-chat/xxim-server/app/mgmt/internal/svc"
	"github.com/cherish-chat/xxim-server/common/pb"
)

type MgmtServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedMgmtServiceServer
}

func NewMgmtServiceServer(svcCtx *svc.ServiceContext) *MgmtServiceServer {
	return &MgmtServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *MgmtServiceServer) AfterConnect(ctx context.Context, in *pb.AfterConnectReq) (*pb.CommonResp, error) {
	l := logic.NewAfterConnectLogic(ctx, s.svcCtx)
	return l.AfterConnect(in)
}

func (s *MgmtServiceServer) AfterDisconnect(ctx context.Context, in *pb.AfterDisconnectReq) (*pb.CommonResp, error) {
	l := logic.NewAfterDisconnectLogic(ctx, s.svcCtx)
	return l.AfterDisconnect(in)
}

func (s *MgmtServiceServer) GetServerConfig(ctx context.Context, in *pb.GetServerConfigReq) (*pb.GetServerConfigResp, error) {
	l := logic.NewGetServerConfigLogic(ctx, s.svcCtx)
	return l.GetServerConfig(in)
}

func (s *MgmtServiceServer) GetServerAllConfig(ctx context.Context, in *pb.GetServerAllConfigReq) (*pb.GetServerAllConfigResp, error) {
	l := logic.NewGetServerAllConfigLogic(ctx, s.svcCtx)
	return l.GetServerAllConfig(in)
}
