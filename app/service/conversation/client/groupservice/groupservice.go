// Code generated by goctl. DO NOT EDIT.
// Source: conversation.peer.proto

package groupservice

import (
	"context"

	"github.com/cherish-chat/xxim-proto/peerpb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChannelAfterKeepAliveReq                                = peerpb.ChannelAfterKeepAliveReq
	ChannelAfterKeepAliveResp                               = peerpb.ChannelAfterKeepAliveResp
	ChannelAfterOfflineReq                                  = peerpb.ChannelAfterOfflineReq
	ChannelAfterOfflineResp                                 = peerpb.ChannelAfterOfflineResp
	ChannelAfterOnlineReq                                   = peerpb.ChannelAfterOnlineReq
	ChannelAfterOnlineResp                                  = peerpb.ChannelAfterOnlineResp
	CountCreateGroupReq                                     = peerpb.CountCreateGroupReq
	CountCreateGroupResp                                    = peerpb.CountCreateGroupResp
	CountFriendReq                                          = peerpb.CountFriendReq
	CountFriendResp                                         = peerpb.CountFriendResp
	CountJoinGroupReq                                       = peerpb.CountJoinGroupReq
	CountJoinGroupResp                                      = peerpb.CountJoinGroupResp
	DeleteChannelMemberReq                                  = peerpb.DeleteChannelMemberReq
	DeleteChannelMemberResp                                 = peerpb.DeleteChannelMemberResp
	FriendAfterKeepAliveReq                                 = peerpb.FriendAfterKeepAliveReq
	FriendAfterKeepAliveResp                                = peerpb.FriendAfterKeepAliveResp
	FriendAfterOfflineReq                                   = peerpb.FriendAfterOfflineReq
	FriendAfterOfflineResp                                  = peerpb.FriendAfterOfflineResp
	FriendAfterOnlineReq                                    = peerpb.FriendAfterOnlineReq
	FriendAfterOnlineResp                                   = peerpb.FriendAfterOnlineResp
	FriendApplyHandleReq                                    = peerpb.FriendApplyHandleReq
	FriendApplyHandleResp                                   = peerpb.FriendApplyHandleResp
	FriendApplyReq                                          = peerpb.FriendApplyReq
	FriendApplyResp                                         = peerpb.FriendApplyResp
	GroupAfterKeepAliveReq                                  = peerpb.GroupAfterKeepAliveReq
	GroupAfterKeepAliveResp                                 = peerpb.GroupAfterKeepAliveResp
	GroupAfterOfflineReq                                    = peerpb.GroupAfterOfflineReq
	GroupAfterOfflineResp                                   = peerpb.GroupAfterOfflineResp
	GroupAfterOnlineReq                                     = peerpb.GroupAfterOnlineReq
	GroupAfterOnlineResp                                    = peerpb.GroupAfterOnlineResp
	GroupCreateReq                                          = peerpb.GroupCreateReq
	GroupCreateResp                                         = peerpb.GroupCreateResp
	ListChannelSubscribersReq                               = peerpb.ListChannelSubscribersReq
	ListChannelSubscribersReq_Filter                        = peerpb.ListChannelSubscribersReq_Filter
	ListChannelSubscribersReq_Option                        = peerpb.ListChannelSubscribersReq_Option
	ListChannelSubscribersResp                              = peerpb.ListChannelSubscribersResp
	ListChannelSubscribersResp_Subscriber                   = peerpb.ListChannelSubscribersResp_Subscriber
	ListFriendApplyReq                                      = peerpb.ListFriendApplyReq
	ListFriendApplyReq_Filter                               = peerpb.ListFriendApplyReq_Filter
	ListFriendApplyReq_Option                               = peerpb.ListFriendApplyReq_Option
	ListFriendApplyResp                                     = peerpb.ListFriendApplyResp
	ListFriendApplyResp_FriendApply                         = peerpb.ListFriendApplyResp_FriendApply
	ListGroupSubscribersReq                                 = peerpb.ListGroupSubscribersReq
	ListGroupSubscribersReq_Filter                          = peerpb.ListGroupSubscribersReq_Filter
	ListGroupSubscribersReq_Option                          = peerpb.ListGroupSubscribersReq_Option
	ListGroupSubscribersResp                                = peerpb.ListGroupSubscribersResp
	ListGroupSubscribersResp_Subscriber                     = peerpb.ListGroupSubscribersResp_Subscriber
	ListJoinedConversationsReq                              = peerpb.ListJoinedConversationsReq
	ListJoinedConversationsReq_Filter                       = peerpb.ListJoinedConversationsReq_Filter
	ListJoinedConversationsReq_Filter_SettingKV             = peerpb.ListJoinedConversationsReq_Filter_SettingKV
	ListJoinedConversationsReq_Option                       = peerpb.ListJoinedConversationsReq_Option
	ListJoinedConversationsResp                             = peerpb.ListJoinedConversationsResp
	ListJoinedConversationsResp_Conversation                = peerpb.ListJoinedConversationsResp_Conversation
	ListJoinedConversationsResp_Conversation_SelfMemberInfo = peerpb.ListJoinedConversationsResp_Conversation_SelfMemberInfo
	ListMyChannelsReq                                       = peerpb.ListMyChannelsReq
	ListMyChannelsReq_Filter                                = peerpb.ListMyChannelsReq_Filter
	ListMyChannelsReq_Option                                = peerpb.ListMyChannelsReq_Option
	ListMyChannelsResp                                      = peerpb.ListMyChannelsResp
	ListMyChannelsResp_MyChannel                            = peerpb.ListMyChannelsResp_MyChannel
	ListMyJoinedGroupReq                                    = peerpb.ListMyJoinedGroupReq
	ListMyJoinedGroupReq_Filter                             = peerpb.ListMyJoinedGroupReq_Filter
	ListMyJoinedGroupReq_Option                             = peerpb.ListMyJoinedGroupReq_Option
	ListMyJoinedGroupResp                                   = peerpb.ListMyJoinedGroupResp
	ListMyJoinedGroupResp_Group                             = peerpb.ListMyJoinedGroupResp_Group
	UpsertChannelMemberReq                                  = peerpb.UpsertChannelMemberReq
	UpsertChannelMemberResp                                 = peerpb.UpsertChannelMemberResp

	GroupService interface {
		GroupAfterKeepAlive(ctx context.Context, in *GroupAfterKeepAliveReq, opts ...grpc.CallOption) (*GroupAfterKeepAliveResp, error)
		GroupAfterOnline(ctx context.Context, in *GroupAfterOnlineReq, opts ...grpc.CallOption) (*GroupAfterOnlineResp, error)
		GroupAfterOffline(ctx context.Context, in *GroupAfterOfflineReq, opts ...grpc.CallOption) (*GroupAfterOfflineResp, error)
		GroupCreate(ctx context.Context, in *GroupCreateReq, opts ...grpc.CallOption) (*GroupCreateResp, error)
		CountJoinGroup(ctx context.Context, in *CountJoinGroupReq, opts ...grpc.CallOption) (*CountJoinGroupResp, error)
		CountCreateGroup(ctx context.Context, in *CountCreateGroupReq, opts ...grpc.CallOption) (*CountCreateGroupResp, error)
		ListGroupSubscribers(ctx context.Context, in *ListGroupSubscribersReq, opts ...grpc.CallOption) (*ListGroupSubscribersResp, error)
		ListMyJoinedGroup(ctx context.Context, in *ListMyJoinedGroupReq, opts ...grpc.CallOption) (*ListMyJoinedGroupResp, error)
	}

	defaultGroupService struct {
		cli zrpc.Client
	}
)

func NewGroupService(cli zrpc.Client) GroupService {
	return &defaultGroupService{
		cli: cli,
	}
}

func (m *defaultGroupService) GroupAfterKeepAlive(ctx context.Context, in *GroupAfterKeepAliveReq, opts ...grpc.CallOption) (*GroupAfterKeepAliveResp, error) {
	client := peerpb.NewGroupServiceClient(m.cli.Conn())
	return client.GroupAfterKeepAlive(ctx, in, opts...)
}

func (m *defaultGroupService) GroupAfterOnline(ctx context.Context, in *GroupAfterOnlineReq, opts ...grpc.CallOption) (*GroupAfterOnlineResp, error) {
	client := peerpb.NewGroupServiceClient(m.cli.Conn())
	return client.GroupAfterOnline(ctx, in, opts...)
}

func (m *defaultGroupService) GroupAfterOffline(ctx context.Context, in *GroupAfterOfflineReq, opts ...grpc.CallOption) (*GroupAfterOfflineResp, error) {
	client := peerpb.NewGroupServiceClient(m.cli.Conn())
	return client.GroupAfterOffline(ctx, in, opts...)
}

func (m *defaultGroupService) GroupCreate(ctx context.Context, in *GroupCreateReq, opts ...grpc.CallOption) (*GroupCreateResp, error) {
	client := peerpb.NewGroupServiceClient(m.cli.Conn())
	return client.GroupCreate(ctx, in, opts...)
}

func (m *defaultGroupService) CountJoinGroup(ctx context.Context, in *CountJoinGroupReq, opts ...grpc.CallOption) (*CountJoinGroupResp, error) {
	client := peerpb.NewGroupServiceClient(m.cli.Conn())
	return client.CountJoinGroup(ctx, in, opts...)
}

func (m *defaultGroupService) CountCreateGroup(ctx context.Context, in *CountCreateGroupReq, opts ...grpc.CallOption) (*CountCreateGroupResp, error) {
	client := peerpb.NewGroupServiceClient(m.cli.Conn())
	return client.CountCreateGroup(ctx, in, opts...)
}

func (m *defaultGroupService) ListGroupSubscribers(ctx context.Context, in *ListGroupSubscribersReq, opts ...grpc.CallOption) (*ListGroupSubscribersResp, error) {
	client := peerpb.NewGroupServiceClient(m.cli.Conn())
	return client.ListGroupSubscribers(ctx, in, opts...)
}

func (m *defaultGroupService) ListMyJoinedGroup(ctx context.Context, in *ListMyJoinedGroupReq, opts ...grpc.CallOption) (*ListMyJoinedGroupResp, error) {
	client := peerpb.NewGroupServiceClient(m.cli.Conn())
	return client.ListMyJoinedGroup(ctx, in, opts...)
}
