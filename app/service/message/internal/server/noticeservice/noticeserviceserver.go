// Code generated by goctl. DO NOT EDIT.
// Source: message.peer.proto

package server

import (
	"context"

	"github.com/cherish-chat/xxim-proto/peerpb"
	"github.com/cherish-chat/xxim-server/app/service/message/internal/logic/noticeservice"
	"github.com/cherish-chat/xxim-server/app/service/message/internal/svc"
)

type NoticeServiceServer struct {
	svcCtx *svc.ServiceContext
	peerpb.UnimplementedNoticeServiceServer
}

func NewNoticeServiceServer(svcCtx *svc.ServiceContext) *NoticeServiceServer {
	return &NoticeServiceServer{
		svcCtx: svcCtx,
	}
}

// NoticeSend 通知发送
func (s *NoticeServiceServer) NoticeSend(ctx context.Context, in *peerpb.NoticeSendReq) (*peerpb.NoticeSendResp, error) {
	l := noticeservicelogic.NewNoticeSendLogic(ctx, s.svcCtx)
	return l.NoticeSend(in)
}
