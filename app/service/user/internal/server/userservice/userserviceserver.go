// Code generated by goctl. DO NOT EDIT.
// Source: user.peer.proto

package server

import (
	"context"

	"github.com/cherish-chat/xxim-proto/peerpb"
	"github.com/cherish-chat/xxim-server/app/service/user/internal/logic/userservice"
	"github.com/cherish-chat/xxim-server/app/service/user/internal/svc"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	peerpb.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

// UpdateUserProfileMap 更新用户个人信息
func (s *UserServiceServer) UpdateUserProfileMap(ctx context.Context, in *peerpb.UpdateUserProfileMapReq) (*peerpb.UpdateUserProfileMapResp, error) {
	l := userservicelogic.NewUpdateUserProfileMapLogic(ctx, s.svcCtx)
	return l.UpdateUserProfileMap(in)
}

// UpdateUserExtraMap 更新用户扩展信息
func (s *UserServiceServer) UpdateUserExtraMap(ctx context.Context, in *peerpb.UpdateUserExtraMapReq) (*peerpb.UpdateUserExtraMapResp, error) {
	l := userservicelogic.NewUpdateUserExtraMapLogic(ctx, s.svcCtx)
	return l.UpdateUserExtraMap(in)
}

// UpdateUserCountMap 更新用户计数信息
func (s *UserServiceServer) UpdateUserCountMap(ctx context.Context, in *peerpb.UpdateUserCountMapReq) (*peerpb.UpdateUserCountMapResp, error) {
	l := userservicelogic.NewUpdateUserCountMapLogic(ctx, s.svcCtx)
	return l.UpdateUserCountMap(in)
}

// GetSelfUserInfo 获取自己的用户信息
func (s *UserServiceServer) GetSelfUserInfo(ctx context.Context, in *peerpb.GetSelfUserInfoReq) (*peerpb.GetSelfUserInfoResp, error) {
	l := userservicelogic.NewGetSelfUserInfoLogic(ctx, s.svcCtx)
	return l.GetSelfUserInfo(in)
}

// GetUserInfo 获取用户信息
func (s *UserServiceServer) GetUserInfo(ctx context.Context, in *peerpb.GetUserInfoReq) (*peerpb.GetUserInfoResp, error) {
	l := userservicelogic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

// GetUserModelById 获取用户模型
func (s *UserServiceServer) GetUserModelById(ctx context.Context, in *peerpb.GetUserModelByIdReq) (*peerpb.GetUserModelByIdResp, error) {
	l := userservicelogic.NewGetUserModelByIdLogic(ctx, s.svcCtx)
	return l.GetUserModelById(in)
}

// GetUserModelByIds 批量获取用户模型
func (s *UserServiceServer) GetUserModelByIds(ctx context.Context, in *peerpb.GetUserModelByIdsReq) (*peerpb.GetUserModelByIdsResp, error) {
	l := userservicelogic.NewGetUserModelByIdsLogic(ctx, s.svcCtx)
	return l.GetUserModelByIds(in)
}
