// Code generated by goctl. DO NOT EDIT.
// Source: third.peer.proto

package server

import (
	"context"

	"github.com/cherish-chat/xxim-proto/peerpb"
	"github.com/cherish-chat/xxim-server/app/service/third/internal/logic/smsservice"
	"github.com/cherish-chat/xxim-server/app/service/third/internal/svc"
)

type SmsServiceServer struct {
	svcCtx *svc.ServiceContext
	peerpb.UnimplementedSmsServiceServer
}

func NewSmsServiceServer(svcCtx *svc.ServiceContext) *SmsServiceServer {
	return &SmsServiceServer{
		svcCtx: svcCtx,
	}
}

// SmsCodeSend 发送短信
func (s *SmsServiceServer) SmsCodeSend(ctx context.Context, in *peerpb.SmsCodeSendReq) (*peerpb.SmsCodeSendResp, error) {
	l := smsservicelogic.NewSmsCodeSendLogic(ctx, s.svcCtx)
	return l.SmsCodeSend(in)
}

// SmsCodeVerify 验证短信
func (s *SmsServiceServer) SmsCodeVerify(ctx context.Context, in *peerpb.SmsCodeVerifyReq) (*peerpb.SmsCodeVerifyResp, error) {
	l := smsservicelogic.NewSmsCodeVerifyLogic(ctx, s.svcCtx)
	return l.SmsCodeVerify(in)
}
